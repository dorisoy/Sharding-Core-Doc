<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml" rel="self" type="application/rss+xml"/>
    <title>ShardingCore官方文档</title>
    <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/</link>
    <description>ShardingCore官方文档</description>
    <language>zh-CN</language>
    <pubDate>Wed, 06 Jul 2022 05:06:07 GMT</pubDate>
    <lastBuildDate>Wed, 06 Jul 2022 05:06:07 GMT</lastBuildDate>
    <generator>@mr-hope/vuepress-plugin-feed</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <copyright>Copyright by xuejiaming</copyright>
    <category>高级</category>
    <category>AbpVNext集成</category>
    <category>性能测试</category>
    <category>开发者文档</category>
    <category>Advance</category>
    <category>abp</category>
    <category>Adv</category>
    <category>Guide</category>
    <category>使用指南</category>
    <category>Important</category>
    <category>查询</category>
    <category>常见的问题</category>
    <category>路由</category>
    <category>单元测试覆盖率</category>
    <category>x.3升级到x.4指南</category>
    <category>x.5升级到x.6指南</category>
    <category>重要</category>
    <category>查询注意事项</category>
    <category>读写分离</category>
    <category>多租户</category>
    <item>
      <title>批量操作</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/batch-operate/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/batch-operate/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">批量操作</source>
      <category>高级</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="批处理"> 批处理</h2>
<p>批处理时我们程序在运行时常用的技术,用于在大数据量时的高效性和便捷性</p>
<h2 id="efcore批量处理生态"> efcore批量处理生态</h2>
<p>efcore有着许许多多的批处理生态，目前我们熟知的有<a href="https://github.com/zzzprojects/EntityFramework-Plus" target="_blank" rel="noopener noreferrer"><code>Z.EntityFramework.Plus.EFCore</code></a>还有<a href="https://github.com/borisdj/EFCore.BulkExtensions" target="_blank" rel="noopener noreferrer"><code>EFCore.BulkExtensions</code></a>等等一些列的，虽然各个框架五花八门但是在支持方面<code>sharding-cor</code>e表示我都支持</p>
<h2 id="使用"> 使用</h2>
<div><pre><code><span><span>var</span></span> list <span>=</span> <span>new</span> <span>List<span>&lt;</span>SysUserMod<span>></span></span><span>(</span><span>)</span><span>;</span>
            <span>///通过集合返回出对应的k-v归集通过事务开启</span>
            <span><span>var</span></span> dbContexts <span>=</span> _defaultTableDbContext<span>.</span><span>BulkShardingEnumerable</span><span>(</span>list<span>)</span><span>;</span>
            <span>//var dbContexts = _defaultTableDbContext.BulkShardingTableEnumerable(list); //if only sharding table</span>
            
           
                    <span>foreach</span> <span>(</span><span><span>var</span></span> dataSourceMap <span>in</span> dbContexts<span>)</span>
                    <span>{</span>
                        <span>foreach</span> <span>(</span><span><span>var</span></span> tailMap <span>in</span> dataSourceMap<span>.</span>Value<span>)</span>
                        <span>{</span>
                            tailMap<span>.</span>Key<span>.</span><span>BulkInsert</span><span>(</span>tailMap<span>.</span>Value<span>.</span><span>ToList</span><span>(</span><span>)</span><span>)</span><span>;</span>
                            <span>//tailMap.Key.BulkDelete(tailMap.Value.ToList());</span>
                            <span>//tailMap.Key.BulkUpdate(tailMap.Value.ToList());</span>
                        <span>}</span>
                    <span>}</span>
                _defaultTableDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
            <span>//or</span>
            <span><span>var</span></span> dbContexts <span>=</span> _defaultTableDbContext<span>.</span><span>BulkShardingEnumerable</span><span>(</span>list<span>)</span><span>;</span>
            <span>//var dbContexts = _defaultTableDbContext.BulkShardingTableEnumerable(list); //if only sharding table</span>
            <span>using</span> <span>(</span><span><span>var</span></span> tran <span>=</span> _defaultTableDbContext<span>.</span>Database<span>.</span><span>BeginTransaction</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                    <span>foreach</span> <span>(</span><span><span>var</span></span> dataSourceMap <span>in</span> dbContexts<span>)</span>
                    <span>{</span>
                        <span>foreach</span> <span>(</span><span><span>var</span></span> tailMap <span>in</span> dataSourceMap<span>.</span>Value<span>)</span>
                        <span>{</span>
                            tailMap<span>.</span>Key<span>.</span><span>BulkInsert</span><span>(</span>tailMap<span>.</span>Value<span>.</span><span>ToList</span><span>(</span><span>)</span><span>)</span><span>;</span>
                            <span>//tailMap.Key.BulkDelete(tailMap.Value.ToList());</span>
                            <span>//tailMap.Key.BulkUpdate(tailMap.Value.ToList());</span>
                        <span>}</span>
                    <span>}</span>
                _defaultTableDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                tran<span>.</span><span>Commit</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br></div></div><p><code>sharding_core</code>会将本次的所有对象都进行分组对应自己的数据源和自己的所在dbcontext内</p>
<p>如果你是按表达式来进行分表的话</p>
<div><pre><code>
            <span><span>var</span></span> dbContexts <span>=</span> _defaultTableDbContext<span>.</span><span>BulkShardingExpression</span><span>(</span>o<span>=></span>o<span>.</span>id<span>==</span><span>"123"</span><span>)</span><span>;</span>
            <span><span>var</span></span> dbContexts <span>=</span> _defaultTableDbContext<span>.</span><span>BulkShardingTableExpression</span><span>(</span>o<span>=></span>o<span>.</span>id<span>==</span><span>"123"</span><span>)</span><span>;</span> <span>//if only sharding table</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>AbpVNext</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/abp/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/abp/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">AbpVNext</source>
      <category>AbpVNext集成</category>
      <pubDate>Fri, 19 Nov 2021 03:23:20 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p><a href="https://github.com/xuejmnet/AbpVNextShardingTodoApp" target="_blank" rel="noopener noreferrer">AbpVNextShardingTodoApp</a></p>
<h2 id="blog"> Blog</h2>
<p><a href="https://www.cnblogs.com/xuejiaming/p/15449819.html" target="_blank" rel="noopener noreferrer">Integrate With AbpVNext Blog</a></p>
<h2 id="code-first"> code first</h2>
<p>首先abp这边使用<code>code first</code>相对比较简单,第一步我们将vs的程序启动项设置为控制台程序<code>Project.DbMigrator</code>并且在该项目下新建一个<code>IDesignTimeDbContextFactory&lt;&gt;</code>的实现类,并且将nuget控制台启动项设置为<code>Project.DbMigrator</code>,然后就可以进行愉快的code first了</p>
]]></content:encoded>
    </item>
    <item>
      <title>Code First</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/code-first/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/code-first/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Code First</source>
      <category>高级</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>用过efcore的小伙伴肯定都知道code first是很久之前就一直在主打的一种编程方式,他可以让我们直接上手编程,而不需要去构建数据库,以一种先写代码后自动创建数据库的模式让开发者从数据库设计中脱离出来，更多的是快速进入到开发的一种状态。</p>
<p>本项目<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.Migrations" target="_blank" rel="noopener noreferrer">demo示例</a></p>
<h2 id="安装"> 安装</h2>
<p>首先无论你是aspnetcore还是普通的控制台程序，我们这边需要做的是新建一个控制台程序，命名为<code>Project.Migrations</code>,如果您是分层架构，那么请对当前的控制台程序进行<code>efcore</code>所在层的类库进行引用。引用的类库如果不存在<code>sharding-core</code>也请安装上。最后安装<code>Microsoft.EntityFrameworkCore.Tools</code>请选择对应的<code>efcore</code>对应版本</p>
<div><pre><code>dotnet <span>add</span> package Microsoft.EntityFrameworkCore.Tools
</code></pre>
<div><span>1</span><br></div></div><h2 id="开始"> 开始</h2>
<p>首先efcore分为以下几步
首先我们创建几个对象分别是分表和部分表的对象，分表对象又分取模和时间分表</p>
<h3 id="创建对象"> 创建对象</h3>
<p>如果是项目引入efcore层可以忽略</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>NoShardingTable</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>int</span></span> Age <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    
    <span>public</span> <span>class</span> <span>ShardingWithDateTime</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>int</span></span> Age <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreateTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    
    <span>public</span> <span>class</span> <span>ShardingWithMod</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>int</span></span> Age <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> TextStr <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> TextStr1 <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> TextStr2 <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><h3 id="创建数据库关系"> 创建数据库关系</h3>
<p>如果是项目引入efcore层可以忽略</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>NoShardingTableMap</span> <span>:</span> <span><span>IEntityTypeConfiguration<span>&lt;</span>NoShardingTable<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityTypeBuilder<span>&lt;</span>NoShardingTable<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Name<span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>NoShardingTable<span>)</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>ShardingWithDateTimeMap</span> <span>:</span> <span><span>IEntityTypeConfiguration<span>&lt;</span>ShardingWithDateTime<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityTypeBuilder<span>&lt;</span>ShardingWithDateTime<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Name<span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>ShardingWithDateTime<span>)</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>ShardingWithModMap</span> <span>:</span> <span><span>IEntityTypeConfiguration<span>&lt;</span>ShardingWithMod<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityTypeBuilder<span>&lt;</span>ShardingWithMod<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Name<span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Name<span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>TextStr<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>.</span><span>HasDefaultValue</span><span>(</span><span>""</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>TextStr1<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>.</span><span>HasDefaultValue</span><span>(</span><span>"123"</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>TextStr2<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>.</span><span>HasDefaultValue</span><span>(</span><span>"123"</span><span>)</span><span>;</span>
            builder<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>ShardingWithMod<span>)</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id="创建dbcontext"> 创建dbcontext</h3>
<p>如果是项目引入efcore层可以忽略</p>
<p>创建dbcontext并且建立关系</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>DefaultShardingTableDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span> <span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>DefaultShardingTableDbContext</span><span>(</span><span>DbContextOptions</span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>

            modelBuilder<span>.</span><span>ApplyConfiguration</span><span>(</span><span>new</span> <span>NoShardingTableMap</span><span>(</span><span>)</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span>ApplyConfiguration</span><span>(</span><span>new</span> <span>ShardingWithModMap</span><span>(</span><span>)</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span>ApplyConfiguration</span><span>(</span><span>new</span> <span>ShardingWithDateTimeMap</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h3 id="分表路由"> 分表路由</h3>
<p>如果引用的层里有对应的可以忽略</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>ShardingWithModVirtualTableRoute</span> <span>:</span> <span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>ShardingWithMod<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>ShardingWithModVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
        <span>{</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>ShardingWithMod<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>ShardingWithDateTimeVirtualTableRoute</span> <span>:</span> <span><span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>ShardingWithDateTime<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>9</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>ShardingWithDateTime<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><h3 id="sqlgenerator"> SqlGenerator</h3>
<p>我们需要对迁移sql生成进行重写,假如我们是<code>SqlServer</code>,<code>MySql</code>亦是如此</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>ShardingSqlServerMigrationsSqlGenerator<span>&lt;</span>TShardingDbContext<span>></span></span> <span>:</span> <span><span>SqlServerMigrationsSqlGenerator</span></span> <span>where</span> <span>TShardingDbContext</span><span>:</span><span><span>DbContext</span><span>,</span><span>IShardingDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>ShardingSqlServerMigrationsSqlGenerator</span><span>(</span><span>MigrationsSqlGeneratorDependencies</span> dependencies<span>,</span> <span>IRelationalAnnotationProvider</span> migrationsAnnotations<span>)</span> <span>:</span> <span>base</span><span>(</span>dependencies<span>,</span> migrationsAnnotations<span>)</span>
        <span>{</span>
        <span>}</span>
        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>Generate</span><span>(</span>
            <span>MigrationOperation</span> operation<span>,</span>
            <span>IModel</span> model<span>,</span>
            <span>MigrationCommandListBuilder</span> builder<span>)</span>
        <span>{</span>
            <span>//获取老旧命令</span>
            <span><span>var</span></span> oldCmds <span>=</span> builder<span>.</span><span>GetCommandList</span><span>(</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            <span>base</span><span>.</span><span>Generate</span><span>(</span>operation<span>,</span> model<span>,</span> builder<span>)</span><span>;</span>
            <span>//获取新的命令</span>
            <span><span>var</span></span> newCmds <span>=</span> builder<span>.</span><span>GetCommandList</span><span>(</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            <span>//比较判断获取增量命令</span>
            <span><span>var</span></span> addCmds <span>=</span> newCmds<span>.</span><span>Where</span><span>(</span>x <span>=></span> <span>!</span>oldCmds<span>.</span><span>Contains</span><span>(</span>x<span>)</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            <span>//替换增量命令下的表名为表名+后缀</span>
            MigrationHelper<span>.</span><span><span>Generate</span><span><span>&lt;</span>TShardingDbContext<span>></span></span></span><span>(</span>operation<span>,</span> builder<span>,</span> Dependencies<span>.</span>SqlGenerationHelper<span>,</span> addCmds<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><h3 id="创建设计"> 创建设计</h3>
<p>创建ShardingDesignTimeDbContextFactory来继承<code>IDesignTimeDbContextFactory&lt;TDbContext&gt;</code></p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>DefaultDesignTimeDbContextFactory</span><span>:</span> <span><span>IDesignTimeDbContextFactory<span>&lt;</span>DefaultShardingTableDbContext<span>></span></span></span>
    <span>{</span> 
        <span>static</span> <span>DefaultDesignTimeDbContextFactory</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> services <span>=</span> <span>new</span> <span>ServiceCollection</span><span>(</span><span>)</span><span>;</span>
    
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>DefaultShardingTableDbContext<span>></span></span></span><span>(</span><span>)</span>
            <span>.</span><span>AddEntityConfig</span><span>(</span>o <span>=></span>
            <span>{</span>
                o<span>.</span>CreateShardingTableOnStart <span>=</span> <span>false</span><span>;</span>
                o<span>.</span>CreateDataBaseOnlyOnStart <span>=</span> <span>true</span><span>;</span>
                o<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>false</span><span>;</span>
                o<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>ShardingWithModVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                o<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>ShardingWithDateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span>
            <span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
            <span>{</span>
                op<span>.</span>ConfigId <span>=</span> <span>"c1"</span><span>;</span>
                op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span>
                        <span>.</span><span><span>ReplaceService</span><span><span>&lt;</span>IMigrationsSqlGenerator<span>,</span> ShardingSqlServerMigrationsSqlGenerator<span>&lt;</span>DefaultShardingTableDbContext<span>></span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                        <span>//.ReplaceService&lt;IMigrationsModelDiffer, RemoveForeignKeyMigrationsModelDiffer>();//如果需要移除外键可以添加这个</span>
                <span>}</span><span>)</span><span>;</span>
                op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>;</span>
                op<span>.</span><span>ReplaceTableEnsureManager</span><span>(</span>sp <span>=></span> <span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>DefaultShardingTableDbContext<span>></span></span><span>(</span><span>)</span><span>)</span><span>;</span>
                op<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBMigration;Integrated Security=True;"</span><span>)</span><span>;</span>
                
            <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>
            services<span>.</span><span>AddLogging</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> buildServiceProvider <span>=</span> services<span>.</span><span>BuildServiceProvider</span><span>(</span><span>)</span><span>;</span>
            ShardingContainer<span>.</span><span>SetServices</span><span>(</span>buildServiceProvider<span>)</span><span>;</span>
            ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>DefaultShardingTableDbContext</span> <span>CreateDbContext</span><span>(</span><span><span>string</span><span>[</span><span>]</span></span> args<span>)</span>
        <span>{</span>
            <span>return</span> ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>DefaultShardingTableDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br></div></div><p>简单说明一下静态构造函数里处理的事情<code>static DefaultDesignTimeDbContextFactory()</code>第一步进行了配置，并且对配置完成后进行了启动(初始化),初始化完成后可以通过<code>ShardingContainer</code>或者<code>IServiceProvider</code>进行<code>DbContext</code>的获取.</p>
<div><p>注意</p>
<p>如果你是一个aspnetcore的项目，那么请务必新建一个控制台程序然后引用efcore层来处理，因为默认<code>efcore-tools</code>的执行是在startup中寻找，但是发现有efcore的初始化会直接拿来使用，但是并不会执行<code>Configure</code>也就是说<code>sharding-core</code>并不会被初始化，就无法被正确处理。</p>
</div>
<h2 id="生成迁移文件"> 生成迁移文件</h2>
<h3 id="打开nuget命令"> 打开nuget命令</h3>
<img src="/sharding-core-doc/nuget.png">
<h3 id="设置启动项"> 设置启动项</h3>
<img src="/sharding-core-doc/setm.png">
<h3 id="迁移初始化命令"> 迁移初始化命令</h3>
<div><pre><code>PM<span>></span> Add-Migration InitSharding
</code></pre>
<div><span>1</span><br></div></div><p>如果控制台出现迁移文件就说明迁移成功</p>
<h3 id="更新到数据库"> 更新到数据库</h3>
<div><pre><code>PM<span>></span> update-Database
</code></pre>
<div><span>1</span><br></div></div><h3 id="生产环境"> 生产环境</h3>
<div><pre><code>PM<span>></span> Script-Migration
</code></pre>
<div><span>1</span><br></div></div><p>如果是生产环境更多的是通过生成脚本来进行手动处理执行</p>
<p>具体可以参考<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.Migrations" target="_blank" rel="noopener noreferrer">Sample.Migrations</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>动态追加分库</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/dynamic-data-source/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/dynamic-data-source/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">动态追加分库</source>
      <category>高级</category>
      <pubDate>Mon, 06 Dec 2021 09:34:16 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="动态分库已经支持但是目前还没有例子后续会增加文档和例子"> 动态分库已经支持但是目前还没有例子后续会增加文档和例子</h2>
]]></content:encoded>
    </item>
    <item>
      <title>动态追加分表</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/dynamic-table/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/dynamic-table/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">动态追加分表</source>
      <category>高级</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="背景"> 背景</h2>
<p>很多时候我们会有一个需求就是如何针对现有的路由进行动态的处理数据和追加新表，默认sharding-core提供的按时间分表都已经提供了该技术，保证按时间分表的路由会在程序正确运行的前提下正确的动态添加分表、分库并且创建对应的分表、分库。</p>
<h2 id="解析按时间分表"> 解析按时间分表</h2>
<h3 id="路由分析"> 路由分析</h3>
<p>我们这边为每个分表对象都需要创建一个分表路由，这个分表的虚拟路由除了告诉框架如何正确的crud外还提供了一个通用的属性就是在程序启动时会返回目前现有数据库的所有表后缀。</p>
<div><pre><code>
    <span>public</span> <span>abstract</span> <span>class</span> <span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>TEntity<span>></span></span> <span>:</span> <span><span>AbstractShardingTimeKeyDateTimeVirtualTableRoute<span>&lt;</span>TEntity<span>></span></span></span> <span>where</span> <span>TEntity</span> <span>:</span> <span><span>class</span></span>
    <span>{</span>
        <span>public</span> <span>abstract</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span><span>;</span>
        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllTails</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> beginTime <span>=</span> ShardingCoreHelper<span>.</span><span>GetCurrentMonthFirstDay</span><span>(</span><span>GetBeginTime</span><span>(</span><span>)</span><span>)</span><span>;</span>
         
            <span><span>var</span></span> tails<span>=</span><span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span><span>;</span>
            <span>//提前创建表</span>
            <span><span>var</span></span> nowTimeStamp <span>=</span>ShardingCoreHelper<span>.</span><span>GetCurrentMonthFirstDay</span><span>(</span>DateTime<span>.</span>Now<span>)</span><span>;</span>
            <span>if</span> <span>(</span>beginTime <span>></span> nowTimeStamp<span>)</span>
                <span>throw</span> <span>new</span> <span>ArgumentException</span><span>(</span><span>"begin time error"</span><span>)</span><span>;</span>
            <span><span>var</span></span> currentTimeStamp <span>=</span> beginTime<span>;</span>
            <span>while</span> <span>(</span>currentTimeStamp <span>&lt;=</span> nowTimeStamp<span>)</span>
            <span>{</span>
                <span><span>var</span></span> tail <span>=</span> <span>ShardingKeyToTail</span><span>(</span>currentTimeStamp<span>)</span><span>;</span>
                tails<span>.</span><span>Add</span><span>(</span>tail<span>)</span><span>;</span>
                currentTimeStamp <span>=</span> ShardingCoreHelper<span>.</span><span>GetNextMonthFirstDay</span><span>(</span>currentTimeStamp<span>)</span><span>;</span>
            <span>}</span>
            <span>return</span> tails<span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><p>首先上述代码是一个简单的按时间分表按月分，这边我只列出了两个方法相对动态添加比较重要，第一个是<code>GetBeginTime</code>，这个方法要求返回一个时间这个时间用于后续的<code>GetAllTails</code>.
我们接着来看<code>GetAllTails</code>内部是获取<code>GetBeginTime</code>值然后计算出这个之间的当前月份的第一天，然后再对当前时间进行计算算出当前时间月份的第一天，那么后续进行两个值相差的每个月就是系统中这张表按时间分表的所有后缀.
<code>GetAllTails</code>仅在启动时被调用一次后续,用于启动时判断，后续如果需要获取可以通过<code>IVirtualTableManager&lt;TShardingDbContext&gt;</code> 获取对应的所有的表后缀<code>virtualTableManager.GetVirtualTable(entityType).GetTableAllTails()</code></p>
<div><p>注意</p>
<p>!!!<code>GetAllTails</code>仅在启动时被调用一次后续,用于启动时判断!!!
!!!<code>GetAllTails</code>仅在启动时被调用一次后续,用于启动时判断!!!
!!!<code>GetAllTails</code>仅在启动时被调用一次后续,用于启动时判断!!!</p>
</div>
<h3 id="建表的分析"> 建表的分析</h3>
<div><pre><code>        <span>public</span> <span>Task</span> <span>ExecuteAsync</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> virtualTableManager <span>=</span> <span>(</span>IVirtualTableManager<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IVirtualTableManager<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>EntityMetadata<span>.</span>ShardingDbContextType<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> virtualTable <span>=</span> virtualTableManager<span>.</span><span>GetVirtualTable</span><span>(</span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>)</span><span>;</span>
            _logger<span>.</span><span>LogDebug</span><span>(</span><span><span>$"get </span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>'s virtualTable "</span></span><span>)</span><span>;</span>
            <span>if</span> <span>(</span>virtualTable <span>==</span> <span>null</span><span>)</span>
            <span>{</span>
                _logger<span>.</span><span>LogDebug</span><span>(</span><span><span>$" </span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>'s virtualTable  is null"</span></span><span>)</span><span>;</span>
                <span>return</span> Task<span>.</span>CompletedTask<span>;</span>
            <span>}</span>
            <span><span>var</span></span> entityMetadataManager <span>=</span> <span>(</span>IEntityMetadataManager<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IEntityMetadataManager<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>EntityMetadata<span>.</span>ShardingDbContextType<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> virtualDataSource <span>=</span> <span>(</span>IVirtualDataSource<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IVirtualDataSource<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>EntityMetadata<span>.</span>ShardingDbContextType<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> tableCreator <span>=</span> <span>(</span>IShardingTableCreator<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IShardingTableCreator<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>EntityMetadata<span>.</span>ShardingDbContextType<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> now <span>=</span> DateTime<span>.</span>Now<span>.</span><span>AddMinutes</span><span>(</span><span>10</span><span>)</span><span>;</span>
            <span><span>var</span></span> tail <span>=</span> virtualTable<span>.</span><span>GetVirtualRoute</span><span>(</span><span>)</span><span>.</span><span>ShardingKeyToTail</span><span>(</span>now<span>)</span><span>;</span>
            <span>ISet<span>&lt;</span><span>string</span><span>></span></span> dataSources <span>=</span> <span>new</span> <span>HashSet<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span><span>;</span>
            <span>if</span> <span>(</span>entityMetadataManager<span>.</span><span>IsShardingDataSource</span><span>(</span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>)</span><span>)</span>
            <span>{</span>
                <span><span>var</span></span> virtualDataSourceRoute <span>=</span> virtualDataSource<span>.</span><span>GetRoute</span><span>(</span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>)</span><span>;</span>
                <span>foreach</span> <span>(</span><span><span>var</span></span> dataSourceName <span>in</span> virtualDataSourceRoute<span>.</span><span>GetAllDataSourceNames</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
            <span>else</span>
            <span>{</span>
                dataSources<span>.</span><span>Add</span><span>(</span>virtualDataSource<span>.</span>DefaultDataSourceName<span>)</span><span>;</span>
            <span>}</span>
            _logger<span>.</span><span>LogInformation</span><span>(</span><span><span>$"auto create table data source names:[</span><span><span>{</span><span><span>string</span><span>.</span><span>Join</span><span>(</span><span>","</span><span>,</span> dataSources<span>)</span></span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
            <span>foreach</span> <span>(</span><span><span>var</span></span> dataSource <span>in</span> dataSources<span>)</span>
            <span>{</span>
                <span>try</span>
                <span>{</span>
                    _logger<span>.</span><span>LogInformation</span><span>(</span><span><span>$"begin table tail:[</span><span><span>{</span><span>tail</span><span>}</span></span><span>],entity:[</span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
                    tableCreator<span>.</span><span>CreateTable</span><span>(</span>dataSource<span>,</span> <span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>,</span> tail<span>)</span><span>;</span>
                    _logger<span>.</span><span>LogInformation</span><span>(</span><span><span>$"succeed table tail:[</span><span><span>{</span><span>tail</span><span>}</span></span><span>],entity:[</span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
                <span>}</span>
                <span>catch</span> <span>(</span><span>Exception</span> e<span>)</span>
                <span>{</span>
                    <span>//ignore</span>
                    _logger<span>.</span><span>LogInformation</span><span>(</span><span><span>$"warning table tail:[</span><span><span>{</span><span>tail</span><span>}</span></span><span>],entity:[</span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
                    <span>if</span> <span>(</span>ShowErrorLog<span>)</span>
                        _logger<span>.</span><span>LogError</span><span>(</span>e<span>,</span> <span><span>$"</span><span><span>{</span><span>dataSource</span><span>}</span></span><span> </span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>'s create table error "</span></span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
            virtualTableManager<span>.</span><span>AddPhysicTable</span><span>(</span>virtualTable<span>,</span> <span>new</span> <span>DefaultPhysicTable</span><span>(</span>virtualTable<span>,</span> tail<span>)</span><span>)</span><span>;</span>

            <span>return</span> Task<span>.</span>CompletedTask<span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div><p>代码取自按月分表自动建表任务的代码，当然如果是您自己有定时作业可以完全通过泛型方法的依赖注入获取而不需要反射+强转来实现。</p>
<p><code>IVirtualTableManager&lt;TShardingDbContext&gt;</code> 拥有动态添加物理表的功能<code>AddPhysicTable</code>,来保证程序知道目前有多少个该表的后缀</p>
<p><code>IEntityMetadataManager&lt;TShardingDbContext&gt;</code> 用来判断对应表是否为分表还是分库</p>
<p><code>IVirtualDataSource&lt;TShardingDbContext&gt;</code> 用来获取对应的数据源名称</p>
<p><code>IShardingTableCreator&lt;TShardingDbContext&gt;</code>用来实现表创建</p>
<p>**注意：**因为数据库可能已经创建了对应的表。所以后续的调用会导致表创建抛出异常，这边在无论是否创建成功后都选择将物理表添加到对应的虚拟表里面，并且<code>virtualTableManager.AddPhysicTable</code>已经做好了无法重复添加的校验</p>
<p>**结论：**动态添加表需要满足对应表路由能够正确返回对应目前的数据库表后缀全部数目，在创建对应的数据库表外，还需要对分表对象的<code>IVirtualTable</code>进行追加物理表使框架可以明确知道有这么一张表，并且需要考虑是否需要动态分表路由逻辑，当表后缀有新的添加之后那么是否对应的路由逻辑需要改变呢，比如我们是按租户Id来分表的那么新增后不需要修改路由逻辑，如果我们是取模的那么就需要考虑这个问题,并且需要考虑数据迁移，需要注意下次启动的时候会不会将之前添加的动态表添加进来呢?<code>GetAllTails</code>会不会在下次程序启动的时候不返回本次动态添加的呢</p>
<div><p>注意</p>
<p>!!!框架仅提供分表分库路由不提供数据迁移,数据迁移需要手动实现!!!
!!!框架仅提供分表分库路由不提供数据迁移,数据迁移需要手动实现!!!
!!!框架仅提供分表分库路由不提供数据迁移,数据迁移需要手动实现!!!</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>链接模式</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/connection-mode/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/connection-mode/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">链接模式</source>
      <category>高级</category>
      <pubDate>Mon, 06 Dec 2021 09:34:10 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>链接模式,是一种在分片下用来控制数据库链接数的，毕竟数据库链接池比较有限，所以一般需要很好的控制数据库链接数才可以让框架变得更加的稳定易用,目前<code>ShardingCore</code>采用<code>ShardingSphere</code>的链接模式并且在此基础上针对分页下的链接模式进行了更进一步的优化，大大降低了原先的内存模式下的内存使用数大大提高内存使用率,假设一次查询路由是w个库x张表,跳过y条数据获取z条数据:
旧的链接模式:内存数目为w<em>x</em>(y+z)
新的链接模式:内存数目为:x*(y+z)</p>
<h2 id="链接模式"> 链接模式</h2>
<p>说了这么多这边需要针对<code>ShardingCore</code>在查询下面涉及到N表查询后带来的链接消耗是一个不容小觑的客观因素。所以这边参考<code>ShardingSphere</code>进行了类似原理的实现。就是如果查询涉及不同库那么直接并发，如果是同库的将根据用户配置的单次最大链接进行串行查询，并且动态选择使用流式聚合和内存聚合。</p>
<p>首先我们看下<code>ShardingSphere</code>的链接模式在限制链接数的情况下是如何进行处理的
<img src="/sharding-core-doc/1346660-20211207203944126-2007119993.png" >
针对不同的数据库采用并行执行，针对同一个数据库根据用户配置的最大连接数进行分库串行执行，并且因为需要控制链接数所以会将结果集保存在内存中，最后通过合并返回给客户端数据。
之后我们会讲这个模式的缺点并且<code>ShardingCore</code>是如何进行优化的</p>
<p>你可能已经蒙了这么多名称完全没有一个概念。接下来我将一一进行讲解,首先我们来看下链接模式下有哪些参数</p>
<h2 id="maxqueryconnectionslimit"> MaxQueryConnectionsLimit</h2>
<p>最大并发链接数，就是表示单次查询<code>sharding-core</code>允许使用的dbconnection，默认会加上1就是说如果你配置了<code>MaxQueryConnectionsLimit=10</code>那么实际<code>sharding-core</code>会在同一次查询中开启11条链接最多,为什么是11不是10因为<code>sharding-core</code>会默认开启一个链接用来进行空dbconnection的使用。如果不设置本参数那么默认是cpu线程数<code>Environment.ProcessorCount</code></p>
<h2 id="connectionmode"> ConnectionMode</h2>
<p>链接模式,可以由用户自行指定，使用内存限制,和连接数限制或者系统自行选择最优</p>
<p>链接模式，有三个可选项，分别是：</p>
<h3 id="memory-strictly"> MEMORY_STRICTLY</h3>
<p>内存限制模式最小化内存聚合 流式聚合 同时会有多个链接</p>
<p>MEMORY_STRICTLY的意思是最小化内存使用率，就是非一次性获取所有数据然后采用流式聚合</p>
<h3 id="connection-strictly"> CONNECTION_STRICTLY</h3>
<p>连接数限制模式最小化并发连接数 内存聚合 连接数会有限制</p>
<p>CONNECTION_STRICTLY的意思是最小化连接并发数，就是单次查询并发连接数为设置的连接数<code>MaxQueryConnectionsLimit</code>。因为有限制，所以无法一直挂起多个连接，数据的合并为内存聚合采用最小化内存方式进行优化，而不是无脑使用内存聚合</p>
<h3 id="system-auto"> SYSTEM_AUTO</h3>
<p>系统自动选择内存还是流式聚合</p>
<p>系统自行选择会根据用户的配置采取最小化连接数，但是如果遇到分页则会根据分页策略采取内存限制，因为skip过大会导致内存爆炸</p>
<h2 id="解释"> 解释</h2>
<h4 id="memory-strictly-2"> MEMORY_STRICTLY</h4>
<p><code>MEMORY_STRICTLY</code>内存严格模式，用户使用本属性后将会严格控制查询的聚合方式，将会采用流式聚合的迭代器模式，而不是一次性全部去除相关数据在内存中排序获取，通过用户配置的<code>MaxQueryConnectionsLimit</code>连接数来进行限制，比如<code>MaxQueryConnectionsLimit=2</code>，并且本次查询涉及到一个库3张表，因为程序只允许单次查询能并发2个链接，所以本次查询会被分成2组每组两个，其中第二组只有一个，在这种情况下第一次并发查询2条语句因为采用内存严格所以不会将数据获取到内存，第二次在进行一次查询并将迭代器返回一共组合成3个迭代器后续通过流式聚合+优先级队列进行返回所要的数据，在这种情况下程序的内存是最少的但是消耗的链接也是最大的。当用户手动选择<code>MEMORY_STRICTLY</code>后<code>MaxQueryConnectionsLimit</code>将变成并行数目. 该模式下<code>ShardingCore</code>和<code>ShardingSphere</code>的处理方式类似基本一致
<img src="/sharding-core-doc/1346660-20211207162239960-682662603.png" ></p>
<h4 id="connection-strictly-2"> CONNECTION_STRICTLY</h4>
<p><code>CONNECTION_STRICTLY</code>连接数严格模式，用户使用本属性后将会严格控制查询后的同一个数据库下的同时查询的链接数，不会因为使用流式内存而导致迭代器一致开着，因为一个迭代器查询开着就意味着需要一个链接，如果查询需要聚合3张表那么就需要同时开着三个链接来迭代保证流式聚合。通过用户配置的<code>MaxQueryConnectionsLimit</code>连接数来进行限制，比如<code>MaxQueryConnectionsLimit=2</code>，并且本次查询涉及到一个库3张表，因为程序只允许单次查询能并发2个链接，所以本次查询会被分成2组每组两个，其中第二组只有一个，在这种情况下第一次并发查询2条语句因为采用连接数严格所以不会一直持有链接，会将链接结果进行每组进行合并然后将连接放回，合并时还是采用的流式聚合，会首先将第一组的两个链接进行查询之后将需要的结果通过流式聚合取到内存，然后第二组会自行独立查询并且从<strong>第二次开始</strong>后会将上一次迭代的内存聚合数据进行和本次查询的流式聚合分别一起聚合，保证在分页情况下内存数据量最少。因为如果每组都是用独立的内存聚合那么你有n组就会有n*(skip+take)的数目，而<code>ShardingSphere</code>采用的是更加简单的做法，就是将每组下面的各自节点都自行进行内存聚合，那么如果在skip(10).take(10)的情况下sql会被改写成各组的各个节点分别进行skip(0).take(20)的操作那么2组执行器的第一组将会有40条数据第二组将会有20条数据一共会有60条数据远远操作了我们所需要的20条。所以在这个情况下<code>ShardingCore</code>第一组内存流式聚合会返回20条数据，第二组会将第一组的20条数据和第二组的进行流式聚合内存中还是只有20条数据，虽然是连接数严格但是也做到了最小化内存单元。当用户手动选择<code>CONNECTION_STRICTLY</code>后<code>MaxQueryConnectionsLimit</code>将是正则的最小化链接数限制</p>
<img src="/sharding-core-doc/1346660-20211207162221157-2012213043.png" >
<h4 id="system-auto-2"> SYSTEM_AUTO</h4>
<p><code>SYSTEM_AUTO</code>系统自行选择，这是一个非常帮的选择，因为在这个选择下系统会自动根据用户配置的<code>MaxQueryConnectionsLimit</code>来自行控制是采用流式聚合还是内存聚合，并且因为我们采用的是同数据库下面最小化内存相比其他的解决方案可以更加有效和高性能的来应对各种查询。仅仅只需要配置一个最大连接数限制既可以适配好连接模式。</p>
<p>这边极力推荐大家在不清楚应该用什么模式的时候使用<code>SYSTEM_AUTO</code>并且手动配置<code>MaxQueryConnectionsLimit</code>来确定各个环境下的配置一直而不是采用默认的cpu线程数。</p>
<p>首先我们通过每个数据库被路由到了多少张表进行计算期望用户在配置了xx后应该的并行数来进行分组,sqlCount :表示这个数据库被路由到的表数目，exceptCount :表示计算出来的应该的单次查询并行数</p>
<div><pre><code><span>//代码本质就是向上取整</span>
    <span><span>int</span></span> exceptCount <span>=</span>
                Math<span>.</span><span>Max</span><span>(</span>
                    <span>0</span> <span>==</span> sqlCount <span>%</span> maxQueryConnectionsLimit
                        <span>?</span> sqlCount <span>/</span> maxQueryConnectionsLimit
                        <span>:</span> sqlCount <span>/</span> maxQueryConnectionsLimit <span>+</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>第二次我们通过判断<code>sqlCount</code>和<code>maxQueryConnectionsLimit</code>的大小来确定链接模式的选择</p>
<div><pre><code>
        <span>private</span> <span>ConnectionModeEnum</span> <span>CalcConnectionMode</span><span>(</span><span><span>int</span></span> sqlCount<span>)</span>
        <span>{</span>
            <span>switch</span> <span>(</span>_shardingConfigOption<span>.</span>ConnectionMode<span>)</span>
            <span>{</span>
                <span>case</span> ConnectionModeEnum<span>.</span>MEMORY_STRICTLY<span>:</span>
                <span>case</span> ConnectionModeEnum<span>.</span>CONNECTION_STRICTLY<span>:</span> <span>return</span> _shardingConfigOption<span>.</span>ConnectionMode<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> _shardingConfigOption<span>.</span>MaxQueryConnectionsLimit <span>&lt;</span> sqlCount
                        <span>?</span> ConnectionModeEnum<span>.</span>CONNECTION_STRICTLY
                        <span>:</span> ConnectionModeEnum<span>.</span>MEMORY_STRICTLY<span>;</span> <span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h2 id="比较"> 比较</h2>
<p>针对<code>ShardingSphere</code>的流程图我们可以看到在获取普通数据的时候是没有什么问题的,但是如果遇到分页也就是</p>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> <span>order</span> <span>limit</span> <span>10</span><span>,</span><span>10</span>
</code></pre>
<div><span>1</span><br></div></div><p>这种情况下会被改写成</p>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> <span>order</span> <span>limit</span> <span>0</span><span>,</span><span>20</span>
</code></pre>
<div><span>1</span><br></div></div><p>我们可以看到如果是<code>ShardingSphere</code>的流程模式那么在各个节点处虽然已经将连接数控制好了但是对于每个节点而言都有着20条数据，这种情况下其实是一种非常危险的，因为一旦节点过多并且limit的跳过页数过多每个节点储存的数据将会非常恐怖。</p>
<img src="/sharding-core-doc/1346660-20211207211410345-1235377143.png" >
<p>所以针对这种情况<code>ShardingCore</code>将同库下的各个节点组的查询使用<code>StreamMerge</code>而不是<code>MemoryMerge</code>，并且会对各个节点间建立联系进行聚合保证在同一个数据库下只会有20条数据被加载到内存中，大大降低了内存的使用，提高了内存使用率。
<img src="/sharding-core-doc/1346660-20211207211619902-1640309451.png" ></p>
<p>当然具体情况应该还需要再次进行优化并不是简单的一次优化就搞定的比如当跳过的页数过多之后其实在内存中的一部分数据也会再次进行迭代和新的迭代器比较，这个中间的性能差距可能需要不断地尝试才可以获取一个比较可靠的值</p>
<h2 id="总结"> 总结</h2>
<p>目前已经有很多小伙伴已经在使用<code>SharidingCore</code>了并且在使用的时候也是相对比较简单的配置既可以“完美”目前她在使用的各种框架譬如:AbpVNext....基本上在继承和使用方面可以说是目前efcore生态下最最最完美的了真正做到了<code>三零</code>的框架：<code>零依赖</code>,<code>零学习成本</code>,<code>零业务代码入侵</code></p>
]]></content:encoded>
    </item>
    <item>
      <title>不迁移原表数据分表</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/extension-only/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/extension-only/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">不迁移原表数据分表</source>
      <category>高级</category>
      <pubDate>Sun, 07 Nov 2021 03:49:21 GMT</pubDate>
      <content:encoded><![CDATA[<p>这边十分想用<code>shardiing-core</code>实现分表,但是因为系统里面其他部分很多程序在读这个表,所以这边希望保留原表名的情况下进行分表扩展,那么恭喜你sharding-core支持</p>
]]></content:encoded>
    </item>
    <item>
      <title>多字段分片1</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/multi-sharding-property-1/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/multi-sharding-property-1/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">多字段分片1</source>
      <category>高级</category>
      <pubDate>Sun, 26 Dec 2021 13:29:18 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="背景"> 背景</h2>
<p>什么情况下我们应该使用多字段分片(分表分库),就是如果你的这个对象在所对应的查询中不仅仅只有分片字段支持路由，并且其他字段也支持路由那么可以针对这个字段进行分片配置</p>
<p>举个栗子：这边我们订单量很大，所以我们选择按时间分表，每月一张表，分表字段是CreateTime，那么我们插入更新是很ok的，但是再查询方面会比较蛋疼，具体原因是我们明明是雪花id(或者顺序guid)明明主键可以解析出时间其实我们大概率也是可以得出具体表的
那么我们应该如何处理针对订单主键的查询呢，不好意思不支持，如果我们的订单id外还有一个字段是订单号，这个订单号也是可以具体路由到具体的分表那么我们该如何通过订单号查询快速定位呢，不好意思不支持，除非你带上订单时间，对于有洁癖的程序员这将是一个灾难性的。</p>
<p>基于上述场景sharding-core在x.3.2.x+的版本支持了多字段分表,具体实现原理就是插入，修改根据主分表字段进行处理，查询会根据主分表字段和额外分表字段进行处理取交集查询结果。
这样可以有效的帮助我们在分布式系统里面通过id进行数据交互而不需要额外附带任何字段信息。</p>
<h2 id="实现"> 实现</h2>
<p>我们这边假设一个场景,订单id是long的雪花id，并且创建时间是datetime的订单表，我们针对这张表进行创建时间的分表，具体是按月分表。</p>
<h3 id="创建订单"> 创建订单</h3>
<div><pre><code><span>//订单类</span>
    <span>public</span> <span>class</span> <span>MultiShardingOrder</span>
    <span>{</span>
        <span>public</span> <span><span>long</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreateTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="创建dbcontext"> 创建dbcontext</h3>
<div><pre><code>
<span>//创建dbcontext</span>

    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>MultiShardingOrder<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>ValueGeneratedNever</span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>MultiShardingOrder<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// empty impl</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><h3 id="创建路由"> 创建路由</h3>
<div><pre><code>
<span>//创建路由</span>
<span>public</span> <span>class</span> <span>MultiShardingOrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>MultiShardingOrder<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>MultiShardingOrder<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span><span>;</span>
            builder<span>.</span><span>ShardingExtraProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetExtraRouteFilter</span><span>(</span><span><span>object</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>,</span> <span><span>string</span></span> shardingPropertyName<span>)</span>
        <span>{</span>
            <span>switch</span> <span>(</span>shardingPropertyName<span>)</span>
            <span>{</span>
                <span>case</span> <span>nameof</span><span>(</span>MultiShardingOrder<span>.</span>Id<span>)</span><span>:</span> <span>return</span> <span>GetIdRouteFilter</span><span>(</span>shardingKey<span>,</span> shardingOperator<span>)</span><span>;</span>
                <span>default</span><span>:</span> <span>throw</span> <span>new</span> <span>NotImplementedException</span><span>(</span>shardingPropertyName<span>)</span><span>;</span>
            <span>}</span>
        <span>}</span>

        <span>private</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetIdRouteFilter</span><span>(</span><span><span>object</span></span> shardingKey<span>,</span>
            <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>
            <span>//解析雪花id 需要考虑异常情况,传入的可能不是雪花id那么可以直接返回false因为是and链接所以直接就没有结果了//return tail => false;</span>
            <span><span>var</span></span> analyzeIdToDateTime <span>=</span> SnowflakeId<span>.</span><span>AnalyzeIdToDateTime</span><span>(</span>Convert<span>.</span><span>ToInt64</span><span>(</span>shardingKey<span>)</span><span>)</span><span>;</span>
            <span>//当前时间的tail</span>
            <span><span>var</span></span> t <span>=</span> <span>TimeFormatToTail</span><span>(</span>analyzeIdToDateTime<span>)</span><span>;</span>
            <span>//因为是按月分表所以获取下个月的时间判断id是否是在灵界点创建的</span>
            <span><span>var</span></span> nextMonthFirstDay <span>=</span> ShardingCoreHelper<span>.</span><span>GetNextMonthFirstDay</span><span>(</span>analyzeIdToDateTime<span>)</span><span>;</span>
            <span>if</span> <span>(</span>analyzeIdToDateTime<span>.</span><span>AddSeconds</span><span>(</span><span>10</span><span>)</span> <span>></span> nextMonthFirstDay<span>)</span>
            <span>{</span>
                <span><span>var</span></span> nextT <span>=</span> <span>TimeFormatToTail</span><span>(</span>nextMonthFirstDay<span>)</span><span>;</span>

                <span>if</span> <span>(</span>shardingOperator <span>==</span> ShardingOperatorEnum<span>.</span>Equal<span>)</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> tail <span>==</span> t<span>||</span>tail<span>==</span> nextT<span>;</span>
                <span>}</span>
            <span>}</span>
            <span><span>var</span></span> currentMonthFirstDay <span>=</span> ShardingCoreHelper<span>.</span><span>GetCurrentMonthFirstDay</span><span>(</span>analyzeIdToDateTime<span>)</span><span>;</span>
            <span>if</span> <span>(</span>analyzeIdToDateTime<span>.</span><span>AddSeconds</span><span>(</span><span>-</span><span>10</span><span>)</span> <span>&lt;</span> currentMonthFirstDay<span>)</span>
            <span>{</span>
                <span>//上个月tail</span>
                <span><span>var</span></span> nextT <span>=</span> <span>TimeFormatToTail</span><span>(</span>analyzeIdToDateTime<span>.</span><span>AddSeconds</span><span>(</span><span>-</span><span>10</span><span>)</span><span>)</span><span>;</span>

                <span>if</span> <span>(</span>shardingOperator <span>==</span> ShardingOperatorEnum<span>.</span>Equal<span>)</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> tail <span>==</span> t <span>||</span> tail <span>==</span> nextT<span>;</span>
                <span>}</span>
            <span>}</span>
            <span>else</span>
            <span>{</span>
                <span>if</span> <span>(</span>shardingOperator <span>==</span> ShardingOperatorEnum<span>.</span>Equal<span>)</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>}</span>
            <span>}</span>

            <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>9</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br></div></div><p>框架默认针对CreateTime的进行路由实现(前提是你是用的框架的默认路由),如果是自行实现路由还是一样需要实现<code>GetRouteToFilter(TKey shardingKey, ShardingOperatorEnum shardingOperator)</code></p>
<p><code>ShardingExtraProperty</code>额外分表字段(仅查询生效)</p>
<p><code>GetExtraRouteFilter(object shardingKey, ShardingOperatorEnum shardingOperator, string shardingPropertyName)</code> 如果配置了额外字段并且本次查询会使用到那么<code>sharding-core</code>会将对应的分表字段进行通过这个方法,
默认抛出未实现路由,需要自行实现。这边我们将id雪花id进行了额外分表的处理,并且只处理了equal的方法如果你很厉害可以自行实现大于等于小于等于....</p>
<p>这边为什么不是简单的equal呢而是需要进行这么多的判断，其实因为是这样的，针对一个对象我们可能会进行如下操作</p>
<div><pre><code><span><span>var</span></span> entity<span>=</span><span>new</span> <span>Entity</span><span>(</span><span>)</span>
<span>//执行这边生成出来的id是2021-11-30 23:59:59.999.999</span>
entity<span>.</span>Id<span>=</span><span>"xxx"</span><span>;</span>
<span>//执行这边生成出来的时间是2021-12-01 00:00:00.000.000</span>
entity<span>.</span>CreateTime<span>=</span>DateTime<span>.</span>Now<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><p>那么数据是会被插入到202112这张表,但是如果你只是解析雪花id那么解析出来的是202111这张表,后续会出现数据无法命中的bug,所以这边对解析出来的时间前后进行了额外添加10秒，因为两者的赋值不一定是在一起的中间可能隔了n多的代码多以这个差距你自己实现可以是秒也可以是分</p>
<p>如果是上述情况建议默认吧202111和202112两张表都返回,针对系统而言无非是多查询了一次,效率可以大大滴提高。</p>
<div><pre><code>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Query2</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//查询2021-10-03 07:07:07查询202110</span>
            <span><span>var</span></span> multiOrder <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>MultiShardingOrder<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span> <span>232398109278351360</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span>//查询2021-10-03或07:07:07和2021-12-05 05:05：11查询202110和202112 这边为什么是或因为他是contains,contains的话sharding-core会解析成or</span>
            <span><span>var</span></span> longs <span>=</span> <span>new</span> <span>[</span><span>]</span><span>{</span> <span>232398109278351360</span> <span>,</span> <span>255197859283087360</span> <span>}</span><span>;</span>
            <span><span>var</span></span> multiOrders <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>MultiShardingOrder<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> longs<span>.</span><span>Contains</span><span>(</span>o<span>.</span>Id<span>)</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>11</span><span>,</span> <span>1</span><span>)</span><span>;</span>
            <span>//查询2021-11-21 19:43:00并且要小于2021-11-01 00:00:00查询202111并且202110(因为是小于号所以不带202111)查询出来会报错因为你既要等于202111又要小于202110</span>
            <span>//如何不报错而是返回默认值可以通过启动配置`op.ThrowIfQueryRouteNotMatch = false;`来实现这种情况返回默认值</span>
            <span><span>var</span></span> multiOrder404 <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>MultiShardingOrder<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>250345338962063360</span><span>&amp;&amp;</span>o<span>.</span>CreateTime<span>&lt;</span> dateTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>new</span>
            <span>{</span>
                multiOrder<span>,</span>
                multiOrders<span>,</span>
                multiOrder404
            <span>}</span><span>)</span><span>;</span>

        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><div><p>注意</p>
<p>！！！所有的额外解析都需要自行实现,sharding-core只提供自己的雪花id解析！！！
！！！所有的额外解析都需要自行实现,sharding-core只提供自己的雪花id解析！！！
！！！所有的额外解析都需要自行实现,sharding-core只提供自己的雪花id解析！！！</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>多字段分片2</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/multi-sharding-property-2/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/multi-sharding-property-2/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">多字段分片2</source>
      <category>高级</category>
      <pubDate>Sun, 26 Dec 2021 13:29:18 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="背景"> 背景</h2>
<p>直接开门见山,你有没有这种情况你需要将一批数据用时间分片来进行存储比如订单表,订单表的分片字段是订单的<code>创建时间</code>,并且id是<code>雪花id</code>，<code>订单编号</code>是带时间信息的编号,因为.net下的所有分片方案几乎都是只支持单分片字段,所以当我们不使用分片字段查询也就是订单创建时间查询的话会带来全表查询,导致性能下降,譬如我想用<code>雪花id</code>或者<code>订单编号</code>进行查询，但是带来的却是内部低效的结果,针对这种情况是否有一个好的解决方案呢,有但是需要侵入业务代码,根据雪花id或者订单编号进行解析出对应的时间然后<code>手动指定分片</code>前提是框架支持<code>手动指定</code>.基于上述原因<a href="https://github.com/xuejmnet/sharding-core" target="_blank" rel="noopener noreferrer"><code>ShardingCore</code></a> 带来了全新版本 x.3.2.x+ 支持多字段分片路由,并且拥有很完美的实现,废话不多说我们直接开始吧！！！！！！！！！！！</p>
<h2 id="原理"> 原理</h2>
<p>我们现在假定一个很简单的场景,依然是订单时间按月分片,查询进行如下语句</p>
<div><pre><code>          <span>//这边演示不使用雪花id因为雪花id很难在演示中展示所以使用订单编号进行演示格式:yyyyMMddHHmmss+new Random().Next(0,10000).ToString().PadLeft(4,'0')</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>11</span><span>,</span> <span>1</span><span>)</span><span>;</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>OrderNo<span>==</span> <span>202112201900001111</span><span>&amp;&amp;</span>o<span>.</span>CreateTime<span>&lt;</span> dateTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><p>上述语句OrderNo会查询Order_202112这张表，然后时间索引会查询......Order_202108、Order_202109、Order_202110,然后两者取一个交集我们发现其实是没有结果的,这个时候应该是返回默认值null或者直接报错
这就是一个简单的原理</p>
<h2 id="直接开始"> 直接开始</h2>
<p>接下来我将用订单编号和创建时间来为大演示,数据库采用sqlserve(你也可以换成任意efcore支持的数据库),其中编号格式yyyyMMddHHmmss+new Random().Next(0,10000).ToString().PadLeft(4,'0'),创建时间是DateTime格式并且创建时间按月分表,这边不采用雪花id是因为雪花id的实现会根据workid和centerid的不一样而出现不一样的效果,接下来我们通过简单的5步操作实现多字段分片</p>
<h3 id="添加依赖"> 添加依赖</h3>
<p>首先我们添加两个依赖,一个是<code>ShardingCore</code>一个<code>EFCore.SqlServer</code></p>
<div><pre><code>//请安装最新版本目前x.3.2.x+,第一个版本号6代表efcore的版本号
Install-Package ShardingCore -Version <span>6.3</span>.2

Install-Package Microsoft.EntityFrameworkCore.SqlServer -Version <span>6.0</span>.1
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p><img src="https://img2020.cnblogs.com/blog/1346660/202112/1346660-20211225093421886-2131126936.png" alt="" /></p>
<p><img src="https://img2020.cnblogs.com/blog/1346660/202112/1346660-20211225093505145-1192048101.png" alt="" /></p>
<h3 id="创建一个订单对象"> 创建一个订单对象</h3>
<div><pre><code>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> OrderNo <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreateTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><h3 id="创建dbcontext"> 创建DbContext</h3>
<p>这边就简单的创建了一个dbcontext,并且设置了一下order如何映射到数据库,当然你可以采用attribute的方式而不是一定要fluentapi</p>
<div><pre><code>
    <span>/// &lt;summary></span>
    <span>/// 如果需要支持分表必须要实现&lt;see cref="IShardingTableDbContext"/></span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span>class</span> <span>DefaultDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>DefaultDbContext</span><span>(</span><span>DbContextOptions</span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>o <span>=></span>
            <span>{</span>
                o<span>.</span><span>HasKey</span><span>(</span>p <span>=></span> p<span>.</span>Id<span>)</span><span>;</span>
                o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>OrderNo<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>;</span>
                o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>;</span>
                o<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><h3 id="创建分片路由"> 创建分片路由</h3>
<p>这边我们采用订单创建时间按月分表</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>OrderVirtualRoute</span> <span>:</span> <span><span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>/// &lt;summary></span>
        <span>/// 配置主分表字段是CreateTime,额外分表字段是OrderNo</span>
        <span>/// &lt;/summary></span>
        <span>/// &lt;param name="builder">&lt;/param></span>
        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span><span>;</span>
            builder<span>.</span><span>ShardingExtraProperty</span><span>(</span>o <span>=></span> o<span>.</span>OrderNo<span>)</span><span>;</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// 是否要在程序运行期间自动创建每月的表</span>
        <span>/// &lt;/summary></span>
        <span>/// &lt;returns>&lt;/returns></span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// 分表从何时起创建</span>
        <span>/// &lt;/summary></span>
        <span>/// &lt;returns>&lt;/returns></span>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>9</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// 配置额外分片路由规则</span>
        <span>/// &lt;/summary></span>
        <span>/// &lt;param name="shardingKey">&lt;/param></span>
        <span>/// &lt;param name="shardingOperator">&lt;/param></span>
        <span>/// &lt;param name="shardingPropertyName">&lt;/param></span>
        <span>/// &lt;returns>&lt;/returns></span>
        <span>public</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetExtraRouteFilter</span><span>(</span><span><span>object</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>,</span> <span><span>string</span></span> shardingPropertyName<span>)</span>
        <span>{</span>
            <span>switch</span> <span>(</span>shardingPropertyName<span>)</span>
            <span>{</span>
                <span>case</span> <span>nameof</span><span>(</span>Order<span>.</span>OrderNo<span>)</span><span>:</span> <span>return</span> <span>GetOrderNoRouteFilter</span><span>(</span>shardingKey<span>,</span> shardingOperator<span>)</span><span>;</span>
                <span>default</span><span>:</span> <span>throw</span> <span>new</span> <span>NotImplementedException</span><span>(</span>shardingPropertyName<span>)</span><span>;</span>
            <span>}</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// 订单编号的路由</span>
        <span>/// &lt;/summary></span>
        <span>/// &lt;param name="shardingKey">&lt;/param></span>
        <span>/// &lt;param name="shardingOperator">&lt;/param></span>
        <span>/// &lt;returns>&lt;/returns></span>
        <span>public</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetOrderNoRouteFilter</span><span>(</span><span><span>object</span></span> shardingKey<span>,</span>
            <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>
            <span>//将分表字段转成订单编号</span>
            <span><span>var</span></span> orderNo <span>=</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
            <span>//判断订单编号是否是我们符合的格式</span>
            <span>if</span> <span>(</span><span>!</span><span>CheckOrderNo</span><span>(</span>orderNo<span>,</span> <span>out</span> <span><span>var</span></span> orderTime<span>)</span><span>)</span>
            <span>{</span>
                <span>//如果格式不一样就直接返回false那么本次查询因为是and链接的所以本次查询不会经过任何路由,可以有效的防止恶意攻击</span>
                <span>return</span> tail <span>=></span> <span>false</span><span>;</span>
            <span>}</span>

            <span>//当前时间的tail</span>
            <span><span>var</span></span> currentTail <span>=</span> <span>TimeFormatToTail</span><span>(</span>orderTime<span>)</span><span>;</span>
            <span>//因为是按月分表所以获取下个月的时间判断id是否是在临界点创建的</span>
            <span><span>var</span></span> nextMonthFirstDay <span>=</span> ShardingCoreHelper<span>.</span><span>GetNextMonthFirstDay</span><span>(</span>orderTime<span>)</span><span>;</span>
            <span>if</span> <span>(</span>orderTime<span>.</span><span>AddSeconds</span><span>(</span><span>10</span><span>)</span> <span>></span> nextMonthFirstDay<span>)</span>
            <span>{</span>
                <span><span>var</span></span> nextTail <span>=</span> <span>TimeFormatToTail</span><span>(</span>nextMonthFirstDay<span>)</span><span>;</span>
                <span>return</span> <span>DoOrderNoFilter</span><span>(</span>shardingOperator<span>,</span> orderTime<span>,</span> currentTail<span>,</span> nextTail<span>)</span><span>;</span>
            <span>}</span>
            <span>//因为是按月分表所以获取这个月月初的时间判断id是否是在临界点创建的</span>
            <span>if</span> <span>(</span>orderTime<span>.</span><span>AddSeconds</span><span>(</span><span>-</span><span>10</span><span>)</span> <span>&lt;</span> ShardingCoreHelper<span>.</span><span>GetCurrentMonthFirstDay</span><span>(</span>orderTime<span>)</span><span>)</span>
            <span>{</span>
                <span>//上个月tail</span>
                <span><span>var</span></span> previewTail <span>=</span> <span>TimeFormatToTail</span><span>(</span>orderTime<span>.</span><span>AddSeconds</span><span>(</span><span>-</span><span>10</span><span>)</span><span>)</span><span>;</span>

                <span>return</span> <span>DoOrderNoFilter</span><span>(</span>shardingOperator<span>,</span> orderTime<span>,</span> previewTail<span>,</span> currentTail<span>)</span><span>;</span>
            <span>}</span>

            <span>return</span> <span>DoOrderNoFilter</span><span>(</span>shardingOperator<span>,</span> orderTime<span>,</span> currentTail<span>,</span> currentTail<span>)</span><span>;</span>

        <span>}</span>

        <span>private</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>DoOrderNoFilter</span><span>(</span><span>ShardingOperatorEnum</span> shardingOperator<span>,</span> <span>DateTime</span> shardingKey<span>,</span> <span><span>string</span></span> minTail<span>,</span> <span><span>string</span></span> maxTail<span>)</span>
        <span>{</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThan<span>:</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThanOrEqual<span>:</span>
                    <span>{</span>
                        <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> minTail<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>>=</span> <span>0</span><span>;</span>
                    <span>}</span>

                <span>case</span> ShardingOperatorEnum<span>.</span>LessThan<span>:</span>
                    <span>{</span>
                        <span><span>var</span></span> currentMonth <span>=</span> ShardingCoreHelper<span>.</span><span>GetCurrentMonthFirstDay</span><span>(</span>shardingKey<span>)</span><span>;</span>
                        <span>//处于临界值 o=>o.time &lt; [2021-01-01 00:00:00] 尾巴20210101不应该被返回</span>
                        <span>if</span> <span>(</span>currentMonth <span>==</span> shardingKey<span>)</span>
                            <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> maxTail<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;</span> <span>0</span><span>;</span>
                        <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> maxTail<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;=</span> <span>0</span><span>;</span>
                    <span>}</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> maxTail<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;=</span> <span>0</span><span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span>
                    <span>{</span>
                        <span><span>var</span></span> isSame <span>=</span> minTail <span>==</span> maxTail<span>;</span>
                        <span>if</span> <span>(</span>isSame<span>)</span>
                        <span>{</span>
                            <span>return</span> tail <span>=></span> tail <span>==</span> minTail<span>;</span>
                        <span>}</span>
                        <span>else</span>
                        <span>{</span>
                            <span>return</span> tail <span>=></span> tail <span>==</span> minTail <span>||</span> tail <span>==</span> maxTail<span>;</span>
                        <span>}</span>
                    <span>}</span>
                <span>default</span><span>:</span>
                    <span>{</span>
                        <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                    <span>}</span>
            <span>}</span>
        <span>}</span>

        <span>private</span> <span><span>bool</span></span> <span>CheckOrderNo</span><span>(</span><span><span>string</span></span> orderNo<span>,</span> <span>out</span> <span>DateTime</span> orderTime<span>)</span>
        <span>{</span>
            <span>//yyyyMMddHHmmss+new Random().Next(0,10000).ToString().PadLeft(4,'0')</span>
            <span>if</span> <span>(</span>orderNo<span>.</span>Length <span>==</span> <span>18</span><span>)</span>
            <span>{</span>
                <span>if</span> <span>(</span>DateTime<span>.</span><span>TryParseExact</span><span>(</span>orderNo<span>.</span><span>Substring</span><span>(</span><span>0</span><span>,</span> <span>14</span><span>)</span><span>,</span> <span>"yyyyMMddHHmmss"</span><span>,</span> CultureInfo<span>.</span>InvariantCulture<span>,</span>
                        DateTimeStyles<span>.</span>None<span>,</span> <span>out</span> <span><span>var</span></span> parseDateTime<span>)</span><span>)</span>
                <span>{</span>
                    orderTime <span>=</span> parseDateTime<span>;</span>
                    <span>return</span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>

            orderTime <span>=</span> DateTime<span>.</span>MinValue<span>;</span>
            <span>return</span> <span>false</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br><span>125</span><br><span>126</span><br><span>127</span><br><span>128</span><br><span>129</span><br><span>130</span><br><span>131</span><br><span>132</span><br><span>133</span><br><span>134</span><br><span>135</span><br><span>136</span><br><span>137</span><br><span>138</span><br><span>139</span><br></div></div><p>这边我来讲解一下为什么用额外字段分片需要些这么多代码呢,其实是这样的因为你是用订单创建时间<code>CreateTime</code>来进行分片的那么<code>CreateTime</code>和<code>OrderNo</code>的赋值原理上说应该在系统里面是不可能实现同一时间赋值的肯定有先后关系可能是几微妙甚至几飞秒,但是为了消除这种差异这边采用了临界点兼容算法来实现，让我们来看下一下代码</p>
<div><pre><code><span><span>var</span></span> order<span>=</span><span>new</span> <span>Order</span><span>(</span><span>)</span>
<span>//执行这边生成出来的id是2021-11-30 23:59:59.999.999</span>
order<span>.</span>Id<span>=</span><span>"xxx"</span><span>;</span>
<span>//business code //具体执行时间不确定,哪怕没有business code也没有办法保证两者生成的时间一致,当然如果你可以做到一致完全不需要这么复杂的编写</span>
<span>..</span><span>..</span><span>..</span><span>..</span><span>..</span><span>..</span>
<span>//执行这边生成出来的时间是2021-12-01 00:00:00.000.000</span>
order<span>.</span>CreateTime<span>=</span>DateTime<span>.</span>Now<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>当然系统里面采用了前后添加10秒是一个比较保守的估算你可以采用前后一秒甚至几百毫秒都是ok的,具体业务具体实现,因为大部分的创建时间可能是由框架在提交后才会生成而不是new Order的时候,当然也不排除这种情况,当然如果你只需要考虑equal一种情况可以只编写equal的判断而不需要全部情况都考虑</p>
<h3 id="shardingcore启动配置"> ShardingCore启动配置</h3>
<div><pre><code><span>ILoggerFactory</span> efLogger <span>=</span> LoggerFactory<span>.</span><span>Create</span><span>(</span>builder <span>=></span>
<span>{</span>
    builder<span>.</span><span>AddFilter</span><span>(</span><span>(</span>category<span>,</span> level<span>)</span> <span>=></span> category <span>==</span> DbLoggerCategory<span>.</span>Database<span>.</span>Command<span>.</span>Name <span>&amp;&amp;</span> level <span>==</span> LogLevel<span>.</span>Information<span>)</span><span>.</span><span>AddConsole</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>
<span><span>var</span></span> builder <span>=</span> WebApplication<span>.</span><span>CreateBuilder</span><span>(</span>args<span>)</span><span>;</span>

<span>// Add services to the container.</span>

builder<span>.</span>Services<span>.</span><span>AddControllers</span><span>(</span><span>)</span><span>;</span>
builder<span>.</span>Services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>DefaultDbContext<span>></span></span></span><span>(</span><span>(</span>conStr<span>,</span>builder<span>)</span><span>=></span>builder
        <span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span>
        <span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span>
    <span>)</span>
    <span>.</span><span>Begin</span><span>(</span>o <span>=></span>
    <span>{</span>
        o<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
        o<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
    <span>}</span><span>)</span><span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
    <span>{</span>
        builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
    <span>}</span><span>)</span><span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span><span>"Data Source=localhost;Initial Catalog=ShardingMultiProperties;Integrated Security=True;"</span><span>)</span><span>//如果你是sqlserve只需要修改这边的链接字符串即可</span>
    <span>.</span><span>AddShardingTableRoute</span><span>(</span>op <span>=></span>
    <span>{</span>
        op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span>
    <span>.</span><span>AddTableEnsureManager</span><span>(</span>sp<span>=></span><span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>DefaultDbContext<span>></span></span><span>(</span><span>)</span><span>)</span><span>//告诉ShardingCore启动时有哪些表</span>
    <span>.</span><span>End</span><span>(</span><span>)</span><span>;</span>

<span><span>var</span></span> app <span>=</span> builder<span>.</span><span>Build</span><span>(</span><span>)</span><span>;</span>

<span>// Configure the HTTP request pipeline.</span>
app<span>.</span>Services<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>

app<span>.</span><span>UseAuthorization</span><span>(</span><span>)</span><span>;</span>

app<span>.</span><span>MapControllers</span><span>(</span><span>)</span><span>;</span>

<span>//额外添加一些种子数据</span>
<span>using</span> <span>(</span><span><span>var</span></span> serviceScope <span>=</span> app<span>.</span>Services<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
<span>{</span>
    <span><span>var</span></span> defaultDbContext <span>=</span> serviceScope<span>.</span>ServiceProvider<span>.</span><span><span>GetService</span><span><span>&lt;</span>DefaultDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span><span>!</span>defaultDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Any</span><span>(</span><span>)</span><span>)</span>
    <span>{</span>
        <span><span>var</span></span> orders <span>=</span> <span>new</span> <span>List<span>&lt;</span>Order<span>></span></span><span>(</span><span>8</span><span>)</span><span>;</span>
        <span><span>var</span></span> beginTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>9</span><span>,</span> <span>5</span><span>)</span><span>;</span>
        <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>8</span><span>;</span> i<span>++</span><span>)</span>
        <span>{</span>

            <span><span>var</span></span> orderNo <span>=</span> beginTime<span>.</span><span>ToString</span><span>(</span><span>"yyyyMMddHHmmss"</span><span>)</span> <span>+</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>.</span><span>PadLeft</span><span>(</span><span>4</span><span>,</span> <span>'0'</span><span>)</span><span>;</span>
            orders<span>.</span><span>Add</span><span>(</span><span>new</span> <span>Order</span><span>(</span><span>)</span>
            <span>{</span>
                Id <span>=</span> Guid<span>.</span><span>NewGuid</span><span>(</span><span>)</span><span>.</span><span>ToString</span><span>(</span><span>"n"</span><span>)</span><span>,</span>
                CreateTime <span>=</span> beginTime<span>,</span>
                Name <span>=</span> <span><span>$"Order"</span></span> <span>+</span> i<span>,</span>
                OrderNo <span>=</span> orderNo
            <span>}</span><span>)</span><span>;</span>
            beginTime <span>=</span> beginTime<span>.</span><span>AddDays</span><span>(</span><span>1</span><span>)</span><span>;</span>
            <span>if</span> <span>(</span>i <span>%</span> <span>2</span> <span>==</span> <span>1</span><span>)</span>
            <span>{</span>
                beginTime <span>=</span> beginTime<span>.</span><span>AddMonths</span><span>(</span><span>1</span><span>)</span><span>;</span>
            <span>}</span>
        <span>}</span>
        defaultDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
        defaultDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
app<span>.</span><span>Run</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br></div></div><p>整个配置下来其实也就两个地方需要配置还是相对比较简单的,直接启动开始我们的测试模式</p>
<h2 id="测试"> 测试</h2>
<h3 id="默认配置下的测试"> 默认配置下的测试</h3>
<div><pre><code>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Test1</span><span>(</span><span>)</span>
        <span>{</span> Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query Name Begin--------------"</span><span>)</span><span>;</span>
            <span><span>var</span></span> order1 <span>=</span> <span>await</span> _defaultDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>==</span><span>"Order3"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query Name End--------------"</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderNo Begin--------------"</span><span>)</span><span>;</span>
            <span><span>var</span></span> order2 <span>=</span> <span>await</span> _defaultDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>OrderNo<span>==</span> <span>"202110080000000003"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderNo End--------------"</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderCreateTime Begin--------------"</span><span>)</span><span>;</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>10</span><span>,</span><span>08</span><span>)</span><span>;</span>
            <span><span>var</span></span> order4 <span>=</span> <span>await</span> _defaultDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreateTime<span>==</span> dateTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderCreateTime End--------------"</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderNo Contains Begin--------------"</span><span>)</span><span>;</span>
            <span><span>var</span></span> orderNos <span>=</span> <span>new</span> <span><span>string</span><span>[</span><span>]</span></span> <span>{</span> <span>"202110080000000003"</span><span>,</span> <span>"202111090000000004"</span> <span>}</span><span>;</span>
            <span><span>var</span></span> order5 <span>=</span> <span>await</span> _defaultDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span> orderNos<span>.</span><span>Contains</span><span>(</span>o<span>.</span>OrderNo<span>)</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderNo Contains End--------------"</span><span>)</span><span>;</span>

            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderNo None Begin--------------"</span><span>)</span><span>;</span>
            <span><span>var</span></span> time <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>11</span><span>,</span><span>1</span><span>)</span><span>;</span>
            <span><span>var</span></span> order6 <span>=</span> <span>await</span> _defaultDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span> o<span>.</span>OrderNo<span>==</span> <span>"202110080000000003"</span><span>&amp;&amp;</span>o<span>.</span>CreateTime<span>></span> time<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderNo None End--------------"</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderNo Not Check Begin--------------"</span><span>)</span><span>;</span>
            <span><span>var</span></span> order3 <span>=</span> <span>await</span> _defaultDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>OrderNo <span>==</span> <span>"a02110080000000003"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            Console<span>.</span><span>WriteLine</span><span>(</span><span>"--------------Query OrderNo Not Check End--------------"</span><span>)</span><span>;</span>

            <span>return</span> <span>Ok</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br></div></div><p>测试结果
<img src="https://img2020.cnblogs.com/blog/1346660/202112/1346660-20211225121113289-352519801.png" alt="" /></p>
<p>测试结果非常完美除了无法匹配路由的时候那么我们该如何设置呢</p>
<h3 id="测试无路由返回默认值"> 测试无路由返回默认值</h3>
<div><pre><code>builder<span>.</span>Services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>DefaultDbContext<span>></span></span></span><span>(</span><span>..</span><span>.</span><span>)</span>
    <span>.</span><span>Begin</span><span>(</span>o <span>=></span>
    <span>{</span>
<span>..</span><span>..</span>
        o<span>.</span>ThrowIfQueryRouteNotMatch <span>=</span> <span>false</span><span>;</span><span>//配置默认不抛出异常</span>
    <span>}</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>我们再次来看下测试结果
<img src="https://img2020.cnblogs.com/blog/1346660/202112/1346660-20211225121237003-804623427.png" alt="" /></p>
<p>为何我们测试是不经过数据库直接查询,原因就是在我们做各个属性分片交集的时候返回了空那么框架会选择抛出异常或者返回默认值两种选项,并且我们在编写路由的时候判断格式不正确返回<code>return tail =&gt; false;</code>直接让所有的交集都是空所以不会进行一次无意义的数据库查询</p>
<h2 id="总结"> 总结</h2>
<p>看到这边你应该已经看到了本框架的强大之处,本框架不但可以实现多字段分片还可以实现自定义分片,而不是单单按时间分片这么简单,我完全可以设置订单从2021年后的订单按月分片,2021年前的订单按年分片,对于sharding-core而言这简直轻而易举,但是据我所知.Net下目前除了我没有任何一款框架可以做到真正的全自动分片+多字段分片,所以我们在设计框架分片的时候尽可能的将有用的信息添加到一些无意义的字段上比如Id可以有效的解决很多在大数据下发生的问题,你可以简单理解为我加了一个索引并且附带了额外列,我加了一个id并且带了分表信息在里面,也可以完全设计出一款附带分库的属性到id里面使其可以支持分表分库</p>
]]></content:encoded>
      <enclosure url="https://img2020.cnblogs.com/blog/1346660/202112/1346660-20211225093421886-2131126936.png" type="image/png"/>
    </item>
    <item>
      <title>高性能分页</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/pagination/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/pagination/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">高性能分页</source>
      <category>高级</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>注意</p>
<p>!!!顺序分页如果对象支持分库会先判断分库如果分库不启用那么就不启用,如果仅分表会判断是否配置分表,优先级先分库配置再分表的配置,如果本次查询分库分表对象存在单库那么也支持!!!</p>
<p>!!!顺序分页如果对象支持分库会先判断分库如果分库不启用那么就不启用!!!</p>
<p>!!!顺序分页如果对象支持分库会先判断分库如果分库不启用那么就不启用!!!</p>
</div>
<h2 id="介绍"> 介绍</h2>
<p>所谓的高性能分页是针对分表分库下的数据聚合来实现的一种分页，总所周知如果你是内存分页那么时间复杂度将是O(x*n)其中x表示：<code>子sql条数</code>,n表示需要跳过的条数，但是流式聚合的时间复杂度却是O(n)其中n表示需要跳过的条数。也就是说理论上流式聚合的性能要远高于内存聚合。</p>
<h3 id="分表解决方案"> 分表解决方案</h3>
<table>
<thead>
<tr>
<th>解决方案</th>
<th>skip&lt;=100</th>
<th>skip&lt;10000</th>
<th>skip&gt;10000</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>内存分表</strong></td>
<td>速度快O(n)，n=skip*分表数</td>
<td>速度快O(n)，n=skip*分表数,内存暴涨</td>
<td>O(n)，n=skip*分表数,内存爆炸,速度越来越慢</td>
<td>实现简单,支持分库</td>
<td>skip过大内存暴涨</td>
</tr>
<tr>
<td><strong>union all</strong></td>
<td>速度快</td>
<td>速度快</td>
<td>速度越来越慢</td>
<td>实现简单</td>
<td>不支持分库,不好优化,索引可能会失效</td>
</tr>
<tr>
<td><strong>流式分表</strong></td>
<td>速度快O(n)，n=skip</td>
<td>速度快O(n)，n=skip</td>
<td>O(n)，n=skip 速度越来越慢</td>
<td>支持分库</td>
<td>实现复杂,网络流量随着N增大</td>
</tr>
</tbody>
</table>
<h4 id="_1-内存分页"> 1.内存分页</h4>
<p>顾名思义就是将各个表的结果集合并到内存中进行排序后分页</p>
<h4 id="_2-union-all"> 2.union all</h4>
<p>使用的是数据库本身的聚合操作,用过匿名表来实现和操作当前表一样无感知</p>
<h4 id="_3-流式分表"> 3.流式分表</h4>
<p>和名字一样就是通过next来一次一次获取,和datareader类似只有在next后才可以获取到客户端</p>
<h2 id="高性能分页"> 高性能分页</h2>
<h3 id="介绍-2"> 介绍</h3>
<p>目前sharding-core采用的是流式聚合所以普通情况下你的分页查询就是O(n)的性能代价，但是如果你是按时间来进行分表那么如果分页查询是以时间为主要排序就可以做到O(1)的分页性能。</p>
<h3 id="条件"> 条件</h3>
<p>启用高性能分页有一个很重要的条件需要满足</p>
<p>假设分表对象是<code>a</code>,分表有<code>a1</code>、<code>a2</code>、<code>a3</code>....<code>an</code>满足 表名后缀1、2、3、4....n的排序顺序和<code>order by a.x</code>是同向的即可。</p>
<p>满足以下条件我们就可以说对象<code>a</code>的<code>x</code>属性满足高性能分页</p>
<p>正序:<code>min(a1.x)</code>&lt;<code>max(a1.x)</code>&lt;<code>min(a2.x)</code>&lt;<code>max(a2.x)</code>......<code>min(an.x)</code>&lt;<code>max(an.x)</code>
倒序:<code>min(a1.x)</code>&gt;<code>max(a1.x)</code>&gt;<code>min(a2.x)</code>&gt;<code>max(a2.x)</code>......<code>min(an.x)</code>&gt;<code>max(an.x)</code></p>
<h3 id="分页配置"> 分页配置</h3>
<p>很显然按时间分表无疑就是这种情况下的满足者，那么该如何开启呢</p>
<div><pre><code>    <span>public</span> <span>class</span> <span>OrderPaginationConfiguration</span><span>:</span><span><span>IPaginationConfiguration<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>PaginationBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>PaginationSequence</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span>
                <span>.</span><span>UseRouteComparer</span><span>(</span>Comparer<span>&lt;</span><span>string</span><span>></span><span>.</span>Default<span>)</span>
                <span>.</span><span>UseQueryMatch</span><span>(</span>PaginationMatchEnum<span>.</span>Owner <span>|</span> PaginationMatchEnum<span>.</span>Named <span>|</span> PaginationMatchEnum<span>.</span>PrimaryMatch<span>)</span><span>.</span><span>UseAppendIfOrderNone</span><span>(</span><span>)</span><span>;</span>

            builder<span>.</span><span>ConfigReverseShardingPage</span><span>(</span><span>0.5d</span><span>,</span> <span>10000L</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>我们是将订单表按订单的创建时间进行分页,所以可以得知订单分表后缀满足以上条件</p>
<p><code>order_2019</code>,<code>order_20120</code>,<code>order_2021</code>满足<code>2019</code>&lt;<code>2020</code>&lt;<code>2021</code>且<code>min(order_2019.createTime)</code>&lt;<code>max(order_2019.createTime)</code>&lt;<code>min(order_2020.createTime)</code>&lt;<code>max(order_2020.createTime)</code>&lt;<code>min(order_2021.createTime)</code>&lt;<code>max(order_2021.createTime)</code></p>
<h4 id="paginationsequence"> PaginationSequence</h4>
<p>表示如果分页的时候按这个字段进行排序才会启用</p>
<p>如果你的id是雪花id那么也可以将id进行配置</p>
<div><pre><code>    <span>public</span> <span>class</span> <span>OrderPaginationConfiguration</span><span>:</span><span><span>IPaginationConfiguration<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>PaginationBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>PaginationSequence</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span>
                <span>.</span><span>UseRouteComparer</span><span>(</span>Comparer<span>&lt;</span><span>string</span><span>></span><span>.</span>Default<span>)</span>
                <span>.</span><span>UseQueryMatch</span><span>(</span>PaginationMatchEnum<span>.</span>Owner <span>|</span> PaginationMatchEnum<span>.</span>Named <span>|</span> PaginationMatchEnum<span>.</span>PrimaryMatch<span>)</span><span>.</span><span>UseAppendIfOrderNone</span><span>(</span><span>)</span><span>;</span>
            <span>//雪花id也满足以上表达式    </span>
            builder<span>.</span><span>PaginationSequence</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span>
                <span>.</span><span>UseRouteComparer</span><span>(</span>Comparer<span>&lt;</span><span>string</span><span>></span><span>.</span>Default<span>)</span>
                <span>.</span><span>UseQueryMatch</span><span>(</span>PaginationMatchEnum<span>.</span>Owner <span>|</span> PaginationMatchEnum<span>.</span>Named <span>|</span> PaginationMatchEnum<span>.</span>PrimaryMatch<span>)</span><span>;</span>

            builder<span>.</span><span>ConfigReverseShardingPage</span><span>(</span><span>0.5d</span><span>,</span> <span>10000L</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h4 id="useroutecomparer"> UseRouteComparer</h4>
<p>表示后缀的排序顺序</p>
<h4 id="usequerymatch"> UseQueryMatch</h4>
<p>表示我们应该用何种方式来匹配本次查询,例子中的表名只要是CreateTime是属于本次返回结果的值或者名字匹配或者order by的第一个匹配即可</p>
<h4 id="useappendifordernone"> UseAppendIfOrderNone</h4>
<p>表示如果本次查询没有任何order by字段的时候自动将<code>CreateTime</code>作为order by的条件附加上去，并且为正序当然一般情况下肯定是手动会加上order by所以不用太在意此属性</p>
<h4 id="configreverseshardingpage"> ConfigReverseShardingPage</h4>
<p>表示启用反向排序，当分页total大于10000以上且本次查询skip的数目超过总的total的1/2那么就会启用反向排序</p>
<div><p>注意</p>
<p>反向排序和顺序分页排序互斥优先级先进行顺序分页排序，当不符合顺序分页排序时才进行反向排序</p>
</div>
<h3 id="虚拟路由配置"> 虚拟路由配置</h3>
<div><pre><code>    <span>public</span> <span>class</span> <span>OrderVirtualRoute</span><span>:</span><span><span>AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>

        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> DateTime<span>.</span>Now<span>.</span>Date<span>.</span><span>AddDays</span><span>(</span><span>-</span><span>3</span><span>)</span><span>;</span>
        <span>}</span>
        
        <span>/// &lt;summary></span>
        <span>/// 返回null表示不开启</span>
        <span>/// &lt;/summary></span>
        <span>/// &lt;returns>&lt;/returns></span>
        <span>public</span> <span>override</span> <span>IPaginationConfiguration<span>&lt;</span>Order<span>></span></span> <span>CreatePaginationConfiguration</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>OrderPaginationConfiguration</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h3 id="如何使用"> 如何使用</h3>
<p>框架已经封装了一个分页的扩展</p>
<div><pre><code>
        <span>public</span> <span>static</span> <span>async</span> <span>Task<span>&lt;</span>ShardingPagedResult<span>&lt;</span>T<span>></span><span>></span></span> <span><span>ToShardingPageAsync</span><span><span>&lt;</span>T<span>></span></span></span><span>(</span><span>this</span> <span>IQueryable<span>&lt;</span>T<span>></span></span> source<span>,</span> <span><span>int</span></span> pageIndex<span>,</span> <span><span>int</span></span> pageSize<span>)</span>
        <span>{</span>
            <span>//设置每次获取多少页</span>
            <span><span>var</span></span> take <span>=</span> pageSize <span>&lt;=</span> <span>0</span> <span>?</span> <span>1</span> <span>:</span> pageSize<span>;</span>
            <span>//设置当前页码最小1</span>
            <span><span>var</span></span> index <span>=</span> pageIndex <span>&lt;=</span> <span>0</span> <span>?</span> <span>1</span> <span>:</span> pageIndex<span>;</span>
            <span>//需要跳过多少页</span>
            <span><span>var</span></span> skip <span>=</span> <span>(</span>index <span>-</span> <span>1</span><span>)</span> <span>*</span> take<span>;</span>
            <span><span>var</span></span> shardingPageManager <span>=</span> ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IShardingPageManager<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>using</span> <span>(</span>shardingPageManager<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span>//获取每次总记录数</span>
                <span><span>var</span></span> count <span>=</span> <span>await</span> source<span>.</span><span>LongCountAsync</span><span>(</span><span>)</span><span>;</span>
                <span>if</span> <span>(</span>count <span>&lt;=</span> skip<span>)</span>
                    <span>return</span> <span>new</span> <span>ShardingPagedResult<span>&lt;</span>T<span>></span></span><span>(</span><span>new</span> <span>List<span>&lt;</span>T<span>></span></span><span>(</span><span>0</span><span>)</span><span>,</span> count<span>)</span><span>;</span>
                <span>//获取剩余条数</span>
                <span><span>var</span></span> remainingCount <span>=</span> count <span>-</span> skip<span>;</span>
                <span>//当剩余条数小于take数就取remainingCount</span>
                <span><span>var</span></span> realTake <span>=</span> remainingCount <span>&lt;</span> <span>take <span>?</span></span> remainingCount <span>:</span> take<span>;</span>
                <span><span>var</span></span> data <span>=</span> <span>await</span> source<span>.</span><span>Skip</span><span>(</span>skip<span>)</span><span>.</span><span>Take</span><span>(</span><span>(</span><span>int</span><span>)</span>realTake<span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
                <span>return</span> <span>new</span> <span>ShardingPagedResult<span>&lt;</span>T<span>></span></span><span>(</span>data<span>,</span> count<span>)</span><span>;</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><p>你可以自行封装或使用框架的</p>
<div><pre><code>            <span><span>var</span></span> shardingPageResult <span>=</span> <span>await</span> _defaultTableDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>OrderBy</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span><span>.</span><span>ToShardingPageAsync</span><span>(</span>pageIndex<span>,</span> pageSize<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>路由表达式缓存</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/route-parse-compile-cache/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/route-parse-compile-cache/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">路由表达式缓存</source>
      <category>高级</category>
      <pubDate>Fri, 03 Dec 2021 00:36:36 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="表达式缓存失效情况"> 表达式缓存失效情况</h2>
<h3 id="可以复用表达式"> 可以复用表达式</h3>
<div><pre><code>
        <span>public</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>int</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>
            <span><span>var</span></span> t <span>=</span> <span>TimeFormatToTail</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThan<span>:</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>>=</span> <span>0</span><span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThan<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;</span> <span>0</span><span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;=</span> <span>0</span><span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h3 id="无法复用表达式"> 无法复用表达式</h3>
<div><pre><code>
        <span>public</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>int</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>
            <span><span>var</span></span> r <span>=</span> <span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>1</span><span>,</span> <span>30000</span><span>)</span><span>;</span>
            <span><span>var</span></span> t <span>=</span> <span>TimeFormatToTail</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThan<span>:</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>>=</span> <span>0</span><span>&amp;&amp;</span>r<span>==</span>r<span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThan<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;</span> <span>0</span> <span>&amp;&amp;</span> r <span>==</span> r<span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;=</span> <span>0</span> <span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><p>复用表达式原理 为便利表达式各个几点针对各个节点的常量值成员变量值进行hashcode计算,因为下面的表达式<code>&gt;</code>,<code>&gt;=</code>出现了随机数所以每次结果将不一样,所以表达式将无法正确计算值。合理设计表达式返回并且利用表达式缓存可以有效提升程序性能,请勿出现上述情况下的表达式会导致表达式无法缓存并且堆积缓存区</p>
]]></content:encoded>
    </item>
    <item>
      <title>性能测试</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/benchmark/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/benchmark/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">性能测试</source>
      <category>性能测试</category>
      <pubDate>Fri, 03 Dec 2021 00:36:36 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="性能"> 性能</h2>
<p>以下所有数据均在开启了表达式编译缓存的情况下测试，并且电脑处于长时间未关机并且开着很多vs和idea的情况下仅供参考,所有测试都是基于ShardingCore x.3.1.63+ version</p>
<p>以下所有数据均在<a href="https://github.com/xuejmnet/sharding-core/blob/main/benchmarks/ShardingCoreBenchmark/EFCoreCrud.cs" target="_blank" rel="noopener noreferrer">源码中有案例</a></p>
<p>efcore版本均为6.0 表结构为string型id的订单取模分成5张表</p>
<p>N代表执行次数</p>
<h3 id="性能损耗-sql-server-2012-data-rows-7734363-773w"> 性能损耗 sql server 2012,data rows 7734363 =773w</h3>
<p>// * Summary *</p>
<p>BenchmarkDotNet=v0.13.1, OS=Windows 10.0.18363.1500 (1909/November2019Update/19H2)
AMD Ryzen 9 3900X, 1 CPU, 24 logical and 12 physical cores
.NET SDK=6.0.100
[Host]     : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT
DefaultJob : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>N</th>
<th style="text-align:right">Mean</th>
<th style="text-align:right">Error</th>
<th style="text-align:right">StdDev</th>
</tr>
</thead>
<tbody>
<tr>
<td>NoShardingIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">1.512 ms</td>
<td style="text-align:right">0.0071 ms</td>
<td style="text-align:right">0.0063 ms</td>
</tr>
<tr>
<td>ShardingIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">1.567 ms</td>
<td style="text-align:right">0.0127 ms</td>
<td style="text-align:right">0.0113 ms</td>
</tr>
</tbody>
</table>
<p>针对未分片数据的查询性能,可以看出10次查询差距为0.05ms,单次查询损耗约为5微妙=0.005毫秒,损耗占比为3%,</p>
<p>结论：efcore 原生查询和sharding-core的查询在针对未分片对象查询上性能可达原先的97%具有极高的性能</p>
<h3 id="性能测试"> 性能测试</h3>
<h4 id="sql-server-2012-data-rows-7734363-773w"> sql server 2012,data rows 7734363 =773w</h4>
<p>// * Summary *</p>
<p>BenchmarkDotNet=v0.13.1, OS=Windows 10.0.18363.1500 (1909/November2019Update/19H2)
AMD Ryzen 9 3900X, 1 CPU, 24 logical and 12 physical cores
.NET SDK=6.0.100
[Host]     : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT
DefaultJob : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>N</th>
<th style="text-align:right">Mean</th>
<th style="text-align:right">Error</th>
<th style="text-align:right">StdDev</th>
<th style="text-align:right">Median</th>
</tr>
</thead>
<tbody>
<tr>
<td>NoShardingIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">1.739 ms</td>
<td style="text-align:right">0.0340 ms</td>
<td style="text-align:right">0.0540 ms</td>
<td style="text-align:right">1.739 ms</td>
</tr>
<tr>
<td>ShardingIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">2.373 ms</td>
<td style="text-align:right">0.0460 ms</td>
<td style="text-align:right">0.0452 ms</td>
<td style="text-align:right">2.379 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">579.584 ms</td>
<td style="text-align:right">15.7983 ms</td>
<td style="text-align:right">46.5816 ms</td>
<td style="text-align:right">564.566 ms</td>
</tr>
<tr>
<td>ShardingNoIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">628.567 ms</td>
<td style="text-align:right">12.5324 ms</td>
<td style="text-align:right">35.3478 ms</td>
<td style="text-align:right">615.352 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexCountAsync</td>
<td>10</td>
<td style="text-align:right">521.954 ms</td>
<td style="text-align:right">9.7644 ms</td>
<td style="text-align:right">18.5778 ms</td>
<td style="text-align:right">523.128 ms</td>
</tr>
<tr>
<td>ShardingNoIndexCountAsync</td>
<td>10</td>
<td style="text-align:right">622.595 ms</td>
<td style="text-align:right">11.8567 ms</td>
<td style="text-align:right">10.5107 ms</td>
<td style="text-align:right">619.452 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexLikeToListAsync</td>
<td>10</td>
<td style="text-align:right">6,352.417 ms</td>
<td style="text-align:right">123.3931 ms</td>
<td style="text-align:right">115.4220 ms</td>
<td style="text-align:right">6,360.908 ms</td>
</tr>
<tr>
<td>ShardingNoIndexLikeToListAsync</td>
<td>10</td>
<td style="text-align:right">6,260.610 ms</td>
<td style="text-align:right">122.6605 ms</td>
<td style="text-align:right">108.7353 ms</td>
<td style="text-align:right">6,236.577 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexToListAsync</td>
<td>10</td>
<td style="text-align:right">491.013 ms</td>
<td style="text-align:right">4.0199 ms</td>
<td style="text-align:right">3.5635 ms</td>
<td style="text-align:right">490.473 ms</td>
</tr>
<tr>
<td>ShardingNoIndexToListAsync</td>
<td>10</td>
<td style="text-align:right">620.591 ms</td>
<td style="text-align:right">6.8447 ms</td>
<td style="text-align:right">5.7156 ms</td>
<td style="text-align:right">620.634 ms</td>
</tr>
</tbody>
</table>
<h4 id="mysql-5-7-data-rows-7553790-755w-innerdb-buffer-size-3g"> mysql 5.7,data rows 7553790=755w innerdb_buffer_size=3G</h4>
<p>// * Summary *</p>
<p>BenchmarkDotNet=v0.13.1, OS=Windows 10.0.18363.1500 (1909/November2019Update/19H2)
AMD Ryzen 9 3900X, 1 CPU, 24 logical and 12 physical cores
.NET SDK=6.0.100
[Host]     : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT
DefaultJob : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>N</th>
<th style="text-align:right">Mean</th>
<th style="text-align:right">Error</th>
<th style="text-align:right">StdDev</th>
<th style="text-align:right">Median</th>
</tr>
</thead>
<tbody>
<tr>
<td>NoShardingIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">4.911 ms</td>
<td style="text-align:right">0.0952 ms</td>
<td style="text-align:right">0.1133 ms</td>
<td style="text-align:right">4.923 ms</td>
</tr>
<tr>
<td>ShardingIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">5.736 ms</td>
<td style="text-align:right">0.1139 ms</td>
<td style="text-align:right">0.3020 ms</td>
<td style="text-align:right">5.630 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">11,630.109 ms</td>
<td style="text-align:right">774.0088 ms</td>
<td style="text-align:right">2,282.1824 ms</td>
<td style="text-align:right">11,585.457 ms</td>
</tr>
<tr>
<td>ShardingNoIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">5,388.529 ms</td>
<td style="text-align:right">39.1442 ms</td>
<td style="text-align:right">36.6155 ms</td>
<td style="text-align:right">5,391.835 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexCountAsync</td>
<td>10</td>
<td style="text-align:right">14,245.844 ms</td>
<td style="text-align:right">74.1221 ms</td>
<td style="text-align:right">69.3339 ms</td>
<td style="text-align:right">14,242.815 ms</td>
</tr>
<tr>
<td>ShardingNoIndexCountAsync</td>
<td>10</td>
<td style="text-align:right">3,007.845 ms</td>
<td style="text-align:right">24.6299 ms</td>
<td style="text-align:right">23.0388 ms</td>
<td style="text-align:right">3,007.830 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexLikeToListAsync</td>
<td>10</td>
<td style="text-align:right">27,026.048 ms</td>
<td style="text-align:right">145.6814 ms</td>
<td style="text-align:right">121.6505 ms</td>
<td style="text-align:right">27,032.112 ms</td>
</tr>
<tr>
<td>ShardingNoIndexLikeToListAsync</td>
<td>10</td>
<td style="text-align:right">5,650.041 ms</td>
<td style="text-align:right">94.9405 ms</td>
<td style="text-align:right">88.8074 ms</td>
<td style="text-align:right">5,622.049 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexToListAsync</td>
<td>10</td>
<td style="text-align:right">26,068.783 ms</td>
<td style="text-align:right">103.7831 ms</td>
<td style="text-align:right">97.0788 ms</td>
<td style="text-align:right">26,094.834 ms</td>
</tr>
<tr>
<td>ShardingNoIndexToListAsync</td>
<td>10</td>
<td style="text-align:right">5,414.644 ms</td>
<td style="text-align:right">71.2123 ms</td>
<td style="text-align:right">59.4655 ms</td>
<td style="text-align:right">5,395.306 ms</td>
</tr>
</tbody>
</table>
<p>具体可以通过first前两次结果来计算得出结论单次查询的的损耗为0.06-0.08毫秒之间， sqlserver的各项数据在分表和未分表的情况下都几乎差不多可以得出在770w数据集情况下数据库还并未是数据瓶颈的关键，但是mysql可以看到在分表和未分表的情况下如果涉及到没有索引的全表扫描那么性能的差距将是分表后的表数目之多，测试中为5-6倍，也就是分表数目</p>
<p><strong>如果你可以接受单次查询的损耗在0.06ms-0.08ms的那相信这款框架将会是efcore下非常完美的一款分表分库组件</strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>事务</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/transaction/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/adv/transaction/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">事务</source>
      <category>高级</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="开启事务"> 开启事务</h2>
<div><pre><code><span>//使用方式和原生efcore一致</span>
<span><span>var</span></span> tran <span>=</span> _defaultTableDbContext<span>.</span>Database<span>.</span><span>BeginTransaction</span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="提交事务"> 提交事务</h2>
<div><pre><code>tran<span>.</span><span>Commit</span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="回滚事务"> 回滚事务</h2>
<div><pre><code>tran<span>.</span><span>Rollback</span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="如何使用"> 如何使用</h2>
<div><pre><code>
            <span>using</span> <span>(</span><span><span>var</span></span> tran <span>=</span> _defaultTableDbContext<span>.</span>Database<span>.</span><span>BeginTransaction</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                _defaultTableDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Insert</span><span>(</span>data<span>)</span><span>;</span>
                _defaultTableDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                <span><span>var</span></span> a <span>=</span> <span>0</span><span>;</span>
                <span><span>var</span></span> b <span>=</span> <span>1</span> <span>/</span> a<span>;</span><span>//强制出错</span>
                tran<span>.</span><span>Commit</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>使用方式和efcore一致，无需手动调用回滚，会在出错时自动回滚,如果是efcore普通操作需要调用<code>SaveChanges</code>，如果是三方框架直接提交的那么就不需要调用<code>SaveChanges</code></p>
<h2 id="加入外部事务"> 加入外部事务</h2>
<div><pre><code>_defaultTableDbContext<span>.</span>Database<span>.</span><span>UseTransaction</span><span>(</span>transaction<span>)</span>
</code></pre>
<div><span>1</span><br></div></div><p>使用方式和efcore一致</p>
<h2 id="分库下的事务"> 分库下的事务</h2>
<p>分库情况下使用事务需要注意一点，默认启用的是弱事务，如果出现本次操作跨库那么具体的逻辑为开启默认数据源(data source name 为default的那个)事务，之后通知现有的<code>IDataSourceDbContext</code>分别开启事务,提交的时候采用弱一致性，先提交默认的data source name的数据源事务，如果出错并且外部只有一个数据源那么就抛错，如果默认数据源事务出错就直接出错，如果非默认事务提交出错且数据源存在多个将忽略错误依次提交，手动调用rollback如果是回滚那么就是依次回滚不在抛错。仅保证业务逻辑下出错完美事务，网络原因导致的事务提交出错程序无法处理</p>
]]></content:encoded>
    </item>
    <item>
      <title>架构</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/deveploer/architecture/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/deveploer/architecture/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">架构</source>
      <category>开发者文档</category>
      <pubDate>Thu, 30 Dec 2021 04:41:43 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="整体的架构图"> 整体的架构图</h2>
<p>上图可知整体架构表现为以<code>entity</code>作为核心驱动来牵引整个框架
<img src="/sharding-core-doc/architecture.png"></p>
]]></content:encoded>
    </item>
    <item>
      <title>执行流程</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/deveploer/execute-process/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/deveploer/execute-process/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">执行流程</source>
      <category>开发者文档</category>
      <pubDate>Thu, 30 Dec 2021 04:41:43 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="执行流程"> 执行流程</h2>
<p>蓝色的表示对应的处理类
<img src="/sharding-core-doc/query-process.png"></p>
]]></content:encoded>
    </item>
    <item>
      <title>Batch Operate</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/batch-operate/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/batch-operate/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Batch Operate</source>
      <category>Advance</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="批处理"> 批处理</h2>
<p>批处理时我们程序在运行时常用的技术,用于在大数据量时的高效性和便捷性</p>
<h2 id="efcore批量处理生态"> efcore批量处理生态</h2>
<p>efcore有着许许多多的批处理生态，目前我们熟知的有<a href="https://github.com/zzzprojects/EntityFramework-Plus" target="_blank" rel="noopener noreferrer"><code>Z.EntityFramework.Plus.EFCore</code></a>还有<a href="https://github.com/borisdj/EFCore.BulkExtensions" target="_blank" rel="noopener noreferrer"><code>EFCore.BulkExtensions</code></a>等等一些列的，虽然各个框架五花八门但是在支持方面<code>sharding-cor</code>e表示我都支持</p>
<h2 id="使用"> 使用</h2>
<div><pre><code><span><span>var</span></span> list <span>=</span> <span>new</span> <span>List<span>&lt;</span>SysUserMod<span>></span></span><span>(</span><span>)</span><span>;</span>
            <span>///通过集合返回出对应的k-v归集通过事务开启</span>
            <span><span>var</span></span> dbContexts <span>=</span> _defaultTableDbContext<span>.</span><span>BulkShardingEnumerable</span><span>(</span>list<span>)</span><span>;</span>
            <span>//var dbContexts = _defaultTableDbContext.BulkShardingTableEnumerable(list); //if only sharding table</span>
            
           
                    <span>foreach</span> <span>(</span><span><span>var</span></span> dataSourceMap <span>in</span> dbContexts<span>)</span>
                    <span>{</span>
                        <span>foreach</span> <span>(</span><span><span>var</span></span> tailMap <span>in</span> dataSourceMap<span>.</span>Value<span>)</span>
                        <span>{</span>
                            tailMap<span>.</span>Key<span>.</span><span>BulkInsert</span><span>(</span>tailMap<span>.</span>Value<span>.</span><span>ToList</span><span>(</span><span>)</span><span>)</span><span>;</span>
                            <span>//tailMap.Key.BulkDelete(tailMap.Value.ToList());</span>
                            <span>//tailMap.Key.BulkUpdate(tailMap.Value.ToList());</span>
                        <span>}</span>
                    <span>}</span>
                _defaultTableDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
            <span>//or</span>
            <span><span>var</span></span> dbContexts <span>=</span> _defaultTableDbContext<span>.</span><span>BulkShardingEnumerable</span><span>(</span>list<span>)</span><span>;</span>
            <span>//var dbContexts = _defaultTableDbContext.BulkShardingTableEnumerable(list); //if only sharding table</span>
            <span>using</span> <span>(</span><span><span>var</span></span> tran <span>=</span> _defaultTableDbContext<span>.</span>Database<span>.</span><span>BeginTransaction</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                    <span>foreach</span> <span>(</span><span><span>var</span></span> dataSourceMap <span>in</span> dbContexts<span>)</span>
                    <span>{</span>
                        <span>foreach</span> <span>(</span><span><span>var</span></span> tailMap <span>in</span> dataSourceMap<span>.</span>Value<span>)</span>
                        <span>{</span>
                            tailMap<span>.</span>Key<span>.</span><span>BulkInsert</span><span>(</span>tailMap<span>.</span>Value<span>.</span><span>ToList</span><span>(</span><span>)</span><span>)</span><span>;</span>
                            <span>//tailMap.Key.BulkDelete(tailMap.Value.ToList());</span>
                            <span>//tailMap.Key.BulkUpdate(tailMap.Value.ToList());</span>
                        <span>}</span>
                    <span>}</span>
                _defaultTableDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                tran<span>.</span><span>Commit</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br></div></div><p><code>sharding_core</code>会将本次的所有对象都进行分组对应自己的数据源和自己的所在dbcontext内</p>
<p>如果你是按表达式来进行分表的话</p>
<div><pre><code>
            <span><span>var</span></span> dbContexts <span>=</span> _defaultTableDbContext<span>.</span><span>BulkShardingExpression</span><span>(</span>o<span>=></span>o<span>.</span>id<span>==</span><span>"123"</span><span>)</span><span>;</span>
            <span><span>var</span></span> dbContexts <span>=</span> _defaultTableDbContext<span>.</span><span>BulkShardingTableExpression</span><span>(</span>o<span>=></span>o<span>.</span>id<span>==</span><span>"123"</span><span>)</span><span>;</span> <span>//if only sharding table</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Integrate With AbpVNext</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/abp/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/abp/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Integrate With AbpVNext</source>
      <category>abp</category>
      <pubDate>Fri, 19 Nov 2021 03:23:20 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p><a href="https://github.com/xuejmnet/AbpVNextShardingTodoApp" target="_blank" rel="noopener noreferrer">AbpVNextShardingTodoApp</a></p>
<h2 id="blog"> Blog</h2>
<p><a href="https://www.cnblogs.com/xuejiaming/p/15449819.html" target="_blank" rel="noopener noreferrer">Integrate With AbpVNext Blog</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Code First</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/code-first/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/code-first/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Code First</source>
      <category>Advance</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>用过efcore的小伙伴肯定都知道code first是很久之前就一直在主打的一种编程方式,他可以让我们直接上手编程,而不需要去构建数据库,以一种先写代码后自动创建数据库的模式让开发者从数据库设计中脱离出来，更多的是快速进入到开发的一种状态。</p>
<h2 id="安装"> 安装</h2>
<p>首先无论你是aspnetcore还是普通的控制台程序，我们这边需要做的是新建一个控制台程序，命名为<code>Project.Migrations</code>,如果您是分层架构，那么请对当前的控制台程序进行<code>efcore</code>所在层的类库进行引用。引用的类库如果不存在<code>sharding-core</code>也请安装上。最后安装<code>Microsoft.EntityFrameworkCore.Tools</code>请选择对应的<code>efcore</code>对应版本</p>
<div><pre><code>dotnet <span>add</span> package Microsoft.EntityFrameworkCore.Tools
</code></pre>
<div><span>1</span><br></div></div><h2 id="开始"> 开始</h2>
<p>首先efcore分为以下几步
首先我们创建几个对象分别是分表和部分表的对象，分表对象又分取模和时间分表</p>
<h3 id="创建对象"> 创建对象</h3>
<p>如果是项目引入efcore层可以忽略</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>NoShardingTable</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>int</span></span> Age <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    
    <span>public</span> <span>class</span> <span>ShardingWithDateTime</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>int</span></span> Age <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreateTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    
    <span>public</span> <span>class</span> <span>ShardingWithMod</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>int</span></span> Age <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> TextStr <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> TextStr1 <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> TextStr2 <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><h3 id="创建数据库关系"> 创建数据库关系</h3>
<p>如果是项目引入efcore层可以忽略</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>NoShardingTableMap</span> <span>:</span> <span><span>IEntityTypeConfiguration<span>&lt;</span>NoShardingTable<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityTypeBuilder<span>&lt;</span>NoShardingTable<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Name<span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>NoShardingTable<span>)</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>ShardingWithDateTimeMap</span> <span>:</span> <span><span>IEntityTypeConfiguration<span>&lt;</span>ShardingWithDateTime<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityTypeBuilder<span>&lt;</span>ShardingWithDateTime<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Name<span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>ShardingWithDateTime<span>)</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>ShardingWithModMap</span> <span>:</span> <span><span>IEntityTypeConfiguration<span>&lt;</span>ShardingWithMod<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityTypeBuilder<span>&lt;</span>ShardingWithMod<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Name<span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Name<span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>TextStr<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>.</span><span>HasDefaultValue</span><span>(</span><span>""</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>TextStr1<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>.</span><span>HasDefaultValue</span><span>(</span><span>"123"</span><span>)</span><span>;</span>
            builder<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>TextStr2<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>128</span><span>)</span><span>.</span><span>HasDefaultValue</span><span>(</span><span>"123"</span><span>)</span><span>;</span>
            builder<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>ShardingWithMod<span>)</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><h3 id="创建dbcontext"> 创建dbcontext</h3>
<p>如果是项目引入efcore层可以忽略</p>
<p>创建dbcontext并且建立关系</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>DefaultShardingTableDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span> <span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>DefaultShardingTableDbContext</span><span>(</span><span>DbContextOptions</span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>

            modelBuilder<span>.</span><span>ApplyConfiguration</span><span>(</span><span>new</span> <span>NoShardingTableMap</span><span>(</span><span>)</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span>ApplyConfiguration</span><span>(</span><span>new</span> <span>ShardingWithModMap</span><span>(</span><span>)</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span>ApplyConfiguration</span><span>(</span><span>new</span> <span>ShardingWithDateTimeMap</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h3 id="分表路由"> 分表路由</h3>
<p>如果引用的层里有对应的可以忽略</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>ShardingWithModVirtualTableRoute</span> <span>:</span> <span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>ShardingWithMod<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>ShardingWithModVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
        <span>{</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>ShardingWithMod<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>ShardingWithDateTimeVirtualTableRoute</span> <span>:</span> <span><span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>ShardingWithDateTime<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>9</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>ShardingWithDateTime<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><h3 id="sqlgenerator"> SqlGenerator</h3>
<p>我们需要对迁移sql生成进行重写,假如我们是<code>SqlServer</code>,<code>MySql</code>亦是如此</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>ShardingSqlServerMigrationsSqlGenerator<span>&lt;</span>TShardingDbContext<span>></span></span> <span>:</span> <span><span>SqlServerMigrationsSqlGenerator</span></span> <span>where</span> <span>TShardingDbContext</span><span>:</span><span><span>DbContext</span><span>,</span><span>IShardingDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>ShardingSqlServerMigrationsSqlGenerator</span><span>(</span><span>MigrationsSqlGeneratorDependencies</span> dependencies<span>,</span> <span>IRelationalAnnotationProvider</span> migrationsAnnotations<span>)</span> <span>:</span> <span>base</span><span>(</span>dependencies<span>,</span> migrationsAnnotations<span>)</span>
        <span>{</span>
        <span>}</span>
        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>Generate</span><span>(</span>
            <span>MigrationOperation</span> operation<span>,</span>
            <span>IModel</span> model<span>,</span>
            <span>MigrationCommandListBuilder</span> builder<span>)</span>
        <span>{</span>
            <span>//获取老旧命令</span>
            <span><span>var</span></span> oldCmds <span>=</span> builder<span>.</span><span>GetCommandList</span><span>(</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            <span>base</span><span>.</span><span>Generate</span><span>(</span>operation<span>,</span> model<span>,</span> builder<span>)</span><span>;</span>
            <span>//获取新的命令</span>
            <span><span>var</span></span> newCmds <span>=</span> builder<span>.</span><span>GetCommandList</span><span>(</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            <span>//比较判断获取增量命令</span>
            <span><span>var</span></span> addCmds <span>=</span> newCmds<span>.</span><span>Where</span><span>(</span>x <span>=></span> <span>!</span>oldCmds<span>.</span><span>Contains</span><span>(</span>x<span>)</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            <span>//替换增量命令下的表名为表名+后缀</span>
            MigrationHelper<span>.</span><span><span>Generate</span><span><span>&lt;</span>TShardingDbContext<span>></span></span></span><span>(</span>operation<span>,</span> builder<span>,</span> Dependencies<span>.</span>SqlGenerationHelper<span>,</span> addCmds<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><h3 id="创建设计"> 创建设计</h3>
<p>创建ShardingDesignTimeDbContextFactory来继承<code>IDesignTimeDbContextFactory&lt;TDbContext&gt;</code></p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>DefaultDesignTimeDbContextFactory</span><span>:</span> <span><span>IDesignTimeDbContextFactory<span>&lt;</span>DefaultShardingTableDbContext<span>></span></span></span>
    <span>{</span> 
        <span>static</span> <span>DefaultDesignTimeDbContextFactory</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> services <span>=</span> <span>new</span> <span>ServiceCollection</span><span>(</span><span>)</span><span>;</span>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>DefaultShardingTableDbContext<span>></span></span></span><span>(</span>
                    <span>(</span>conn<span>,</span> o<span>)</span> <span>=></span>
                        o<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span>
                            <span>.</span><span><span>ReplaceService</span><span><span>&lt;</span>IMigrationsSqlGenerator<span>,</span> ShardingSqlServerMigrationsSqlGenerator<span>&lt;</span>DefaultShardingTableDbContext<span>></span><span>></span></span></span><span>(</span><span>)</span>
                <span>)</span><span>.</span><span>Begin</span><span>(</span>o <span>=></span>
                <span>{</span>
                    o<span>.</span>CreateShardingTableOnStart <span>=</span> <span>false</span><span>;</span>
                    o<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>false</span><span>;</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>)</span>
                <span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span>
                    <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBMigration;Integrated Security=True;"</span><span>)</span>
                <span>.</span><span>AddShardingTableRoute</span><span>(</span>o <span>=></span>
                <span>{</span>
                    o<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>ShardingWithModVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    o<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>ShardingWithDateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>End</span><span>(</span><span>)</span><span>;</span>
            services<span>.</span><span>AddLogging</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> buildServiceProvider <span>=</span> services<span>.</span><span>BuildServiceProvider</span><span>(</span><span>)</span><span>;</span>
            ShardingContainer<span>.</span><span>SetServices</span><span>(</span>buildServiceProvider<span>)</span><span>;</span>
            ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>DefaultShardingTableDbContext</span> <span>CreateDbContext</span><span>(</span><span><span>string</span><span>[</span><span>]</span></span> args<span>)</span>
        <span>{</span>
            <span>return</span> ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>DefaultShardingTableDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br></div></div><p>简单说明一下静态构造函数里处理的事情<code>static DefaultDesignTimeDbContextFactory()</code>第一步进行了配置，并且对配置完成后进行了启动(初始化),初始化完成后可以通过<code>ShardingContainer</code>或者<code>IServiceProvider</code>进行<code>DbContext</code>的获取.</p>
<div><p>注意</p>
<p>如果你是一个aspnetcore的项目，那么请务必新建一个控制台程序然后引用efcore层来处理，因为默认<code>efcore-tools</code>的执行是在startup中寻找，但是发现有efcore的初始化会直接拿来使用，但是并不会执行<code>Configure</code>也就是说<code>sharding-core</code>并不会被初始化，就无法被正确处理。</p>
</div>
<h2 id="生成迁移文件"> 生成迁移文件</h2>
<h3 id="打开nuget命令"> 打开nuget命令</h3>
<img src="/sharding-core-doc/nuget.png">
<h3 id="设置启动项"> 设置启动项</h3>
<img src="/sharding-core-doc/setm.png">
<h3 id="迁移初始化命令"> 迁移初始化命令</h3>
<div><pre><code>PM<span>></span> Add-Migration InitSharding
</code></pre>
<div><span>1</span><br></div></div><p>如果控制台出现迁移文件就说明迁移成功</p>
<h3 id="更新到数据库"> 更新到数据库</h3>
<div><pre><code>PM<span>></span> update-Database
</code></pre>
<div><span>1</span><br></div></div><h3 id="生产环境"> 生产环境</h3>
<div><pre><code>PM<span>></span> Script-Migration
</code></pre>
<div><span>1</span><br></div></div><p>如果是生产环境更多的是通过生成脚本来进行手动处理执行</p>
<p>具体可以参考<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.Migrations" target="_blank" rel="noopener noreferrer">Sample.Migrations</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Dynamic Append Table</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/dynamic-table/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/dynamic-table/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Dynamic Append Table</source>
      <category>Advance</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="背景"> 背景</h2>
<p>很多时候我们会有一个需求就是如何针对现有的路由进行动态的处理数据和追加新表，默认sharding-core提供的按时间分表都已经提供了该技术，保证按时间分表的路由会在程序正确运行的前提下正确的动态添加分表、分库并且创建对应的分表、分库。</p>
<h2 id="解析按时间分表"> 解析按时间分表</h2>
<h3 id="路由分析"> 路由分析</h3>
<p>我们这边为每个分表对象都需要创建一个分表路由，这个分表的虚拟路由除了告诉框架如何正确的crud外还提供了一个通用的属性就是在程序启动时会返回目前现有数据库的所有表后缀。</p>
<div><pre><code>
    <span>public</span> <span>abstract</span> <span>class</span> <span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>TEntity<span>></span></span> <span>:</span> <span><span>AbstractShardingTimeKeyDateTimeVirtualTableRoute<span>&lt;</span>TEntity<span>></span></span></span> <span>where</span> <span>TEntity</span> <span>:</span> <span><span>class</span></span>
    <span>{</span>
        <span>public</span> <span>abstract</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span><span>;</span>
        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllTails</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> beginTime <span>=</span> ShardingCoreHelper<span>.</span><span>GetCurrentMonthFirstDay</span><span>(</span><span>GetBeginTime</span><span>(</span><span>)</span><span>)</span><span>;</span>
         
            <span><span>var</span></span> tails<span>=</span><span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span><span>;</span>
            <span>//提前创建表</span>
            <span><span>var</span></span> nowTimeStamp <span>=</span>ShardingCoreHelper<span>.</span><span>GetCurrentMonthFirstDay</span><span>(</span>DateTime<span>.</span>Now<span>)</span><span>;</span>
            <span>if</span> <span>(</span>beginTime <span>></span> nowTimeStamp<span>)</span>
                <span>throw</span> <span>new</span> <span>ArgumentException</span><span>(</span><span>"begin time error"</span><span>)</span><span>;</span>
            <span><span>var</span></span> currentTimeStamp <span>=</span> beginTime<span>;</span>
            <span>while</span> <span>(</span>currentTimeStamp <span>&lt;=</span> nowTimeStamp<span>)</span>
            <span>{</span>
                <span><span>var</span></span> tail <span>=</span> <span>ShardingKeyToTail</span><span>(</span>currentTimeStamp<span>)</span><span>;</span>
                tails<span>.</span><span>Add</span><span>(</span>tail<span>)</span><span>;</span>
                currentTimeStamp <span>=</span> ShardingCoreHelper<span>.</span><span>GetNextMonthFirstDay</span><span>(</span>currentTimeStamp<span>)</span><span>;</span>
            <span>}</span>
            <span>return</span> tails<span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><p>首先上述代码是一个简单的按时间分表按月分，这边我只列出了两个方法相对动态添加比较重要，第一个是<code>GetBeginTime</code>，这个方法要求返回一个时间这个时间用于后续的<code>GetAllTails</code>.
我们接着来看<code>GetAllTails</code>内部是获取<code>GetBeginTime</code>值然后计算出这个之间的当前月份的第一天，然后再对当前时间进行计算算出当前时间月份的第一天，那么后续进行两个值相差的每个月就是系统中这张表按时间分表的所有后缀.
<code>GetAllTails</code>仅在启动时被调用一次后续,用于启动时判断，后续如果需要获取可以通过<code>IVirtualTableManager&lt;TShardingDbContext&gt;</code> 获取对应的所有的表后缀<code>virtualTableManager.GetVirtualTable(entityType).GetTableAllTails()</code></p>
<div><p>注意</p>
<p>!!!<code>GetAllTails</code>仅在启动时被调用一次后续,用于启动时判断!!!
!!!<code>GetAllTails</code>仅在启动时被调用一次后续,用于启动时判断!!!
!!!<code>GetAllTails</code>仅在启动时被调用一次后续,用于启动时判断!!!</p>
</div>
<h3 id="建表的分析"> 建表的分析</h3>
<div><pre><code>        <span>public</span> <span>Task</span> <span>ExecuteAsync</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> virtualTableManager <span>=</span> <span>(</span>IVirtualTableManager<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IVirtualTableManager<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>EntityMetadata<span>.</span>ShardingDbContextType<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> virtualTable <span>=</span> virtualTableManager<span>.</span><span>GetVirtualTable</span><span>(</span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>)</span><span>;</span>
            _logger<span>.</span><span>LogDebug</span><span>(</span><span><span>$"get </span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>'s virtualTable "</span></span><span>)</span><span>;</span>
            <span>if</span> <span>(</span>virtualTable <span>==</span> <span>null</span><span>)</span>
            <span>{</span>
                _logger<span>.</span><span>LogDebug</span><span>(</span><span><span>$" </span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>'s virtualTable  is null"</span></span><span>)</span><span>;</span>
                <span>return</span> Task<span>.</span>CompletedTask<span>;</span>
            <span>}</span>
            <span><span>var</span></span> entityMetadataManager <span>=</span> <span>(</span>IEntityMetadataManager<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IEntityMetadataManager<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>EntityMetadata<span>.</span>ShardingDbContextType<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> virtualDataSource <span>=</span> <span>(</span>IVirtualDataSource<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IVirtualDataSource<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>EntityMetadata<span>.</span>ShardingDbContextType<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> tableCreator <span>=</span> <span>(</span>IShardingTableCreator<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IShardingTableCreator<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>EntityMetadata<span>.</span>ShardingDbContextType<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> now <span>=</span> DateTime<span>.</span>Now<span>.</span><span>AddMinutes</span><span>(</span><span>10</span><span>)</span><span>;</span>
            <span><span>var</span></span> tail <span>=</span> virtualTable<span>.</span><span>GetVirtualRoute</span><span>(</span><span>)</span><span>.</span><span>ShardingKeyToTail</span><span>(</span>now<span>)</span><span>;</span>
            <span>ISet<span>&lt;</span><span>string</span><span>></span></span> dataSources <span>=</span> <span>new</span> <span>HashSet<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span><span>;</span>
            <span>if</span> <span>(</span>entityMetadataManager<span>.</span><span>IsShardingDataSource</span><span>(</span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>)</span><span>)</span>
            <span>{</span>
                <span><span>var</span></span> virtualDataSourceRoute <span>=</span> virtualDataSource<span>.</span><span>GetRoute</span><span>(</span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>)</span><span>;</span>
                <span>foreach</span> <span>(</span><span><span>var</span></span> dataSourceName <span>in</span> virtualDataSourceRoute<span>.</span><span>GetAllDataSourceNames</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
            <span>else</span>
            <span>{</span>
                dataSources<span>.</span><span>Add</span><span>(</span>virtualDataSource<span>.</span>DefaultDataSourceName<span>)</span><span>;</span>
            <span>}</span>
            _logger<span>.</span><span>LogInformation</span><span>(</span><span><span>$"auto create table data source names:[</span><span><span>{</span><span><span>string</span><span>.</span><span>Join</span><span>(</span><span>","</span><span>,</span> dataSources<span>)</span></span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
            <span>foreach</span> <span>(</span><span><span>var</span></span> dataSource <span>in</span> dataSources<span>)</span>
            <span>{</span>
                <span>try</span>
                <span>{</span>
                    _logger<span>.</span><span>LogInformation</span><span>(</span><span><span>$"begin table tail:[</span><span><span>{</span><span>tail</span><span>}</span></span><span>],entity:[</span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
                    tableCreator<span>.</span><span>CreateTable</span><span>(</span>dataSource<span>,</span> <span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>,</span> tail<span>)</span><span>;</span>
                    _logger<span>.</span><span>LogInformation</span><span>(</span><span><span>$"succeed table tail:[</span><span><span>{</span><span>tail</span><span>}</span></span><span>],entity:[</span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
                <span>}</span>
                <span>catch</span> <span>(</span><span>Exception</span> e<span>)</span>
                <span>{</span>
                    <span>//ignore</span>
                    _logger<span>.</span><span>LogInformation</span><span>(</span><span><span>$"warning table tail:[</span><span><span>{</span><span>tail</span><span>}</span></span><span>],entity:[</span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
                    <span>if</span> <span>(</span>ShowErrorLog<span>)</span>
                        _logger<span>.</span><span>LogError</span><span>(</span>e<span>,</span> <span><span>$"</span><span><span>{</span><span>dataSource</span><span>}</span></span><span> </span><span><span>{</span><span><span>typeof</span><span>(</span><span>TEntity</span><span>)</span><span>.</span>Name</span><span>}</span></span><span>'s create table error "</span></span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
            virtualTableManager<span>.</span><span>AddPhysicTable</span><span>(</span>virtualTable<span>,</span> <span>new</span> <span>DefaultPhysicTable</span><span>(</span>virtualTable<span>,</span> tail<span>)</span><span>)</span><span>;</span>

            <span>return</span> Task<span>.</span>CompletedTask<span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div><p>代码取自按月分表自动建表任务的代码，当然如果是您自己有定时作业可以完全通过泛型方法的依赖注入获取而不需要反射+强转来实现。</p>
<p><code>IVirtualTableManager&lt;TShardingDbContext&gt;</code> 拥有动态添加物理表的功能<code>AddPhysicTable</code>,来保证程序知道目前有多少个该表的后缀</p>
<p><code>IEntityMetadataManager&lt;TShardingDbContext&gt;</code> 用来判断对应表是否为分表还是分库</p>
<p><code>IVirtualDataSource&lt;TShardingDbContext&gt;</code> 用来获取对应的数据源名称</p>
<p><code>IShardingTableCreator&lt;TShardingDbContext&gt;</code>用来实现表创建</p>
<p>**注意：**因为数据库可能已经创建了对应的表。所以后续的调用会导致表创建抛出异常，这边在无论是否创建成功后都选择将物理表添加到对应的虚拟表里面，并且<code>virtualTableManager.AddPhysicTable</code>已经做好了无法重复添加的校验</p>
<p>**结论：**动态添加表需要满足对应表路由能够正确返回对应目前的数据库表后缀全部数目，在创建对应的数据库表外，还需要对分表对象的<code>IVirtualTable</code>进行追加物理表使框架可以明确知道有这么一张表，并且需要考虑是否需要动态分表路由逻辑，当表后缀有新的添加之后那么是否对应的路由逻辑需要改变呢，比如我们是按租户Id来分表的那么新增后不需要修改路由逻辑，如果我们是取模的那么就需要考虑这个问题,并且需要考虑数据迁移，需要注意下次启动的时候会不会将之前添加的动态表添加进来呢?<code>GetAllTails</code>会不会在下次程序启动的时候不返回本次动态添加的呢</p>
<div><p>注意</p>
<p>!!!框架仅提供分表分库路由不提供数据迁移,数据迁移需要手动实现!!!
!!!框架仅提供分表分库路由不提供数据迁移,数据迁移需要手动实现!!!
!!!框架仅提供分表分库路由不提供数据迁移,数据迁移需要手动实现!!!</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Extension On Now Table</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/extension-only/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/extension-only/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Extension On Now Table</source>
      <category>Advance</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<p>这边十分想用<code>shardiing-core</code>实现分表,但是因为系统里面其他部分很多程序在读这个表,所以这边希望保留原表名的情况下进行分表扩展,那么恭喜你sharding-core支持</p>
]]></content:encoded>
    </item>
    <item>
      <title>Route Parse Compile Cache</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/route-parse-compile-cache/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/route-parse-compile-cache/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Route Parse Compile Cache</source>
      <category>Adv</category>
      <pubDate>Fri, 03 Dec 2021 00:36:36 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="表达式缓存失效情况"> 表达式缓存失效情况</h2>
<h3 id="可以复用表达式"> 可以复用表达式</h3>
<div><pre><code>
        <span>public</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>int</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>
            <span><span>var</span></span> t <span>=</span> <span>TimeFormatToTail</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThan<span>:</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>>=</span> <span>0</span><span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThan<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;</span> <span>0</span><span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;=</span> <span>0</span><span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h3 id="无法复用表达式"> 无法复用表达式</h3>
<div><pre><code>
        <span>public</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>int</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>
            <span><span>var</span></span> r <span>=</span> <span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>1</span><span>,</span> <span>30000</span><span>)</span><span>;</span>
            <span><span>var</span></span> t <span>=</span> <span>TimeFormatToTail</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThan<span>:</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>GreaterThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>>=</span> <span>0</span><span>&amp;&amp;</span>r<span>==</span>r<span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThan<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;</span> <span>0</span> <span>&amp;&amp;</span> r <span>==</span> r<span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>LessThanOrEqual<span>:</span>
                    <span>return</span> tail <span>=></span> String<span>.</span><span>Compare</span><span>(</span>tail<span>,</span> t<span>,</span> StringComparison<span>.</span>Ordinal<span>)</span> <span>&lt;=</span> <span>0</span> <span>;</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><p>复用表达式原理 为便利表达式各个几点针对各个节点的常量值成员变量值进行hashcode计算,因为下面的表达式<code>&gt;</code>,<code>&gt;=</code>出现了随机数所以每次结果将不一样,所以表达式将无法正确计算值。合理设计表达式返回并且利用表达式缓存可以有效提升程序性能,请勿出现上述情况下的表达式会导致表达式无法缓存并且堆积缓存区</p>
]]></content:encoded>
    </item>
    <item>
      <title>High Performance Page</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/pagination/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/pagination/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">High Performance Page</source>
      <category>Advance</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>所谓的高性能分页是针对分表分库下的数据聚合来实现的一种分页，总所周知如果你是内存分页那么时间复杂度将是O(x*n)其中x表示：<code>子sql条数</code>,n表示需要跳过的条数，但是流式聚合的时间复杂度却是O(n)其中n表示需要跳过的条数。也就是说理论上流式聚合的性能要远高于内存聚合。</p>
<h3 id="分表解决方案"> 分表解决方案</h3>
<table>
<thead>
<tr>
<th>解决方案</th>
<th>skip&lt;=100</th>
<th>skip&lt;10000</th>
<th>skip&gt;10000</th>
<th>优点</th>
<th>缺点</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>内存分表</strong></td>
<td>速度快O(n)，n=skip*分表数</td>
<td>速度快O(n)，n=skip*分表数,内存暴涨</td>
<td>O(n)，n=skip*分表数,内存爆炸,速度越来越慢</td>
<td>实现简单,支持分库</td>
<td>skip过大内存暴涨</td>
</tr>
<tr>
<td><strong>union all</strong></td>
<td>速度快</td>
<td>速度快</td>
<td>速度越来越慢</td>
<td>实现简单</td>
<td>不支持分库,不好优化,索引可能会失效</td>
</tr>
<tr>
<td><strong>流式分表</strong></td>
<td>速度快O(n)，n=skip</td>
<td>速度快O(n)，n=skip</td>
<td>O(n)，n=skip 速度越来越慢</td>
<td>支持分库</td>
<td>实现复杂,网络流量随着N增大</td>
</tr>
</tbody>
</table>
<h4 id="_1-内存分页"> 1.内存分页</h4>
<p>顾名思义就是将各个表的结果集合并到内存中进行排序后分页</p>
<h4 id="_2-union-all"> 2.union all</h4>
<p>使用的是数据库本身的聚合操作,用过匿名表来实现和操作当前表一样无感知</p>
<h4 id="_3-流式分表"> 3.流式分表</h4>
<p>和名字一样就是通过next来一次一次获取,和datareader类似只有在next后才可以获取到客户端</p>
<h2 id="高性能分页"> 高性能分页</h2>
<h3 id="介绍-2"> 介绍</h3>
<p>目前sharding-core采用的是流式聚合所以普通情况下你的分页查询就是O(n)的性能代价，但是如果你是按时间来进行分表那么如果分页查询是以时间为主要排序就可以做到O(1)的分页性能。</p>
<h3 id="条件"> 条件</h3>
<p>启用高性能分页有一个很重要的条件需要满足</p>
<p>假设分表对象是<code>a</code>,分表有<code>a1</code>、<code>a2</code>、<code>a3</code>....<code>an</code>满足 表名后缀1、2、3、4....n的排序顺序和<code>order by a.x</code>是同向的即可。</p>
<p>满足以下条件我们就可以说对象<code>a</code>的<code>x</code>属性满足高性能分页</p>
<p>正序:<code>min(a1.x)</code>&lt;<code>max(a1.x)</code>&lt;<code>min(a2.x)</code>&lt;<code>max(a2.x)</code>......<code>min(an.x)</code>&lt;<code>max(an.x)</code>
倒序:<code>min(a1.x)</code>&gt;<code>max(a1.x)</code>&gt;<code>min(a2.x)</code>&gt;<code>max(a2.x)</code>......<code>min(an.x)</code>&gt;<code>max(an.x)</code></p>
<h3 id="分页配置"> 分页配置</h3>
<p>很显然按时间分表无疑就是这种情况下的满足者，那么该如何开启呢</p>
<div><pre><code>    <span>public</span> <span>class</span> <span>OrderPaginationConfiguration</span><span>:</span><span><span>IPaginationConfiguration<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>PaginationBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>PaginationSequence</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span>
                <span>.</span><span>UseRouteComparer</span><span>(</span>Comparer<span>&lt;</span><span>string</span><span>></span><span>.</span>Default<span>)</span>
                <span>.</span><span>UseQueryMatch</span><span>(</span>PaginationMatchEnum<span>.</span>Owner <span>|</span> PaginationMatchEnum<span>.</span>Named <span>|</span> PaginationMatchEnum<span>.</span>PrimaryMatch<span>)</span><span>.</span><span>UseAppendIfOrderNone</span><span>(</span><span>)</span><span>;</span>

            builder<span>.</span><span>ConfigReverseShardingPage</span><span>(</span><span>0.5d</span><span>,</span> <span>10000L</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>我们是将订单表按订单的创建时间进行分页,所以可以得知订单分表后缀满足以上条件</p>
<p><code>order_2019</code>,<code>order_20120</code>,<code>order_2021</code>满足<code>2019</code>&lt;<code>2020</code>&lt;<code>2021</code>且<code>min(order_2019.createTime)</code>&lt;<code>max(order_2019.createTime)</code>&lt;<code>min(order_2020.createTime)</code>&lt;<code>max(order_2020.createTime)</code>&lt;<code>min(order_2021.createTime)</code>&lt;<code>max(order_2021.createTime)</code></p>
<h4 id="paginationsequence"> PaginationSequence</h4>
<p>表示如果分页的时候按这个字段进行排序才会启用</p>
<p>如果你的id是雪花id那么也可以将id进行配置</p>
<div><pre><code>    <span>public</span> <span>class</span> <span>OrderPaginationConfiguration</span><span>:</span><span><span>IPaginationConfiguration<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>PaginationBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>PaginationSequence</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span>
                <span>.</span><span>UseRouteComparer</span><span>(</span>Comparer<span>&lt;</span><span>string</span><span>></span><span>.</span>Default<span>)</span>
                <span>.</span><span>UseQueryMatch</span><span>(</span>PaginationMatchEnum<span>.</span>Owner <span>|</span> PaginationMatchEnum<span>.</span>Named <span>|</span> PaginationMatchEnum<span>.</span>PrimaryMatch<span>)</span><span>.</span><span>UseAppendIfOrderNone</span><span>(</span><span>)</span><span>;</span>
            <span>//雪花id也满足以上表达式    </span>
            builder<span>.</span><span>PaginationSequence</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span>
                <span>.</span><span>UseRouteComparer</span><span>(</span>Comparer<span>&lt;</span><span>string</span><span>></span><span>.</span>Default<span>)</span>
                <span>.</span><span>UseQueryMatch</span><span>(</span>PaginationMatchEnum<span>.</span>Owner <span>|</span> PaginationMatchEnum<span>.</span>Named <span>|</span> PaginationMatchEnum<span>.</span>PrimaryMatch<span>)</span><span>;</span>

            builder<span>.</span><span>ConfigReverseShardingPage</span><span>(</span><span>0.5d</span><span>,</span> <span>10000L</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h4 id="useroutecomparer"> UseRouteComparer</h4>
<p>表示后缀的排序顺序</p>
<h4 id="usequerymatch"> UseQueryMatch</h4>
<p>表示我们应该用何种方式来匹配本次查询,例子中的表名只要是CreateTime是属于本次返回结果的值或者名字匹配或者order by的第一个匹配即可</p>
<h4 id="useappendifordernone"> UseAppendIfOrderNone</h4>
<p>表示如果本次查询没有任何order by字段的时候自动将<code>CreateTime</code>作为order by的条件附加上去，并且为正序当然一般情况下肯定是手动会加上order by所以不用太在意此属性</p>
<h4 id="configreverseshardingpage"> ConfigReverseShardingPage</h4>
<p>表示启用反向排序，当分页total大于10000以上且本次查询skip的数目超过总的total的1/2那么就会启用反向排序</p>
<div><p>注意</p>
<p>反向排序和顺序分页排序互斥优先级先进行顺序分页排序，当不符合顺序分页排序时才进行反向排序</p>
</div>
<h3 id="虚拟路由配置"> 虚拟路由配置</h3>
<div><pre><code>    <span>public</span> <span>class</span> <span>OrderVirtualRoute</span><span>:</span><span><span>AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>

        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> DateTime<span>.</span>Now<span>.</span>Date<span>.</span><span>AddDays</span><span>(</span><span>-</span><span>3</span><span>)</span><span>;</span>
        <span>}</span>
        
        <span>/// &lt;summary></span>
        <span>/// 返回null表示不开启</span>
        <span>/// &lt;/summary></span>
        <span>/// &lt;returns>&lt;/returns></span>
        <span>public</span> <span>override</span> <span>IPaginationConfiguration<span>&lt;</span>Order<span>></span></span> <span>CreatePaginationConfiguration</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>OrderPaginationConfiguration</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><h3 id="如何使用"> 如何使用</h3>
<p>框架已经封装了一个分页的扩展</p>
<div><pre><code>
        <span>public</span> <span>static</span> <span>async</span> <span>Task<span>&lt;</span>ShardingPagedResult<span>&lt;</span>T<span>></span><span>></span></span> <span><span>ToShardingPageAsync</span><span><span>&lt;</span>T<span>></span></span></span><span>(</span><span>this</span> <span>IQueryable<span>&lt;</span>T<span>></span></span> source<span>,</span> <span><span>int</span></span> pageIndex<span>,</span> <span><span>int</span></span> pageSize<span>)</span>
        <span>{</span>
            <span>//设置每次获取多少页</span>
            <span><span>var</span></span> take <span>=</span> pageSize <span>&lt;=</span> <span>0</span> <span>?</span> <span>1</span> <span>:</span> pageSize<span>;</span>
            <span>//设置当前页码最小1</span>
            <span><span>var</span></span> index <span>=</span> pageIndex <span>&lt;=</span> <span>0</span> <span>?</span> <span>1</span> <span>:</span> pageIndex<span>;</span>
            <span>//需要跳过多少页</span>
            <span><span>var</span></span> skip <span>=</span> <span>(</span>index <span>-</span> <span>1</span><span>)</span> <span>*</span> take<span>;</span>
            <span><span>var</span></span> shardingPageManager <span>=</span> ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IShardingPageManager<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>using</span> <span>(</span>shardingPageManager<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span>//获取每次总记录数</span>
                <span><span>var</span></span> count <span>=</span> <span>await</span> source<span>.</span><span>LongCountAsync</span><span>(</span><span>)</span><span>;</span>
                <span>if</span> <span>(</span>count <span>&lt;=</span> skip<span>)</span>
                    <span>return</span> <span>new</span> <span>ShardingPagedResult<span>&lt;</span>T<span>></span></span><span>(</span><span>new</span> <span>List<span>&lt;</span>T<span>></span></span><span>(</span><span>0</span><span>)</span><span>,</span> count<span>)</span><span>;</span>
                <span>//获取剩余条数</span>
                <span><span>var</span></span> remainingCount <span>=</span> count <span>-</span> skip<span>;</span>
                <span>//当剩余条数小于take数就取remainingCount</span>
                <span><span>var</span></span> realTake <span>=</span> remainingCount <span>&lt;</span> <span>take <span>?</span></span> remainingCount <span>:</span> take<span>;</span>
                <span><span>var</span></span> data <span>=</span> <span>await</span> source<span>.</span><span>Skip</span><span>(</span>skip<span>)</span><span>.</span><span>Take</span><span>(</span><span>(</span><span>int</span><span>)</span>realTake<span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
                <span>return</span> <span>new</span> <span>ShardingPagedResult<span>&lt;</span>T<span>></span></span><span>(</span>data<span>,</span> count<span>)</span><span>;</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br></div></div><p>你可以自行封装或使用框架的</p>
<div><pre><code>            <span><span>var</span></span> shardingPageResult <span>=</span> <span>await</span> _defaultTableDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>OrderBy</span><span>(</span>o <span>=></span> o<span>.</span>CreateTime<span>)</span><span>.</span><span>ToShardingPageAsync</span><span>(</span>pageIndex<span>,</span> pageSize<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Transaction</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/transaction/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/adv/transaction/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Transaction</source>
      <category>Advance</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="开启事务"> 开启事务</h2>
<div><pre><code><span>//使用方式和原生efcore一致</span>
<span><span>var</span></span> tran <span>=</span> _defaultTableDbContext<span>.</span>Database<span>.</span><span>BeginTransaction</span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="提交事务"> 提交事务</h2>
<div><pre><code>tran<span>.</span><span>Commit</span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="回滚事务"> 回滚事务</h2>
<div><pre><code>tran<span>.</span><span>Rollback</span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br></div></div><h2 id="如何使用"> 如何使用</h2>
<div><pre><code>
            <span>using</span> <span>(</span><span><span>var</span></span> tran <span>=</span> _defaultTableDbContext<span>.</span>Database<span>.</span><span>BeginTransaction</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                _defaultTableDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Insert</span><span>(</span>data<span>)</span><span>;</span>
                _defaultTableDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                <span><span>var</span></span> a <span>=</span> <span>0</span><span>;</span>
                <span><span>var</span></span> b <span>=</span> <span>1</span> <span>/</span> a<span>;</span><span>//强制出错</span>
                tran<span>.</span><span>Commit</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>使用方式和efcore一致，无需手动调用回滚，会在出错时自动回滚,如果是efcore普通操作需要调用<code>SaveChanges</code>，如果是三方框架直接提交的那么就不需要调用<code>SaveChanges</code></p>
<h2 id="加入外部事务"> 加入外部事务</h2>
<div><pre><code>_defaultTableDbContext<span>.</span>Database<span>.</span><span>UseTransaction</span><span>(</span>transaction<span>)</span>
</code></pre>
<div><span>1</span><br></div></div><p>使用方式和efcore一致</p>
<h2 id="分库下的事务"> 分库下的事务</h2>
<p>分库情况下使用事务需要注意一点，默认启用的是弱事务，如果出现本次操作跨库那么具体的逻辑为开启默认数据源(data source name 为default的那个)事务，之后通知现有的<code>IDataSourceDbContext</code>分别开启事务,提交的时候采用弱一致性，先提交默认的data source name的数据源事务，如果出错并且外部只有一个数据源那么就抛错，如果默认数据源事务出错就直接出错，如果非默认事务提交出错且数据源存在多个将忽略错误依次提交，手动调用rollback如果是回滚那么就是依次回滚不在抛错。仅保证业务逻辑下出错完美事务，网络原因导致的事务提交出错程序无法处理</p>
]]></content:encoded>
    </item>
    <item>
      <title>性能测试</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/benchmark/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/benchmark/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">性能测试</source>
      <category>性能测试</category>
      <pubDate>Fri, 03 Dec 2021 00:36:36 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="性能测试"> 性能测试</h2>
<p>以下所有数据均在开启了表达式编译缓存的情况下测试，并且电脑处于长时间未关机并且开着很多vs和idea的情况下仅供参考,所有测试都是基于ShardingCore x.3.1.63+ version</p>
<p>以下所有数据均在<a href="https://github.com/xuejmnet/sharding-core/blob/main/benchmarks/ShardingCoreBenchmark/EFCoreCrud.cs" target="_blank" rel="noopener noreferrer">源码中有案例</a></p>
<p>efcore版本均为6.0 表结构为string型id的订单取模分成5张表</p>
<p>N代表执行次数</p>
<h4 id="sql-server-2012-data-rows-7734363-773w"> sql server 2012,data rows 7734363 =773w</h4>
<p>// * Summary *</p>
<p>BenchmarkDotNet=v0.13.1, OS=Windows 10.0.18363.1500 (1909/November2019Update/19H2)
AMD Ryzen 9 3900X, 1 CPU, 24 logical and 12 physical cores
.NET SDK=6.0.100
[Host]     : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT
DefaultJob : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>N</th>
<th style="text-align:right">Mean</th>
<th style="text-align:right">Error</th>
<th style="text-align:right">StdDev</th>
<th style="text-align:right">Median</th>
</tr>
</thead>
<tbody>
<tr>
<td>NoShardingFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">2.305 ms</td>
<td style="text-align:right">0.0419 ms</td>
<td style="text-align:right">0.0587 ms</td>
<td style="text-align:right">2.310 ms</td>
</tr>
<tr>
<td>ShardingFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">4.200 ms</td>
<td style="text-align:right">0.0793 ms</td>
<td style="text-align:right">0.0815 ms</td>
<td style="text-align:right">4.205 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">1,521.727 ms</td>
<td style="text-align:right">11.7909 ms</td>
<td style="text-align:right">11.0292 ms</td>
<td style="text-align:right">1,519.390 ms</td>
</tr>
<tr>
<td>ShardingNoIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">1,841.243 ms</td>
<td style="text-align:right">36.1808 ms</td>
<td style="text-align:right">49.5247 ms</td>
<td style="text-align:right">1,826.228 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexCountAsync</td>
<td>10</td>
<td style="text-align:right">1,602.127 ms</td>
<td style="text-align:right">31.2448 ms</td>
<td style="text-align:right">26.0908 ms</td>
<td style="text-align:right">1,592.494 ms</td>
</tr>
<tr>
<td>ShardingNoIndexCountAsync</td>
<td>10</td>
<td style="text-align:right">1,946.878 ms</td>
<td style="text-align:right">33.9453 ms</td>
<td style="text-align:right">31.7525 ms</td>
<td style="text-align:right">1,948.952 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexFirstOrDefaultAsync0w</td>
<td>10</td>
<td style="text-align:right">703.570 ms</td>
<td style="text-align:right">10.4157 ms</td>
<td style="text-align:right">9.2332 ms</td>
<td style="text-align:right">705.236 ms</td>
</tr>
<tr>
<td>ShardingNoIndexFirstOrDefaultAsync0w</td>
<td>10</td>
<td style="text-align:right">857.718 ms</td>
<td style="text-align:right">16.4004 ms</td>
<td style="text-align:right">15.3409 ms</td>
<td style="text-align:right">858.675 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexFirstOrDefaultAsync99w</td>
<td>10</td>
<td style="text-align:right">818.947 ms</td>
<td style="text-align:right">16.2501 ms</td>
<td style="text-align:right">24.8156 ms</td>
<td style="text-align:right">814.093 ms</td>
</tr>
<tr>
<td>ShardingNoIndexFirstOrDefaultAsync99w</td>
<td>10</td>
<td style="text-align:right">957.405 ms</td>
<td style="text-align:right">15.8800 ms</td>
<td style="text-align:right">16.9915 ms</td>
<td style="text-align:right">953.739 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexLikeToListAsync</td>
<td>10</td>
<td style="text-align:right">7,247.554 ms</td>
<td style="text-align:right">140.2374 ms</td>
<td style="text-align:right">191.9586 ms</td>
<td style="text-align:right">7,292.292 ms</td>
</tr>
<tr>
<td>ShardingNoIndexLikeToListAsync</td>
<td>10</td>
<td style="text-align:right">7,232.702 ms</td>
<td style="text-align:right">106.7630 ms</td>
<td style="text-align:right">99.8662 ms</td>
<td style="text-align:right">7,184.900 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexToListAsync</td>
<td>10</td>
<td style="text-align:right">815.207 ms</td>
<td style="text-align:right">14.6120 ms</td>
<td style="text-align:right">21.4181 ms</td>
<td style="text-align:right">804.195 ms</td>
</tr>
<tr>
<td>ShardingNoIndexToListAsync</td>
<td>10</td>
<td style="text-align:right">948.056 ms</td>
<td style="text-align:right">7.3526 ms</td>
<td style="text-align:right">6.8776 ms</td>
<td style="text-align:right">944.511 ms</td>
</tr>
</tbody>
</table>
<h4 id="mysql-5-7-data-rows-7553790-755w-innerdb-buffer-size-3g"> mysql 5.7,data rows 7553790=755w innerdb_buffer_size=3G</h4>
<p>// * Summary *</p>
<p>BenchmarkDotNet=v0.13.1, OS=Windows 10.0.18363.1500 (1909/November2019Update/19H2)
AMD Ryzen 9 3900X, 1 CPU, 24 logical and 12 physical cores
.NET SDK=6.0.100
[Host]     : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT
DefaultJob : .NET 6.0.0 (6.0.21.52210), X64 RyuJIT</p>
<table>
<thead>
<tr>
<th>Method</th>
<th>N</th>
<th style="text-align:right">Mean</th>
<th style="text-align:right">Error</th>
<th style="text-align:right">StdDev</th>
<th style="text-align:right">Median</th>
</tr>
</thead>
<tbody>
<tr>
<td>NoShardingFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">10.092 ms</td>
<td style="text-align:right">1.6571 ms</td>
<td style="text-align:right">4.5082 ms</td>
<td style="text-align:right">8.677 ms</td>
</tr>
<tr>
<td>ShardingFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">9.082 ms</td>
<td style="text-align:right">0.1810 ms</td>
<td style="text-align:right">0.3445 ms</td>
<td style="text-align:right">9.096 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">6.586 ms</td>
<td style="text-align:right">0.0795 ms</td>
<td style="text-align:right">0.0705 ms</td>
<td style="text-align:right">6.565 ms</td>
</tr>
<tr>
<td>ShardingNoIndexFirstOrDefaultAsync</td>
<td>10</td>
<td style="text-align:right">17.617 ms</td>
<td style="text-align:right">0.3345 ms</td>
<td style="text-align:right">0.3129 ms</td>
<td style="text-align:right">17.481 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexCountAsync</td>
<td>10</td>
<td style="text-align:right">6.498 ms</td>
<td style="text-align:right">0.1188 ms</td>
<td style="text-align:right">0.1415 ms</td>
<td style="text-align:right">6.454 ms</td>
</tr>
<tr>
<td>ShardingNoIndexCountAsync</td>
<td>10</td>
<td style="text-align:right">17.791 ms</td>
<td style="text-align:right">0.2928 ms</td>
<td style="text-align:right">0.2739 ms</td>
<td style="text-align:right">17.805 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexFirstOrDefaultAsync0w</td>
<td>10</td>
<td style="text-align:right">3.239 ms</td>
<td style="text-align:right">0.0285 ms</td>
<td style="text-align:right">0.0267 ms</td>
<td style="text-align:right">3.231 ms</td>
</tr>
<tr>
<td>ShardingNoIndexFirstOrDefaultAsync0w</td>
<td>10</td>
<td style="text-align:right">8.826 ms</td>
<td style="text-align:right">0.1719 ms</td>
<td style="text-align:right">0.1688 ms</td>
<td style="text-align:right">8.806 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexFirstOrDefaultAsync99w</td>
<td>10</td>
<td style="text-align:right">3.260 ms</td>
<td style="text-align:right">0.0208 ms</td>
<td style="text-align:right">0.0194 ms</td>
<td style="text-align:right">3.257 ms</td>
</tr>
<tr>
<td>ShardingNoIndexFirstOrDefaultAsync99w</td>
<td>10</td>
<td style="text-align:right">8.634 ms</td>
<td style="text-align:right">0.1062 ms</td>
<td style="text-align:right">0.0994 ms</td>
<td style="text-align:right">8.653 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexLikeToListAsync</td>
<td>10</td>
<td style="text-align:right">26,941.543 ms</td>
<td style="text-align:right">138.5988 ms</td>
<td style="text-align:right">129.6454 ms</td>
<td style="text-align:right">26,920.578 ms</td>
</tr>
<tr>
<td>ShardingNoIndexLikeToListAsync</td>
<td>10</td>
<td style="text-align:right">5,840.364 ms</td>
<td style="text-align:right">112.0434 ms</td>
<td style="text-align:right">115.0604 ms</td>
<td style="text-align:right">5,797.137 ms</td>
</tr>
<tr>
<td>NoShardingNoIndexToListAsync</td>
<td>10</td>
<td style="text-align:right">25,865.136 ms</td>
<td style="text-align:right">115.6391 ms</td>
<td style="text-align:right">102.5111 ms</td>
<td style="text-align:right">25,847.258 ms</td>
</tr>
<tr>
<td>ShardingNoIndexToListAsync</td>
<td>10</td>
<td style="text-align:right">5,502.922 ms</td>
<td style="text-align:right">92.7201 ms</td>
<td style="text-align:right">86.7305 ms</td>
<td style="text-align:right">5,483.847 ms</td>
</tr>
</tbody>
</table>
<p>具体可以通过first前两次结果来计算得出结论单次查询的的损耗为0.3-0.4毫秒之间,通过数据聚合和数据路由的损耗单次在0.3ms-0.4ms,其中创建dbcontext为0.1毫秒目前没有好的优化方案,0.013毫秒左右是路由表达式解析和编译,复杂表达式可能更加耗时,剩下的0.28毫秒为数据源和表后缀的解析等操作包括实例的反射创建和数据的聚合，
sqlserver的各项数据在分表和未分表的情况下都几乎差不多可以得出在770w数据集情况下数据库还并未是数据瓶颈的关键，但是mysql可以看到在分表和未分表的情况下如果涉及到没有索引的全表扫描那么性能的差距将是分表后的表数目之多，测试中为5-6倍，也就是分表数目</p>
]]></content:encoded>
    </item>
    <item>
      <title>Introduce</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/introduce/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/introduce/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Introduce</source>
      <category>Guide</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="important"> Important</h2>
<p>this is very Important if u first use <a href="/sharding-core-doc/en/important">Important</a></p>
<div><p>警告</p>
<p>！！！Important,Important,Important！！！</p>
<p>！！！Important,Important,Important！！！</p>
<p>！！！Important,Important,Important！！！</p>
</div>
<p>ShardingCore best solution for <a href="https://github.com/dotnet/efcore" target="_blank" rel="noopener noreferrer">efcore</a> sharding。</p>
<div><p>注意</p>
<ol>
<li>this lib is efcore extension only</li>
<li>very good this lib</li>
<li>should manual migrate data</li>
<li>if u framework use efcore,add sharding-core this ez,configure <code>DbContextOptionsBuilder</code>(e。g <a href="https://github.com/abpframework/abp" target="_blank" rel="noopener noreferrer">abp vnext</a>)</li>
</ol>
</div>
<h2 id="advantage"> Advantage</h2>
<ul>
<li><strong>Code First</strong></li>
</ul>
<p>support efcore's code first。</p>
<ul>
<li><strong>customer route</strong></li>
</ul>
<p>support customer route sharding table and data base</p>
<ul>
<li><strong>default route</strong></li>
</ul>
<p>support more default route :int field hash code,string field hash code,long field time sharding,datetime field sharding,and support dynamic append table</p>
<ul>
<li><strong>any type field sharding</strong></li>
</ul>
<p>support any type field e.g:string,datetime,long,int...</p>
<ul>
<li><strong>join、group</strong></li>
</ul>
<p>support sharding entity join no sharding entity,sharding entity join sharding entity, group by too support</p>
<ul>
<li><strong>high performance page</strong></li>
</ul>
<p>sequence table tail support O(1) page,and support reverse page</p>
<ul>
<li><strong>manual route</strong></li>
</ul>
<p>support hint route</p>
<ul>
<li><strong>batch operate</strong></li>
</ul>
<p>support efcore batch operate extension</p>
<ul>
<li><strong>auto track</strong></li>
</ul>
<p>support efcore track</p>
<ul>
<li><strong>zero learning cost</strong></li>
</ul>
<p>use same as efcore native operation</p>
<ul>
<li><strong>multi data source support</strong></li>
</ul>
<p>support efcore2+ version sharding</p>
<ul>
<li><strong>multi entity properity sharding</strong></li>
</ul>
<p>sharding entity can set more than one property to support sharding query</p>
<ul>
<li><strong>dynaimc sharding database</strong></li>
</ul>
<p>support dynamic sharding database in application running</p>
<ul>
<li><strong>dynamic read write</strong></li>
</ul>
<p>support dynamic read write in application running</p>
<ul>
<li><strong>dynamic multi sharding config</strong></li>
</ul>
<p>support dynamic multi sharding config in application running</p>
<p>go!  go!  go!</p>
]]></content:encoded>
    </item>
    <item>
      <title>自动追踪</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/auto-track/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/auto-track/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">自动追踪</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<p>自动追踪</p>
]]></content:encoded>
    </item>
    <item>
      <title>参数配置</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/params-confg/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/params-confg/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">参数配置</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="autotrackentity"> AutoTrackEntity</h2>
<p>sharding-core默认针对分表后的数据将不支持追踪,未分表的对象支持原生efcore的追踪规则,如果你的查询对象A是部分表的那么依旧符合原生使用efcore的追踪规则,针对分表对象B那么将不再支持追踪.</p>
<h3 id="使用追踪"> 使用追踪</h3>
<p>你可以设置<code>AutoTrackEntity</code>为true</p>
<div><pre><code>services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>Begin</span><span>(</span>o <span>=></span>
                <span>{</span>
                <span>}</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>那么所有的对象都将支持追踪。</p>
<h3 id="不启用追踪"> 不启用追踪</h3>
<p><code>AutoTrackEntity</code>设置为true或者false都没什么关系,建议设置为true，因为有可能需要使用追踪</p>
<div><pre><code> services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>DefaultShardingDbContext<span>></span></span></span><span>(</span>
                    <span>(</span>conn<span>,</span> o<span>)</span> <span>=></span>
                        o<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>.</span><span>UseQueryTrackingBehavior</span><span>(</span>QueryTrackingBehavior<span>.</span>NoTracking<span>)</span>
                <span>)</span><span>.</span><span>Begin</span><span>(</span>o <span>=></span>
                <span>{</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseQueryTrackingBehavior</span><span>(</span>QueryTrackingBehavior<span>.</span>NoTracking<span>)</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>追加所有的创建<code>DbContext</code>的委托<code>.UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking)</code>那么所有的查询都将不再启用追踪除非手动调用<code>AsTracking</code></p>
<div><p>注意</p>
<p>因为<code>AutoTrackEntity</code>设置为false后如果不设置<code>DbContext</code>为<code>.UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking)</code>那么分表后的查询依然会走追踪只是程序无法追踪到，因为查询的原理会新创建n个<code>DbContext</code>但是这些<code>DbContext</code>进行查询的时候并没有使用<code>NoTracking</code>所以性能上还是会有一定的损失，<strong>总结就是<code>AutoTrackEntity</code>无脑设置为true</strong></p>
</div>
<h2 id="ensurecreatedwithoutshardingtable"> EnsureCreatedWithOutShardingTable</h2>
<p>这个属性的意思很好理解就是是否需要在启动的时候创建表，这边的创建表是除了分表的对象，其他对象都会直接创建对应的表，只有当数据库是空的前提下或者没有数据库的前提下会自动创建数据库和普通表，如果您是使用<a href="/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<div><p>注意</p>
<p>!!!<strong>只有</strong>当数据库是空的前提下或者没有数据库的前提下会自动创建数据库和普通表!!!</p>
<p>!!!<strong>只有</strong>当数据库是空的前提下或者没有数据库的前提下会自动创建数据库和普通表!!!</p>
<p>!!!<strong>只有</strong>当数据库是空的前提下或者没有数据库的前提下会自动创建数据库和普通表!!!</p>
</div>
<h2 id="createshardingtableonstart"> CreateShardingTableOnStart</h2>
<p>这个熟悉的意思就是是否需要在启动的时候创建表，但是由于<code>efcore</code>并未提供关于表是否存在的判断，所以如果你将这个值设置为true,那么每次都会在启动的时候都会去执行创建表的方法，这样就会导致启动的时候如果有某些表过多那么就会导致启动速度变慢，可以再您未创建表的时候使用这个属性，创建完成后将这个属性设置为false，如果您是使用<a href="/sharding-core-doc/sharding-core-doc/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<h2 id="ignorecreatetableerror"> IgnoreCreateTableError</h2>
<p><code>sharding-core</code>默认会在创建表失败后输出错误信息,但是输出的信息会被log记录所以为了log不记录这些信息，可以将这个值设置为true那么如果创建失败(已经存在表)框架将不会抛出对应的错误消息，如果您是使用<a href="/sharding-core-doc/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<h2 id="parallelquerymaxthreadcount"> ParallelQueryMaxThreadCount</h2>
<p>并发查询最大线程数,默认cpu核心数*2，因为分表/分库后的单次查询会涉及到N张表，N&gt;=1为了保证单次查询不会导致整个系统崩溃掉，所以这边提供了这个属性，可以保证涉及到跨库或者跨表的时候查询不会创建过多的线程来执行<code>DbConnection</code></p>
<h2 id="parallelquerytimeout"> ParallelQueryTimeOut</h2>
<p>并发查询超时时间,默认30秒,这个字段也是为了在分成多个线程查询后可能导致线程一致未返回结果，所以添加了这个字段在超时后可以取消掉现有的线程,防止无限制等待。</p>
]]></content:encoded>
    </item>
    <item>
      <title>读写分离</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/read-write/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/read-write/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">读写分离</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
    </item>
    <item>
      <title>概念</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/terminology/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/terminology/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">概念</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<p><code>sharding-core</code>框架是一款分表分库组件,一款将efcore的一个dbcontext一个对象一张表扩展成了一个dbcontext一个对象多张表对应多个dbcontext,一款基于表达式解析，具有高性能路由的分表分库框架。</p>
<h2 id="全局"> 全局</h2>
<h3 id="ientitymetadatamanager"> IEntityMetadataManager</h3>
<p><code>IEntityMetadataManager&lt;TShardingDbContext&gt;</code>管理对象数据，将对象数据分表和分库的对象进行存储管理，可以区分对象是否分表是否分库，并且可以获取对应的对象类型元数据<code>EntityMetadata</code></p>
<div><pre><code><span>//直接获取</span>
ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IEntityMetadataManager<span>&lt;</span>TShardingDbContext<span>></span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
<span>//通过非泛型方法获取</span>
<span>(</span>IEntityMetadataManager<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IEntityMetadataManager<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>shardingDbContext<span>.</span><span>GetType</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="entitymetadata"> EntityMetadata</h3>
<p><code>EntityMetadata</code>对象类型元数据，是针对分表分库对象的数据解析后的存储，通过对象类型元数据可以获取到对象的类型和对应的<code>虚拟表名</code>(不带后缀的表名)，<code>表主键</code>，是否分表是否分库，包括分表he分库的对应字段属性信息</p>
<div><pre><code><span>//直接获取</span>
<span>IEntityMetadataManager</span> entityMetadataManager<span>=</span><span>..</span><span>..</span><span>.</span><span>;</span>
entityMetadataManager<span>.</span><span>TryGet</span><span>(</span>EntityType<span>)</span><span>;</span>
entityMetadataManager<span>.</span><span><span>TryGet</span><span><span>&lt;</span>TEntity<span>></span></span></span><span>(</span>TEntity<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="ivirtualdatasource"> IVirtualDataSource</h3>
<p><code>IVirtualDataSource&lt;TShardingDbContext&gt;</code>虚拟数据源，虚拟数据源用于记录当前分库拥有多少个数据源名称(拥有多少个:DataSourceName),
整个dbcontext只有一个，可以通过依赖注入获取 .</p>
<div><pre><code><span>//直接获取</span>
ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IVirtualDataSource<span>&lt;</span>TShardingDbContext<span>></span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
<span>//通过非泛型方法获取</span>
<span>(</span>IVirtualDataSource<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IVirtualDataSource<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>shardingDbContext<span>.</span><span>GetType</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><div><p>自定义标题</p>
<p>因为<code>IVirtualDataSource&lt;TShardingDbContext&gt;</code>继承<code>IVirtualDataSource</code>，并且所有的接口都在<code>IVirtualDataSource</code>但是注入为了区分多个<code>DdbContext</code>之间所以采用泛型注入，其他接口也是同理</p>
</div>
<h3 id="datasourcename"> DataSourceName</h3>
<p>数据源名称，默认针对<code>ShardingCore</code>每个链接都对应其自己的数据源，都有属于自己的数据源名称和数据源的链接。无论是否分表数据源名称都会有，只不过因为仅分表状态下只链接单个数据库，所以数据源名称在整个框架下只有一个，所以如果您是分表那么数据源名称可以随便添加，因为默认的数据源名称有且只有一个。</p>
<div><pre><code><span>//配置</span>
 <span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span><span>"Data Source=localhost;Initial Catalog=ShardingCoreDBxx0;Integrated Security=True;"</span><span>)</span>
                <span>.</span><span>AddShardingDataSource</span><span>(</span>sp <span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span><span>"ds1"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBxx1;Integrated Security=True;"</span><span>}</span><span>,</span>
                        <span>{</span><span>"ds2"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBxx2;Integrated Security=True;"</span><span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>通过上面我们可以看到我们其实分了三个数据库分别是<code>ds0</code>,<code>ds1</code>,<code>ds2</code>,使用分表的时候需要注意，仅分表对象才会进入分表，其他所有没有分表路由的对象将全部走DefaultDataSourceName数据库。</p>
<h3 id="ishardingtablecreator"> IShardingTableCreator</h3>
<p>分表对象创建,可以创建对应的分表指定对应的表后缀即可</p>
<div><pre><code><span>//直接获取</span>
ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IShardingTableCreator<span>&lt;</span>TShardingDbContext<span>></span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
<span>//通过非泛型方法获取</span>
<span>(</span>IShardingTableCreator<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IShardingTableCreator<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>shardingDbContext<span>.</span><span>GetType</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="分库概念"> 分库概念</h2>
<h3 id="ivirtualdatasourceroute"> IVirtualDataSourceRoute</h3>
<p><code>IVirtualDataSourceRoute</code>虚拟数据源路由,如果您的对象是一个分库对象，那么分库对象必须实现一个虚拟数据源路由<code>IVirtualDataSourceRoute</code>，
虚拟数据源路由的作用是用来对分库对象进行路由，告诉框架程序应该如何对分库对象进行路由去对应的数据源里面</p>
<div><pre><code><span>//首先获取IVirtualDataSource</span>
<span>IVirtualDataSource</span> virtualDataSource<span>=</span><span>..</span><span>..</span><span>.</span><span>;</span>
<span>//方法1</span>
virtualDataSource<span>.</span><span>GetRoute</span><span>(</span>EntityType<span>)</span><span>;</span>
<span>//方法2</span>
virtualDataSource<span>.</span><span><span>GetRoute</span><span><span>&lt;</span>TEntity<span>></span></span></span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="分表"> 分表</h2>
<ul>
<li>[Tail]
尾巴、后缀物理表的后缀</li>
<li>[TableSeparator]
尾巴前缀虚拟表和物理表的后缀中间的字符</li>
<li>[物理表]
顾名思义就是数据库对应的实际表信息,表名(TableName+ TableSeparator+ Tail)比如:SysUser_2021,这边<code>SysUser</code>就是原本未分表时候的映射到数据库的物理表名称，后续的下划线<code>_</code>表示<code>TableSeparator</code>,<code>2021</code>表示后缀<code>Tail</code></li>
</ul>
<p>框架内部所有的分表名称规则都是按照(TableName+ TableSeparator+ Tail)来创建的</p>
<h3 id="ivirtualtablemanager"> IVirtualTableManager</h3>
<p><code>IVirtualTableManager&lt;TShardingDbContext&gt;</code>虚拟表管理者，因为对象和数据库表之间的关系从原先的一对一变成了一对一虚拟表然后虚拟表一对多，所以我们一个对象会对应一个虚拟表，这边的所有的虚拟表全部由<code>IVirtualTableManager&lt;TShardingDbContext&gt;</code>管理</p>
<div><pre><code>
<span>//获取IVirtualTableManager</span>
ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IVirtualTableManager<span>&lt;</span>TShardingDbContext<span>></span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
<span>//通过非泛型方法获取</span>
<span>(</span>IVirtualTableManager<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IVirtualTableManager<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>shardingDbContext<span>.</span><span>GetType</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="ivirtualtable"> IVirtualTable</h3>
<p><code>IVirtualTable</code>叫做虚拟表,原先<code>DbContext</code>对应一个<code>Entity</code>对应一张<code>Table</code>,虚拟表的出现将<code>Entity</code>和<code>Table</code>之间多了一个虚拟表的概念，就是说原先的对象是直接映射到实际表，那么因为现在实际表名称有很多张，所以一个对象对应的是虚拟表<code>IVirtualTable</code>，虚拟表内部拥有虚拟表路由<code>IVirtualTableRoute</code>，虚拟表路由会将crud的结果通过虚拟表路由，路由到对应的实际表，所以原则上你在数据库里面将看不到原表名称的实际表，除非你的分表是没有后缀的。</p>
<div><pre><code><span>//通过虚拟表管理者</span>
<span>IVirtualTableManager</span> virtualTableManager<span>=</span><span>..</span><span>..</span><span>;</span>
virtualTableManager<span>.</span><span>GetVirtualTable</span><span>(</span>EntityType<span>)</span>
virtualTableManager<span>.</span><span><span>GetVirtualTable</span><span><span>&lt;</span>TEntity<span>></span></span></span><span>(</span><span>)</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h3 id="ivirtualtableroute"> IVirtualTableRoute</h3>
<p><code>IVirtualTableRoute</code>虚拟表路由，针对对象如果我们需要对其进行分表，那么我么你必须要重写分表的路由，分表路由会告诉程序我们的这个sql执行是该如何找寻对应的实际表，而不用用户手动去指定对应的表，每一个虚拟表都会拥有一个虚拟表路由</p>
<div><pre><code><span>//首先获取虚拟表</span>
<span>IVirtualTable</span> virtualTable<span>=</span><span>..</span><span>.</span><span>;</span>
<span>//通过虚拟表获取虚拟表路由</span>
virtualTable<span>.</span><span>GetVirtualRoute</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>快速上手</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/quick-start/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/guide/quick-start/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">快速上手</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次demo源码：<a href="https://github.com/xuejmnet/ShardingCoreDocDemo/tree/main/EFCoreSharding" target="_blank" rel="noopener noreferrer">EFCoreSharding</a></p>
<h2 id="版本"> 版本</h2>
<p>sharding-core 目前为止以efcore版本号作为主版本，所以您会在nuget上看到2.x,3.x,5.x的版本,如果需要请安装最新版nuget上的efcore版本对应的sharding-core版本</p>
<div><p>注意</p>
<p>如果nuget上的sharding-core版本不适合您目前的efcore版本并且您目前不想升级对应的efcore版本，请自行下载程序进行源码编译替换成您所需要的efcore版本</p>
</div>
<h2 id="安装和启动"> 安装和启动</h2>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="使用efcore"> 使用efcore</h2>
<ol>
<li>首先我们创建一个空的控制台程序</li>
</ol>
<div><pre><code><span># 创建一个目录用于测试</span>
<span>mkdir</span> EFCoreSharding

<span># 进入创建的目录</span>
<span>cd</span> EFCoreSharding

<span># 创建一个空的控制台程序</span>
dotnet new console

<span># 添加efcore 测试我们采用sqlserver作为测试数据库，其他数据库用法一致</span>
dotnet <span>add</span> package Microsoft.EntityFrameworkCore.SqlServer
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><p>注意</p>
<p>这边我们文档编写时控制台程序为net5.0，所以我们这边选择了efcore5的版本的最新版，具体请参考您自己的项目</p>
</div>
<ol start="2">
<li>创建订单对象<code>Order</code>：</li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 订单表</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>Order</span>
<span>{</span>
    <span>/// &lt;summary></span>
    <span>/// 订单Id</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>/// &lt;summary></span>
    <span>/// 付款用户名</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>/// &lt;summary></span>
    <span>/// 付款金额分</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>/// &lt;summary></span>
    <span>/// 创建时间</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span>DateTime</span> CreateTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>/// &lt;summary></span>
    <span>/// 是否已删除</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span><span>bool</span></span> IsDelete <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><ol start="3">
<li>创建efcore的dbcontext</li>
</ol>
<div><pre><code><span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>DbContext</span></span>
<span>{</span>
    <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span><span>:</span><span>base</span><span>(</span>options<span>)</span>
    <span>{</span>
        
    <span>}</span>

    <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
    <span>{</span>
        <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
        modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>o <span>=></span>
        <span>{</span>
            o<span>.</span><span>HasKey</span><span>(</span>p <span>=></span> p<span>.</span>Id<span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>40</span><span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"订单Id"</span><span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"付款用户名"</span><span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>Money<span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"付款金额分"</span><span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>CreateTime<span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"创建时间"</span><span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>IsDelete<span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"是否已删除"</span><span>)</span><span>;</span>
            o<span>.</span><span>HasQueryFilter</span><span>(</span>p <span>=></span> p<span>.</span>IsDelete <span>==</span> <span>false</span><span>)</span><span>;</span>
            o<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><ol start="4">
<li>启动配置efcore并且插入对应的数据</li>
</ol>
<p>在<code>Program</code>的<code>Main</code>函数下添加如下代码</p>
<div><pre><code><span>class</span> <span>Program</span>
<span>{</span>
    <span>static</span> <span><span>void</span></span> <span>Main</span><span>(</span><span><span>string</span><span>[</span><span>]</span></span> args<span>)</span>
    <span>{</span>
        <span>IServiceCollection</span> services <span>=</span> <span>new</span> <span>ServiceCollection</span><span>(</span><span>)</span><span>;</span>
        services<span>.</span><span>AddLogging</span><span>(</span><span>)</span><span>;</span>
        services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>o <span>=></span> o<span>.</span><span>UseSqlServer</span><span>(</span><span>"Data Source=localhost;Initial Catalog=EFCoreShardingDB;Integrated Security=True;"</span><span>)</span><span>)</span><span>;</span>
        <span><span>var</span></span> buildServiceProvider <span>=</span> services<span>.</span><span>BuildServiceProvider</span><span>(</span><span>)</span><span>;</span>
        <span>using</span> <span>(</span><span><span>var</span></span> scope <span>=</span> buildServiceProvider<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> myDbContext <span>=</span> scope<span>.</span>ServiceProvider<span>.</span><span><span>GetService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>//如果不存在就创建数据库和对应的数据库表</span>
            myDbContext<span>.</span>Database<span>.</span><span>EnsureCreated</span><span>(</span><span>)</span><span>;</span>

            <span><span>var</span></span> now <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>1</span><span>,</span><span>1</span><span>)</span><span>;</span>
            <span><span>var</span></span> orders <span>=</span> Enumerable<span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span>10</span><span>)</span><span>.</span><span>Select</span><span>(</span><span>(</span>o<span>,</span>i<span>)</span><span>=></span><span>new</span> <span>Order</span><span>(</span><span>)</span>
            <span>{</span>
                Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                CreateTime <span>=</span> now<span>.</span><span>AddDays</span><span>(</span>i<span>)</span><span>,</span>
                Payer <span>=</span> <span><span>$"用户:</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                Money <span>=</span> i<span>*</span><span>100</span><span>,</span>
                IsDelete <span>=</span> <span>false</span>
            <span>}</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
            myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div><div><p>提示</p>
<ol>
<li>这边我们采用的是<code>myDbContext.Database.EnsureCreated();</code>方法可以保证第一次创建对应的表和库。</li>
<li>并不是所有的efcore都需要按我这种写法,具体按您自己的原先的使用即可。</li>
<li>程序运行后可以看到数据库和表被创建并且数据被插入到对应的数据库里面了。</li>
</ol>
</div>
<h2 id="efcore升级到sharding-core"> efcore升级到sharding-core</h2>
<p>目前efcore的使用是单表单库的和实体对象是一对一的，我们将对此进行升级，添加sharding-core的支持，目前我们这边有两种方式可以配置<code>Order</code>支持分表分库：</p>
<h3 id="添加sharding-core包"> 添加sharding-core包</h3>
<div><pre><code>dotnet <span>add</span> package ShardingCore
</code></pre>
<div><span>1</span><br></div></div><div><p>提示</p>
<p>根据项目自己选择sharding-core 2.x/3.x/5.x......的最新版本.</p>
</div>
<h3 id="删除掉原先的数据库"> 删除掉原先的数据库</h3>
<p>因为目前还没有涉及到code-first的用法所以目前我们先对其进行数据库的重建</p>
<h3 id="虚拟路由配置-推荐"> 虚拟路由配置(推荐)</h3>
<p>首先我们针对当前已有的项目进行<code>Order</code>分表的配置,路由规则订单按Id取模</p>
<ol>
<li>创建分表路由<code>OrderVirtualTableRoute</code></li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 创建虚拟路由</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
<span>{</span>
    <span>public</span> <span>OrderVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
    <span>{</span>
    <span>}</span>

    <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
    <span>{</span>
        builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        builder<span>.</span><span>AutoCreateTable</span><span>(</span><span>null</span><span>)</span><span>;</span>
        builder<span>.</span><span>TableSeparator</span><span>(</span><span>"_"</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><p>提示</p>
<ol>
<li><code>ShardingProperty</code>必须指定,表示具体按什么字段进行分表</li>
<li><code>AutoCreateTable</code>可选,表示是否需要在<strong>启动</strong>的时候建表:null表示根据全局配置,true:表示需要,false:表示不需要,默认null</li>
<li><code>TableSeparator</code>可选,表示分表后缀和虚拟表名之间的分隔连接符,默认<code>_</code></li>
<li><code>AbstractSimpleShardingModKeyStringVirtualTableRoute&lt;Order&gt;</code>由sharding-core提供的默认取模分表规则,其中2代表分表后尾巴有两位,3表示按3取模所以后缀为:00,01,02。因为最多2位所以可以最多到99,如果需要了解更多路由<a href="/sharding-core-doc/pages/defaultroute">默认路由</a></li>
</ol>
</div>
<h3 id="接口特性配置"> 接口特性配置</h3>
<p>除了路由配置您还可以使用接口和特性来实现</p>
<ol>
<li>让订单<code>Order</code>继承<code>IShardingTable</code></li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 订单表</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>Order</span><span>:</span><span><span>IShardingTable</span></span>
<span>{</span>
  <span>//.....</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><ol start="2">
<li>对<code>Order</code>需要分表的字段进行分表字段特性添加(仅支持一个分表字段)</li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 订单表</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>Order</span><span>:</span><span><span>IShardingTable</span></span>
<span>{</span>
  <span>/// &lt;summary></span>
  <span>/// 订单Id</span>
  <span>/// &lt;/summary></span>
  <span>[</span>ShardingTableKey<span>]</span>
  <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
  <span>//.....</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><ol start="3">
<li>创建分表路由<code>OrderVirtualTableRoute</code></li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 创建虚拟路由</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
<span>{</span>
    <span>public</span> <span>OrderVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
    <span>{</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><div><p>提示</p>
<ol>
<li><code>ShardingTableKey</code>特性表示对应的属性是需要被分表的字段,如：<code>Order</code>对象通过<code>Id</code>属性来进行分表</li>
<li>按接口+特性分表我们发现虚拟路由里面将不需要配置对应的方法<code>Configure</code></li>
<li>推荐使用第一种路由处配置对应的分表信息</li>
</ol>
</div>
<h3 id="配置dbcontext"> 配置dbcontext</h3>
<p>替换<code>MyDbContext</code>的父类</p>
<div><pre><code><span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
<span>{</span>
    <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span><span>:</span><span>base</span><span>(</span>options<span>)</span>
    <span>{</span>
        
    <span>}</span>
    <span>//....</span>
    <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><div><p>提示</p>
<ol>
<li><code>AbstractShardingDbContext</code>是系统默认实现了<code>IShardingDbContext</code>的抽象类,你也可以自行实现</li>
<li><code>IShardingTableDbContext</code>继承该接口的<code>DbContext</code>表示需要实现分表功能,如果您只需要分库那么可以不继承该对象</li>
</ol>
</div>
<h2 id="启动配置"> 启动配置</h2>
<p>介绍完两种配置后下面我们开始对程序进行</p>
<p>目前sharding-core支持两种配置方式,两种配置方式一样</p>
<ol>
<li>通过<code>services.AddShardingDbContext&lt;MyDbContext&gt;()</code>,</li>
<li>通过在原先的配置<code>services.AddDbContext&lt;MyDbContext&gt;()</code>后追加新的配置<code>services.AddShardingConfigure&lt;MyDbContext&gt;()</code>,</li>
</ol>
<div><p>提示</p>
<ol>
<li>两种配置方式一样,第一种是对第二种的封装而已,具体使用那种都可以按自己的需要</li>
<li>原<code>AddDbContext</code>需要添加配置<code>UseSharding&lt;MyDbContext&gt;()</code></li>
</ol>
</div>
<div><pre><code><span>class</span> <span>Program</span>
<span>{</span>
    <span>static</span> <span><span>void</span></span> <span>Main</span><span>(</span><span><span>string</span><span>[</span><span>]</span></span> args<span>)</span>
    <span>{</span>
        <span>IServiceCollection</span> services <span>=</span> <span>new</span> <span>ServiceCollection</span><span>(</span><span>)</span><span>;</span>
        services<span>.</span><span>AddLogging</span><span>(</span><span>)</span><span>;</span>
        <span>//原来的dbcontext配置</span>
        services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>o <span>=></span>
            o<span>.</span><span>UseSqlServer</span><span>(</span><span>"Data Source=localhost;Initial Catalog=EFCoreShardingDB;Integrated Security=True;"</span><span>)</span>
                <span>.</span><span><span>UseSharding</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>//需要添加</span>
            <span>)</span><span>;</span>
        <span>//额外添加分片配置</span>
        services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
            <span>{</span>
                builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>Begin</span><span>(</span>o <span>=></span>
            <span>{</span>
                o<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                o<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
            <span>{</span>
                builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>AddDefaultDataSource</span><span>(</span>Guid<span>.</span><span>NewGuid</span><span>(</span><span>)</span><span>.</span><span>ToString</span><span>(</span><span>"n"</span><span>)</span><span>,</span>
                <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDB;Integrated Security=True;"</span><span>)</span>
            <span>.</span><span>AddShardingTableRoute</span><span>(</span>op <span>=></span>
            <span>{</span>
                op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>End</span><span>(</span><span>)</span><span>;</span>

        <span><span>var</span></span> buildServiceProvider <span>=</span> services<span>.</span><span>BuildServiceProvider</span><span>(</span><span>)</span><span>;</span>
        <span>//启动必备</span>
        buildServiceProvider<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>using</span> <span>(</span><span><span>var</span></span> scope <span>=</span> buildServiceProvider<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> myDbContext <span>=</span> scope<span>.</span>ServiceProvider<span>.</span><span><span>GetService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>//如果不存在就创建数据库和对应的数据库表</span>
            <span>//myDbContext.Database.EnsureCreated();//注释掉不然会创建虚拟表，虚拟表其实没什么用</span>

            <span><span>var</span></span> now <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>1</span><span>,</span><span>1</span><span>)</span><span>;</span>
            <span><span>var</span></span> orders <span>=</span> Enumerable<span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span>10</span><span>)</span><span>.</span><span>Select</span><span>(</span><span>(</span>o<span>,</span>i<span>)</span><span>=></span><span>new</span> <span>Order</span><span>(</span><span>)</span>
            <span>{</span>
                Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                CreateTime <span>=</span> now<span>.</span><span>AddDays</span><span>(</span>i<span>)</span><span>,</span>
                Payer <span>=</span> <span><span>$"用户:</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                Money <span>=</span> i<span>*</span><span>100</span><span>,</span>
                IsDelete <span>=</span> <span>false</span>
            <span>}</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
            myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br></div></div><p>启动项目后我们可以看到程序会自动创建数据库和表结构，并且会按照我们设定的规则进行取模插入,并且逻辑表名<code>Order</code>将不会存在于数据库</p>
<div><p>警告</p>
<p>！！！如果您使用第二种配置,那么请对<code>services.AddDbContext&lt;MyDbContext&gt;()</code>配置内部使用的数据库连接字符串和后续的<code>AddDefaultDataSource</code>中添加的字符串一致不然会导致无法使用事务。</p>
<p>！！！如果您使用第二种配置,那么请对<code>services.AddDbContext&lt;MyDbContext&gt;()</code>配置内部使用的数据库连接字符串和后续的<code>AddDefaultDataSource</code>中添加的字符串一致不然会导致无法使用事务。</p>
<p>！！！如果您使用第二种配置,那么请对<code>services.AddDbContext&lt;MyDbContext&gt;()</code>配置内部使用的数据库连接字符串和后续的<code>AddDefaultDataSource</code>中添加的字符串一致不然会导致无法使用事务。</p>
</div>
<div><p>提示</p>
<ol>
<li>如果程序无法启动请确保一下几点，确认是否已经注入原生的efcore的DbContext,并且在原生的后续对DbContextOptions进行了<code>UseSharding&lt;MyDbContext&gt;()</code>配置</li>
<li>是否配置了额外分片<code>AddShardingConfigure</code>(第一种配置可以忽略)，是否创建了通过字符串委托和链接委托</li>
<li>default data source 的连接字符串是否和默认dbcontext创建的一致</li>
<li>是否添加了分表路由<code>AddShardingTableRoute(op =&gt;{op.AddShardingTableRoute&lt;OrderVirtualTableRoute&gt;();})</code></li>
<li>是否启动了分表启动器<code>buildServiceProvider.GetRequiredService&lt;IShardingBootstrapper&gt;().Start();</code></li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Important</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/important/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/important/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Important</source>
      <category>Important</category>
      <pubDate>Tue, 16 Nov 2021 06:14:19 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="version"> Version</h2>
<p><code>ShardingCore</code> version is a.b.c.d</p>
<ul>
<li>a:<code>EFCore</code> version</li>
<li>b:<code>ShardingCore</code> version</li>
<li>c:<code>ShardingCore</code> second version</li>
<li>d:<code>ShardingCore</code> fix version</li>
</ul>
<h2 id="common-problem"> Common Problem</h2>
<p>current dbcontext is virtual dbcontext not real execute dbcontext，real dbcontext is in DbContextExecutor</p>
<h2 id="dbcontext-constructor-problem"> DbContext Constructor Problem</h2>
<p>dont use ant method that will created model before.</p>
<div><pre><code>        public DefaultShardingDbContext(DbContextOptions&lt;DefaultShardingDbContext&gt; options) : base(options)
        {
            //dont invoke
            //ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking;
            //Database.SetCommandTimeout(30000);
        }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="performance-loss"> Performance loss</h2>
<p>query no sharding entity,<code>ShardingCore</code> slow than <code>EFCore</code> 0.005ms single query;</p>
<h2 id="disadvantage"> Disadvantage</h2>
<ul>
<li>use more conection in single query，but u can limit with start up options:<code>MaxQueryConnectionsLimit</code></li>
<li>sharding entity not support include,if u want join two entities u can use join.</li>
<li>sharding entity dont set nav properties like icollection or list</li>
</ul>
<h2 id="gethashcode"> GetHashCode</h2>
<p>c# <code>GetHashCode</code></p>
<p>When we do not modify the object, we call hashcode many times to return the same integer. In the same application, if we execute it many times, the integer returned by each execution may be inconsistent
suggestion use <code>sharding-core</code> provider method <code>ShardingCoreHelper.GetStringHashCode(shardingKeyStr)</code></p>
<h2 id="group-by"> Group By</h2>
<p>if use <code>group by</code> queryable will append order by while order by item is empty,if has order by item shoule use full select properties</p>
<h2 id="guid"> GUID</h2>
<p>c# guid compare is difference with sqlserver uniqueidentifier，<code>sharding-core</code> is fix this bug,use SqlGuid to compare,but not fix <code>Nullable&lt;Guid&gt;</code> if u want fix it. example:</p>
<div><pre><code><span>/// &lt;summary></span>
<span>/// like this example</span>
<span>/// &lt;/summary></span>
<span>/// &lt;typeparam name="TShardingDbContext">&lt;/typeparam></span>
<span>public</span> <span>class</span> <span>SqlServerNullableGuidCSharpLanguageShardingComparer<span>&lt;</span>TShardingDbContext<span>></span></span><span>:</span><span><span>CSharpLanguageShardingComparer<span>&lt;</span>TShardingDbContext<span>></span></span></span> <span>where</span> <span>TShardingDbContext</span> <span>:</span> <span><span>DbContext</span><span>,</span> <span>IShardingDbContext</span></span>
<span>{</span>
        <span>public</span> <span>override</span> <span><span>int</span></span> <span>Compare</span><span>(</span><span>IComparable</span> x<span>,</span> <span>IComparable</span> y<span>,</span> <span><span>bool</span></span> asc<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>x <span>is</span> <span>XXType</span> xg <span>&amp;&amp;</span> y <span>is</span> <span>XXType</span> yg<span>)</span>
            <span>{</span>
                <span>return</span> <span>new</span> <span>XXFixedType</span><span>(</span>xg<span>)</span><span>.</span><span>SafeCompareToWith</span><span>(</span><span>new</span> <span>XXFixedType</span><span>(</span>yg<span>)</span><span>,</span> asc<span>)</span><span>;</span>
            <span>}</span>
            <span>return</span> <span>base</span><span>.</span><span>Compare</span><span>(</span>x<span>,</span> y<span>,</span> asc<span>)</span><span>;</span>
        <span>}</span>
<span>}</span>

<span>//configure</span>
<span>.</span><span>ReplaceShardingComparer</span><span>(</span>sp<span>=></span><span>new</span> <span>SqlServerNullableGuidCSharpLanguageShardingComparer<span>&lt;</span>DefaultShardingDbContext<span>></span></span><span>(</span><span>)</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p><strong>注意:fix c# compare guid</strong></p>
<h2 id="auto-increment-field"> auto increment field</h2>
<p>do not configure auto increment field in <code>sharding-core</code> sharding field。e.g:increment id</p>
<h2 id="ensurecreated"> EnsureCreated</h2>
<p><code>DbContext.Database.EnsureCreated()</code> if u want use this method ,plz impl <code>IMigrationsSqlGenerator</code></p>
<h2 id="sharding-with-time"> sharding with time</h2>
<p>if u use sharding with time field,plz read<a href="/sharding-core-doc/en/adv/pagination">pagination</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>项目主页</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/home/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/home/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">项目主页</source>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<br/>
<p align="center">
<div>
<p><a href="https://www.nuget.org/packages/ShardingCore" target="_blank"><img src="https://img.shields.io/nuget/v/ShardingCore.svg?style=flat-square" alt="nuget"></a>
<a href="https://www.nuget.org/stats/packages/ShardingCore?groupby=Version" target="_blank"><img src="https://img.shields.io/nuget/dt/ShardingCore.svg?style=flat-square" alt="nuget"></a>
<a href="https://github.com/xuejmnet/sharding-core/blob/main/LICENSE" target="_blank"><img src="https://img.shields.io/badge/license-Apache 2-blue" alt="license"></a></p>
</div>
</p>
<h2 id="🔔交流qq群"> 🔔交流QQ群</h2>
<div>
<img src="https://cdn.jsdelivr.net/gh/xugaoyi/image_store@master/blog/QQ20210730-002949@2x.57m20hgqvog0.png" alt="群号: 771630778" style="width:200px;">
<h4 id="shardingcore官方qq群-771630778"> ShardingCore官方QQ群: 771630778</h4>
</div>
<br/>
<h2 id="许可证"> 许可证</h2>
<p><a href="https://github.com/xuejmnet/sharding-core/blob/main/LICENSE" target="_blank" rel="noopener noreferrer">Apache-2.0 License</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>自定义布局</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/layout/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/layout/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">自定义布局</source>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<p>您可以使用带有 Markdown 支持的插槽来自定义页面布局。</p>
<div><p>注意</p>
<p>此处仅仅是一个演示，你应该自行根据需求添加样式。</p>


</div>
<template #page-top><p>页面顶部内容</p>
</template><template #page-bottom><p>页面底部内容</p>
</template><template #content-top><p>内容顶部内容</p>
</template><template #content-bottom><p>内容底部内容</p>
</template><template #navbar-start><p>导航栏起始内容</p>
</template><template #navbar-center><p>导航栏中部内容</p>
</template><template #navbar-end><p>导航栏末尾内容</p>
</template><template #sidebar-top><p>侧边栏顶部内容</p>
</template><template #sidebar-center><p>侧边栏中部内容</p>
</template><template #sidebar-bottom><p>侧边栏底部内容</p>
</template><p>更多详情，详见 <a href="https://vuepress-theme-hope.github.io/zh/guide/layout/custom/" target="_blank" rel="noopener noreferrer">自定义布局</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>分组查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/group-by-query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/group-by-query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">分组查询</source>
      <category>查询</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="支持group"> 支持group</h2>
<div><pre><code>    <span><span>var</span></span> ids <span>=</span> <span>new</span><span>[</span><span>]</span> <span>{</span><span>"200"</span><span>,</span> <span>"300"</span><span>}</span><span>;</span>
            <span><span>var</span></span> dateOfMonths <span>=</span> <span>new</span><span>[</span><span>]</span> <span>{</span><span>202111</span><span>,</span> <span>202110</span><span>}</span><span>;</span>
            <span><span>var</span></span> <span>group</span> <span>=</span> <span>await</span> <span>(</span><span>from</span> u <span>in</span> _virtualDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUserSalary<span>></span></span></span><span>(</span><span>)</span>
                    <span>.</span><span>Where</span><span>(</span>o <span>=></span> ids<span>.</span><span>Contains</span><span>(</span>o<span>.</span>UserId<span>)</span> <span>&amp;&amp;</span> dateOfMonths<span>.</span><span>Contains</span><span>(</span>o<span>.</span>DateOfMonth<span>)</span><span>)</span>
                <span>group</span> u <span>by</span> <span>new</span>
                <span>{</span>
                    UId <span>=</span> u<span>.</span>UserId
                <span>}</span>
                <span>into</span> g
                <span>select</span> <span>new</span>
                <span>{</span>
                    GroupUserId <span>=</span> g<span>.</span>Key<span>.</span>UId<span>,</span>
                    Count <span>=</span> g<span>.</span><span>Count</span><span>(</span><span>)</span><span>,</span>
                    TotalSalary <span>=</span> g<span>.</span><span>Sum</span><span>(</span>o <span>=></span> o<span>.</span>Salary<span>)</span><span>,</span>
                    AvgSalary <span>=</span> g<span>.</span><span>Average</span><span>(</span>o <span>=></span> o<span>.</span>Salary<span>)</span><span>,</span>
                    AvgSalaryDecimal <span>=</span> g<span>.</span><span>Average</span><span>(</span>o <span>=></span> o<span>.</span>SalaryDecimal<span>)</span><span>,</span>
                    MinSalary <span>=</span> g<span>.</span><span>Min</span><span>(</span>o <span>=></span> o<span>.</span>Salary<span>)</span><span>,</span>
                    MaxSalary <span>=</span> g<span>.</span><span>Max</span><span>(</span>o <span>=></span> o<span>.</span>Salary<span>)</span>
                <span>}</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><table>
<thead>
<tr>
<th>聚合函数</th>
<th>是否支持</th>
</tr>
</thead>
<tbody>
<tr>
<td>Count</td>
<td>支持</td>
</tr>
<tr>
<td>Sum</td>
<td>支持</td>
</tr>
<tr>
<td>Max</td>
<td>支持</td>
</tr>
<tr>
<td>Min</td>
<td>支持</td>
</tr>
<tr>
<td>Average</td>
<td>支持</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>FirstOrDefault</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/first-or-default/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/first-or-default/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">FirstOrDefault</source>
      <category>查询</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
    </item>
    <item>
      <title>事务中查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/query-in-transaction/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/query-in-transaction/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">事务中查询</source>
      <category>查询</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="事务中查询block"> 事务中查询block</h2>
<p>当我们开启事务的时候如果涉及到跨表查询,那么sharding-core的做法是这样的</p>
<ol>
<li>因为同一个connection不能有多个结果集并行获取(除非sqlserver开始MARS)(MultipleActive Result Set),所以sharding-core默认所有数据库都不支持MARS,这个前提下那么涉及跨表操作就需要开始多个链接来进行并行查询+内存串行聚合。所以如果开启了事务不是同一个链接session的前提下，另一个链接是无法读取到事务内的数据结果，如果出现全表扫描的情况下可能会出现死锁,所以在事务内部建议使用with(nolock)，具体做法</li>
</ol>
<div><pre><code></code></pre>
<div></div></div><p><strong>注意</strong>最好的做法是尽可能的短事务,不要再事务开启后,数据增删改后未提交事务的情况下进行跨表查询，所以只要保证尽可能短的事务就可以了</p>
]]></content:encoded>
    </item>
    <item>
      <title>组合查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/multi-entity-query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/multi-entity-query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">组合查询</source>
      <category>查询</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="组合查询"> 组合查询</h2>
<p>默认不推荐<code>include</code>，分表对象+分表、分表对象+分表对象都是在本框架内被支持的，支持的形式为join, 默认推荐join组合而不是include</p>
]]></content:encoded>
    </item>
    <item>
      <title>单对象查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/single-entity-query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/query/single-entity-query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">单对象查询</source>
      <category>查询</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="单表查询"> 单表查询</h2>
<p>和efcore原生查询没有任何区别,支持未分表下的所有操作</p>
]]></content:encoded>
    </item>
    <item>
      <title>常见的问题</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/question/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/question/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">常见的问题</source>
      <category>常见的问题</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
    </item>
    <item>
      <title>删除</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-all/delete/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-all/delete/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">删除</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingAll" target="_blank" rel="noopener noreferrer">SqlServerShardingAll</a></p>
<h2 id="删除数据"> 删除数据</h2>
<p>增删改查除了查询稍微在分表+排序的情况下需要注意其实其他操作和efcore基本上一致</p>
<p>删除也是</p>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Delete</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"9"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            _myDbContext<span>.</span><span>Remove</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>控制台我们可以看到对应的执行sql</p>
<div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      DELETE FROM <span>[</span>SysUser_00<span>]</span>
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p0<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Project Home</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Project Home</source>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<br/>
<p align="center">
<div>
<p><a href="https://www.nuget.org/packages/ShardingCore" target="_blank"><img src="https://img.shields.io/nuget/v/ShardingCore.svg?style=flat-square" alt="nuget"></a>
<a href="https://www.nuget.org/stats/packages/ShardingCore?groupby=Version" target="_blank"><img src="https://img.shields.io/nuget/dt/ShardingCore.svg?style=flat-square" alt="nuget"></a>
<a href="https://github.com/xuejmnet/sharding-core/blob/main/LICENSE" target="_blank"><img src="https://img.shields.io/badge/license-Apache 2-blue" alt="license"></a></p>
</div>
</p>
<h2 id="🔔communication-qq-group"> 🔔Communication QQ Group</h2>
<div>
<img src="/sharding-core-doc/join-qq-group.jpg" alt="group number: 771630778" style="width:200px;">
<h4 id="shardingcore-qq-group-771630778"> ShardingCore QQ Group: 771630778</h4>
</div>
<br/>
<h2 id="license"> License</h2>
<p><a href="https://github.com/xuejmnet/sharding-core/blob/main/LICENSE" target="_blank" rel="noopener noreferrer">Apache-2.0 License</a></p>
<h2 id="document-theme"> Document Theme</h2>
<p><a href="https://vuepress-theme-hope.github.io/" target="_blank" rel="noopener noreferrer">vuepress-theme-hope</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-all/query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-all/query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">查询</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingAll" target="_blank" rel="noopener noreferrer">SqlServerShardingAll</a></p>
<h2 id="单对象简单查询"> 单对象简单查询</h2>
<p>对<code>SysUser</code>和<code>Order</code>进行查询</p>
<div><pre><code><span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Query</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span><span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> sysUserA1 <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span><span>"1"</span><span>&amp;&amp;</span>o<span>.</span>Area<span>==</span><span>"A"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>3</span><span>,</span><span>5</span><span>)</span><span>;</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span> dateTime<span>)</span><span>.</span><span>OrderBy</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> orderIdOne <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"3"</span><span>)</span><span>;</span>


            <span><span>var</span></span> sysUsers <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id<span>==</span><span>"6"</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>

            <span>return</span> <span>Ok</span><span>(</span><span>new</span> <span><span>object</span><span>[</span><span>]</span></span>
            <span>{</span>
                sysUser<span>,</span>
                order<span>,</span>
                orderIdOne<span>,</span>
                sysUsers
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"C"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"63"</span><span>,</span><span>"payer"</span><span>:</span><span>"63"</span><span>,</span><span>"money"</span><span>:</span><span>1292</span><span>,</span><span>"area"</span><span>:</span><span>"C"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-05T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"3"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>2975</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-01-04T03:03:03"</span><span>}</span><span>,</span><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"C"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>}</span><span>]</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>、
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>    
      <span>..</span><span>..</span><span>..</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><p>因为查询脚本是在太多了部分没用到索引所以会全库+全表，这边就用第一个查询来进行分析,具体你可以通过demo例子进行处理,首先我们先确定下我们是按<code>Area</code>区域进行分库的，所以在没有这个字段的时候可以明确知道程序会查询3个数据库,会打开三个链接，虽然是三个链接但是每个链接因为分表关键字Id可以索引所以只会查询每个库的自身的表，</p>
<p>第二个查询结果可以很明显看到有了分库索引后只选择其中一个库而不是所有的库,并且因为加了分表索引，所以只会有一个表而不是所有的表</p>
<h2 id="join"> join</h2>
<h3 id="分库join分库"> 分库join分库</h3>
<ol>
<li>无索引</li>
</ol>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin</span><span>(</span><span>)</span>
        <span>{</span>
           <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
           <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>5</span><span>,</span> <span>9</span><span>)</span><span>;</span>
           <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span>
               <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span>begin<span>&amp;&amp;</span>o<span>.</span>CreationTime<span>&lt;=</span>end<span>)</span>
                   <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
               <span>select</span> <span>new</span>
               <span>{</span>
                   user<span>.</span>Id<span>,</span>
                   user<span>.</span>Name<span>,</span>
                   user<span>.</span>Area<span>,</span>
                   OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                   order<span>.</span>Payer<span>,</span>
                   order<span>.</span>CreationTime
               <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"C"</span><span>,</span><span>"orderId"</span><span>:</span><span>"101"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-12T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderId"</span><span>:</span><span>"106"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-17T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>17ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>24ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>21ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>22ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>16ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>17ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>17ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>61ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>64ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br><span>125</span><br><span>126</span><br><span>127</span><br><span>128</span><br><span>129</span><br><span>130</span><br><span>131</span><br><span>132</span><br><span>133</span><br><span>134</span><br><span>135</span><br><span>136</span><br><span>137</span><br><span>138</span><br><span>139</span><br><span>140</span><br><span>141</span><br><span>142</span><br><span>143</span><br><span>144</span><br><span>145</span><br><span>146</span><br><span>147</span><br><span>148</span><br><span>149</span><br><span>150</span><br><span>151</span><br><span>152</span><br><span>153</span><br><span>154</span><br><span>155</span><br><span>156</span><br><span>157</span><br><span>158</span><br><span>159</span><br><span>160</span><br><span>161</span><br><span>162</span><br><span>163</span><br><span>164</span><br><span>165</span><br><span>166</span><br><span>167</span><br><span>168</span><br><span>169</span><br><span>170</span><br><span>171</span><br><span>172</span><br><span>173</span><br><span>174</span><br><span>175</span><br><span>176</span><br><span>177</span><br><span>178</span><br><span>179</span><br><span>180</span><br></div></div><p>一共开了18个链接,无法索引数据库3个,月份3,4,5月3张表,userid 1或者 6两张表一共是3<em>3</em>2=18个链接,因为是并行的而且使用完成后马上释放所以性能还是很高的</p>
<ol start="2">
<li>有索引<code>Area</code>就是索引</li>
</ol>
<div><pre><code>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin2</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
            <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>4</span><span>,</span> <span>3</span><span>)</span><span>;</span>
            <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> <span>(</span>o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span><span>&amp;&amp;</span>o<span>.</span>Area<span>==</span><span>"A"</span><span>)</span>
                <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>CreationTime <span>>=</span> begin <span>&amp;&amp;</span> o<span>.</span>CreationTime <span>&lt;=</span> end<span>)</span>
                    <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
                <span>select</span> <span>new</span>
                <span>{</span>
                    user<span>.</span>Id<span>,</span>
                    user<span>.</span>Name<span>,</span>
                    user<span>.</span>Area<span>,</span>
                    OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                    order<span>.</span>Payer<span>,</span>
                    order<span>.</span>CreationTime
                <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderId"</span><span>:</span><span>"106"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-17T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>51ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>18ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>16ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>52ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>52ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br></div></div><p>因为附带了索引，所以本次查询只需要月份3张表+userid两张表+A区域的一个库所以是3<em>2</em>1=6个链接</p>
<div><p>注意</p>
<ol>
<li>如果本次查询涉及<code>跨表</code>或者<code>跨库</code>并且查询附带<code>order by</code>那么order by的字段必须包含在返回结果里面.(聚合函数除外：count,any,sum......)</li>
<li>应该尽可能避免分库join分库,如果实在需要join那么也应该尽可能指定某一张表或者分表的数目尽可能小。(因为分表后如果a1,a2 join b1,b2那么就会有2个结果相互组合,路由结果越多性能越低，会生成各自datasourcename的交集,并且对各自的库下的表join会生成笛卡尔积)</li>
</ol>
</div>
<h3 id="查询接口支持"> 查询接口支持</h3>
<table>
<thead>
<tr>
<th>方法</th>
<th>Method</th>
<th><a href="https://github.com/xuejmnet/sharding-core/blob/main/test/ShardingCore.Test50/ShardingTest.cs" target="_blank" rel="noopener noreferrer">Unit Test</a></th>
</tr>
</thead>
<tbody>
<tr>
<td>第一条</td>
<td>FindAsync</td>
<td>yes</td>
</tr>
<tr>
<td>获取集合</td>
<td>ToListAsync</td>
<td>yes</td>
</tr>
<tr>
<td>第一条</td>
<td>FirstOrDefaultAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最大</td>
<td>MaxAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最小</td>
<td>MinAsync</td>
<td>yes</td>
</tr>
<tr>
<td>是否存在</td>
<td>AnyAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>CountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>LongCountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>求和</td>
<td>SumAsync</td>
<td>yes</td>
</tr>
<tr>
<td>平均</td>
<td>AverageAsync</td>
<td>yes</td>
</tr>
<tr>
<td>包含</td>
<td>ContainsAsync</td>
<td>yes</td>
</tr>
<tr>
<td>分组</td>
<td>GroupByAsync</td>
<td>yes</td>
</tr>
</tbody>
</table>
<div><p>注意</p>
<p>并不是说因为你的字段值是ABC所以我们需要将数据源定义成A、B、C,这边是因为方便通用,一般原则上我们定义为ds0,ds1,ds2，至于<code>Area</code>如何转成<code>ds0</code>,<code>ds1</code>,<code>ds2</code>那么就需要你自己去实现，比如你有一个[A..Z]的数组，数组下标就是对应的<code>ds</code>后面数字那么你就可以自己实现路由，并且还可以支持大于小于等于</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>修改</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-all/update/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-all/update/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">修改</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingAll" target="_blank" rel="noopener noreferrer">SqlServerShardingAll</a></p>
<h2 id="自动追踪修改"> 自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            <span><span>var</span></span> i<span>=</span><span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>13ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser_01<span>]</span> SET <span>[</span>Name<span>]</span> <span>=</span> @p0
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p1<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="非自动追踪修改"> 非自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update1</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>AsNoTracking</span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            _myDbContext<span>.</span><span>Update</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p2<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser_01<span>]</span> SET <span>[</span>Area<span>]</span> <span>=</span> @p0, <span>[</span>Name<span>]</span> <span>=</span> @p1
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p2<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><p>结论</p>
<p>追踪情况下sharding-core依然可以对结果进行修改，修改的字段是被修改过后的字段</p>
<p>非追踪情况下sharding-croe也支持查询修改，但是修改的字段是全字段</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>读写分离</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/read-write/configure/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/read-write/configure/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">读写分离</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
    </item>
    <item>
      <title>初始化</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-all/init/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-all/init/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">初始化</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<div><p>分库分表介绍</p>
<ol>
<li><code>sharding-core</code>支持自定义分库,流式聚合,支持同表join,数据源并非分表的笛卡尔积而是交集,比如我分库的对象和不分库的对象join结果只会查询不分库对象对应的数据源</li>
<li>分库下的分布式事务(支持业务逻辑导致的事务出错可以回滚),网络情况下的事务出错直接忽略除非是第一个提交的事务,第二个数据源提交的事务开始就直接忽略异常。</li>
</ol>
</div>
<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingAll" target="_blank" rel="noopener noreferrer">SqlServerShardingAll</a></p>
<h2 id="分表使用"> 分表使用</h2>
<p>先拟定一个场景目前有用户表<code>SysUser</code>和订单表<code>Order</code>，用户我们按用户区域进行分库按用户Id取模分表,订单我们按用户区域分库按订单时间分表</p>
<p>首先创建一个空的aspnetcore web api。</p>
<h3 id="安装shardingcore"> 安装ShardingCore</h3>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># 请对应数据库版本</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="创建对象"> 创建对象</h3>
<div><pre><code>    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>SysUser</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><h3 id="创建dbcontext"> 创建DbContext</h3>
<p>这样我们就创建好了三张表，接下来我们创建我们的<code>DbContext</code>,因为不需要分表所以我们并不需要继承<code>IShardingTableDbContext</code>接口</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>SysUser<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br></div></div><div><p>自定义标题</p>
<ol>
<li>构造函数必须是<code>DbContextOptions&lt;MyDbContext&gt;</code>或者<code>DbContextOptions</code></li>
<li><code>OnModelCreating</code>并不是说分表必须要这样，而是你原先efcore怎么使用就怎么使用，efcore配置对象有两种一种是<code>DbSet</code>+<code>Attribute</code>,另外一种是<code>OnModelCreating</code>+<code>ModelBuilder</code>,你可以选择你原先在用的任何一种</li>
<li><code>AbstractShardingDbContext</code>这个对象是可以不继承的，但是如果要使用分表分库你必须实现<code>IShardingTableDbContext</code>这个接口,因为这个接口实现起来都是一样的所以默认你只需要继承<code>AbstractShardingDbContext</code>就可以了</li>
<li><code>IShardingTableDbContext</code>这个接口在你需要支持分表的情况下需要加，如果您只是分库那么就不需要添加这个接口</li>
</ol>
</div>
<h3 id="创建虚拟路由"> 创建虚拟路由</h3>
<ol>
<li>订单表按用户区域分库,因为分库系统并没有给我提供默认的分库路由,所以需要我们自行实现,我们先假设我们的数据源为A,B,C三个数据源,
再按订单时间分表</li>
<li>用户按区域分库,在按用户Id取模</li>
</ol>
<div><pre><code>    <span>//订单分库路由</span>
    <span>public</span> <span>class</span> <span>OrderVirtualDataSourceRoute</span> <span>:</span> <span><span>AbstractShardingOperatorVirtualDataSourceRoute<span>&lt;</span>Order<span>,</span> <span>string</span><span>></span></span></span>
    <span>{</span>
        <span>private</span> <span>readonly</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> _dataSources <span>=</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
        <span>{</span>
            <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
        <span>}</span><span>;</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
        <span>}</span>
        <span>//我们设置区域就是数据库</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToDataSourceName</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> <span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllDataSourceNames</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> _dataSources<span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AddDataSourceName</span><span>(</span><span><span>string</span></span> dataSourceName<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>_dataSources<span>.</span><span>Any</span><span>(</span>o <span>=></span> o <span>==</span> dataSourceName<span>)</span><span>)</span>
                <span>return</span> <span>false</span><span>;</span>
            _dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>

            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToDataSourceName</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                    <span>{</span>
                        <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                    <span>}</span>
            <span>}</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataDataSourceBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>//订单分表路由</span>
    <span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>CreationTime<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>//用户区域分库</span>
    <span>public</span> <span>class</span> <span>SysUserVirtualDataSourceRoute</span> <span>:</span> <span><span>AbstractShardingOperatorVirtualDataSourceRoute<span>&lt;</span>SysUser<span>,</span> <span>string</span><span>></span></span></span>
    <span>{</span>
        <span>private</span> <span>readonly</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> _dataSources <span>=</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
        <span>{</span>
            <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
        <span>}</span><span>;</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
        <span>}</span>
        <span>//我们设置区域就是数据库</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToDataSourceName</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> <span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllDataSourceNames</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> _dataSources<span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AddDataSourceName</span><span>(</span><span><span>string</span></span> dataSourceName<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>_dataSources<span>.</span><span>Any</span><span>(</span>o <span>=></span> o <span>==</span> dataSourceName<span>)</span><span>)</span>
                <span>return</span> <span>false</span><span>;</span>
            _dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>

            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToDataSourceName</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataDataSourceBuilder<span>&lt;</span>SysUser<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>//用户Id取模</span>
    
    <span>public</span> <span>class</span> <span>SysUserVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>SysUser<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>SysUserVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
        <span>{</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>SysUser<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br></div></div><div><p>注意</p>
<p>因为分库提供默认路由所以需要用户自行实现<code>AbstractShardingOperatorVirtualDataSourceRoute</code>抽象,分表有默认抽象路由但是如果无法满足需求可以自定义实现<code>AbstractShardingOperatorVirtualTableRoute</code>抽象</p>
</div>
<h3 id="startup配置"> Startup配置</h3>
<p><code>ConfigureServices(IServiceCollection services)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            services<span>.</span><span>AddControllers</span><span>(</span><span>)</span><span>;</span>
            
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>Begin</span><span>(</span>op <span>=></span>
                <span>{</span>
                    <span>//如果您使用code-first建议选择false</span>
                    op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    <span>//如果您使用code-first建议修改为fsle</span>
                    op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"A"</span><span>,</span>
                    <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBA;Integrated Security=True;"</span><span>)</span>
                <span>.</span><span>AddShardingDataSource</span><span>(</span>sp <span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"B"</span><span>,</span><span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBB;Integrated Security=True;"</span>
                        <span>}</span><span>,</span>
                        <span>{</span>
                            <span>"C"</span><span>,</span><span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBC;Integrated Security=True;"</span>
                        <span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddShardingDataSourceRoute</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span><span><span>AddShardingDatabaseRoute</span><span><span>&lt;</span>SysUserVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingDatabaseRoute</span><span><span>&lt;</span>OrderVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddShardingTableRoute</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>End</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br></div></div><div><p>重要</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
</div>
<p>新建一个扩展方法用来初始化ShardingCore和初始化种子数据</p>
<div><pre><code>   
    <span>public</span> <span>static</span> <span>class</span> <span>StartupExtension</span>
    <span>{</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>UseShardingCore</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>InitSeed</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            <span>using</span> <span>(</span><span><span>var</span></span> serviceScope <span>=</span> app<span>.</span>ApplicationServices<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span><span>var</span></span> myDbContext <span>=</span> serviceScope<span>.</span>ServiceProvider<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>if</span> <span>(</span><span>!</span>myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Any</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    <span><span>string</span><span>[</span><span>]</span></span> areas <span>=</span> <span>new</span> <span><span>string</span><span>[</span><span>]</span></span> <span>{</span><span>"A"</span><span>,</span><span>"B"</span><span>,</span><span>"C"</span> <span>}</span><span>;</span>
                    <span>List<span>&lt;</span>SysUser<span>></span></span> users <span>=</span> <span>new</span> <span>List<span>&lt;</span>SysUser<span>></span></span><span>(</span><span>10</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>100</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>
                        <span><span>var</span></span> uer<span>=</span><span>new</span> <span>SysUser</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Name <span>=</span> <span><span>$"MyName</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                            Area <span>=</span> areas<span>[</span><span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>0</span><span>,</span><span>3</span><span>)</span><span>]</span>
                        <span>}</span><span>;</span>
                        users<span>.</span><span>Add</span><span>(</span>uer<span>)</span><span>;</span>
                    <span>}</span>
                    <span>List<span>&lt;</span>Order<span>></span></span> orders <span>=</span> <span>new</span> <span>List<span>&lt;</span>Order<span>></span></span><span>(</span><span>300</span><span>)</span><span>;</span>
                    <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>300</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>
                        <span><span>var</span></span> sysUser <span>=</span> users<span>[</span>i <span>%</span> <span>100</span><span>]</span><span>;</span>
                        <span><span>var</span></span> order <span>=</span> <span>new</span> <span>Order</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Payer <span>=</span> sysUser<span>.</span>Id<span>,</span>
                            Money <span>=</span> <span>100</span><span>+</span><span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>100</span><span>,</span><span>3000</span><span>)</span><span>,</span>
                            OrderStatus <span>=</span> <span>(</span>OrderStatusEnum<span>)</span><span>(</span>i <span>%</span> <span>4</span> <span>+</span> <span>1</span><span>)</span><span>,</span>
                            Area <span>=</span> sysUser<span>.</span>Area<span>,</span>
                            CreationTime <span>=</span> begin<span>.</span><span>AddDays</span><span>(</span>i<span>)</span>
                        <span>}</span><span>;</span>
                        orders<span>.</span><span>Add</span><span>(</span>order<span>)</span><span>;</span>
                    <span>}</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>users<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div><p><code>Configure(IApplicationBuilder app, IWebHostEnvironment env)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>//初始化ShardingCore</span>
            app<span>.</span><span>UseShardingCore</span><span>(</span><span>)</span><span>;</span>
            app<span>.</span><span>UseRouting</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseAuthorization</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseEndpoints</span><span>(</span>endpoints <span>=></span>
            <span>{</span>
                endpoints<span>.</span><span>MapControllers</span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            <span>//初始化种子数据</span>
            app<span>.</span><span>InitSeed</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h3 id="efcore日志-可选"> efcore日志(可选)</h3>
<p>这边为了方便我们观察efcore的执行sql语句我们这边建议对efcore添加日志
<code>Startup</code>添加静态数据</p>
<div><pre><code>        <span>public</span> <span>static</span> <span>readonly</span> <span>ILoggerFactory</span> efLogger <span>=</span> LoggerFactory<span>.</span><span>Create</span><span>(</span>builder <span>=></span>
        <span>{</span>
            builder<span>.</span><span>AddFilter</span><span>(</span><span>(</span>category<span>,</span> level<span>)</span> <span>=></span> category <span>==</span> DbLoggerCategory<span>.</span>Database<span>.</span>Command<span>.</span>Name <span>&amp;&amp;</span> level <span>==</span> LogLevel<span>.</span>Information<span>)</span><span>.</span><span>AddConsole</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>在所有<code>builder.UseSqlServer(conStr);</code></p>
<p>都改成<code>builder.UseSqlServer(conStr).UseLoggerFactory(efLogger);</code></p>
<p>启动后我们将可以看到数据库和表会被自动创建，并且会将种子数据进行插入到内部供我们可以查询测试</p>
<img src="/sharding-core-doc/sharding-data-source-table.png">]]></content:encoded>
    </item>
    <item>
      <title>删除</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-data-source/delete/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-data-source/delete/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">删除</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingDataSource" target="_blank" rel="noopener noreferrer">SqlServerShardingDataSource</a></p>
<h2 id="删除数据"> 删除数据</h2>
<p>增删改查除了查询稍微在分表+排序的情况下需要注意其实其他操作和efcore基本上一致</p>
<p>删除也是</p>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Delete</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"9"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            _myDbContext<span>.</span><span>Remove</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>控制台我们可以看到对应的执行sql</p>
<div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      DELETE FROM <span>[</span>SysUser<span>]</span>
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p0<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>初始化</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-data-source/init/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-data-source/init/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">初始化</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<div><p>分库介绍</p>
<ol>
<li><code>sharding-core</code>支持自定义分库,流式聚合,支持同表join,数据源并非分表的笛卡尔积而是交集,比如我分库的对象和不分库的对象join结果只会查询不分库对象对应的数据源</li>
<li>分库下的分布式事务(支持业务逻辑导致的事务出错可以回滚),网络情况下的事务出错直接忽略除非是第一个提交的事务,第二个数据源提交的事务开始就直接忽略异常。</li>
</ol>
</div>
<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingDataSource" target="_blank" rel="noopener noreferrer">EFCoreShardingDataSource</a></p>
<h2 id="分表使用"> 分表使用</h2>
<p>先拟定一个场景目前有用户表<code>SysUser</code>和订单表<code>Order</code>，用户我们按用户区域进行分库，订单我们按用户区域分库</p>
<p>首先创建一个空的aspnetcore web api。</p>
<h3 id="安装shardingcore"> 安装ShardingCore</h3>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># 请对应数据库版本</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="创建对象"> 创建对象</h3>
<div><pre><code>    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>SysUser</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><h3 id="创建dbcontext"> 创建DbContext</h3>
<p>这样我们就创建好了三张表，接下来我们创建我们的<code>DbContext</code>,因为不需要分表所以我们并不需要继承<code>IShardingTableDbContext</code>接口</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>SysUser<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>

    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div><div><p>自定义标题</p>
<ol>
<li>构造函数必须是<code>DbContextOptions&lt;MyDbContext&gt;</code>或者<code>DbContextOptions</code></li>
<li><code>OnModelCreating</code>并不是说分表必须要这样，而是你原先efcore怎么使用就怎么使用，efcore配置对象有两种一种是<code>DbSet</code>+<code>Attribute</code>,另外一种是<code>OnModelCreating</code>+<code>ModelBuilder</code>,你可以选择你原先在用的任何一种</li>
<li><code>AbstractShardingDbContext</code>这个对象是可以不继承的，但是如果要使用分表分库你必须实现<code>IShardingTableDbContext</code>这个接口,因为这个接口实现起来都是一样的所以默认你只需要继承<code>AbstractShardingDbContext</code>就可以了</li>
</ol>
</div>
<h3 id="创建虚拟路由"> 创建虚拟路由</h3>
<ol>
<li>订单表按用户区域分库,因为分库系统并没有给我提供默认的分库路由,所以需要我们自行实现,我们先假设我们的数据源为A,B,C三个数据源</li>
</ol>
<div><pre><code>
    
    <span>public</span> <span>class</span> <span>OrderVirtualDataSourceRoute</span><span>:</span><span><span>AbstractShardingOperatorVirtualDataSourceRoute<span>&lt;</span>Order<span>,</span><span>string</span><span>></span></span></span>
    <span>{</span>
        <span>private</span> <span>readonly</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> _dataSources<span>=</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
        <span>{</span>
            <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
        <span>}</span><span>;</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
        <span>}</span>
        <span>//我们设置区域就是数据库</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToDataSourceName</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> <span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllDataSourceNames</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> _dataSources<span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AddDataSourceName</span><span>(</span><span><span>string</span></span> dataSourceName<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>_dataSources<span>.</span><span>Any</span><span>(</span>o <span>=></span> o <span>==</span> dataSourceName<span>)</span><span>)</span>
                <span>return</span> <span>false</span><span>;</span>
             _dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
             <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>

            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToDataSourceName</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>SysUserVirtualDataSourceRoute</span> <span>:</span> <span><span>AbstractShardingOperatorVirtualDataSourceRoute<span>&lt;</span>SysUser<span>,</span> <span>string</span><span>></span></span></span>
    <span>{</span>
        <span>private</span> <span>readonly</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> _dataSources <span>=</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
        <span>{</span>
            <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
        <span>}</span><span>;</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
        <span>}</span>
        <span>//我们设置区域就是数据库</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToDataSourceName</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> <span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllDataSourceNames</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> _dataSources<span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AddDataSourceName</span><span>(</span><span><span>string</span></span> dataSourceName<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>_dataSources<span>.</span><span>Any</span><span>(</span>o <span>=></span> o <span>==</span> dataSourceName<span>)</span><span>)</span>
                <span>return</span> <span>false</span><span>;</span>
            _dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>

            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToDataSourceName</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br></div></div><div><p>注意</p>
<p>因为分库提供默认路由所以需要用户自行实现<code>AbstractShardingOperatorVirtualDataSourceRoute</code>抽象</p>
</div>
<h3 id="startup配置"> Startup配置</h3>
<p><code>ConfigureServices(IServiceCollection services)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            services<span>.</span><span>AddControllers</span><span>(</span><span>)</span><span>;</span>
            
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>Begin</span><span>(</span>op <span>=></span>
                <span>{</span>
                    <span>//如果您使用code-first建议选择false</span>
                    op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    <span>//如果您使用code-first建议修改为fsle</span>
                    op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"A"</span><span>,</span>
                    <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBA;Integrated Security=True;"</span><span>)</span>
                <span>.</span><span>AddShardingDataSource</span><span>(</span>sp<span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"B"</span><span>,</span>
                            <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBB;Integrated Security=True;"</span>
                        <span>}</span><span>,</span>
                        <span>{</span>
                            <span>"C"</span><span>,</span>
                            <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBC;Integrated Security=True;"</span>
                        <span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddShardingDataSourceRoute</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span><span><span>AddShardingDatabaseRoute</span><span><span>&lt;</span>SysUserVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingDatabaseRoute</span><span><span>&lt;</span>OrderVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>End</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br></div></div><div><p>重要</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
</div>
<p>新建一个扩展方法用来初始化ShardingCore和初始化种子数据</p>
<div><pre><code>   
    <span>public</span> <span>static</span> <span>class</span> <span>StartupExtension</span>
    <span>{</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>UseShardingCore</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>InitSeed</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            <span>using</span> <span>(</span><span><span>var</span></span> serviceScope <span>=</span> app<span>.</span>ApplicationServices<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span><span>var</span></span> myDbContext <span>=</span> serviceScope<span>.</span>ServiceProvider<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>if</span> <span>(</span><span>!</span>myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Any</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    <span><span>string</span><span>[</span><span>]</span></span> areas <span>=</span> <span>new</span> <span><span>string</span><span>[</span><span>]</span></span> <span>{</span><span>"A"</span><span>,</span><span>"B"</span><span>,</span><span>"C"</span> <span>}</span><span>;</span>
                    <span>List<span>&lt;</span>SysUser<span>></span></span> users <span>=</span> <span>new</span> <span>List<span>&lt;</span>SysUser<span>></span></span><span>(</span><span>10</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>10</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>
                        <span><span>var</span></span> uer<span>=</span><span>new</span> <span>SysUser</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Name <span>=</span> <span><span>$"MyName</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                            Area <span>=</span> areas<span>[</span>i <span>%</span> <span>3</span><span>]</span>
                        <span>}</span><span>;</span>
                        users<span>.</span><span>Add</span><span>(</span>uer<span>)</span><span>;</span>
                    <span>}</span>
                    <span>List<span>&lt;</span>Order<span>></span></span> orders <span>=</span> <span>new</span> <span>List<span>&lt;</span>Order<span>></span></span><span>(</span><span>300</span><span>)</span><span>;</span>
                    <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>300</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>

                        <span><span>var</span></span> order <span>=</span> <span>new</span> <span>Order</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Payer <span>=</span> <span><span>$"</span><span><span>{</span><span>i <span>%</span> <span>10</span></span><span>}</span></span><span>"</span></span><span>,</span>
                            Money <span>=</span> <span>100</span><span>+</span><span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>100</span><span>,</span><span>3000</span><span>)</span><span>,</span>
                            OrderStatus <span>=</span> <span>(</span>OrderStatusEnum<span>)</span><span>(</span>i <span>%</span> <span>4</span> <span>+</span> <span>1</span><span>)</span><span>,</span>
                            Area <span>=</span> areas<span>[</span>i <span>%</span> <span>3</span><span>]</span><span>,</span>
                            CreationTime <span>=</span> begin<span>.</span><span>AddDays</span><span>(</span>i<span>)</span>
                        <span>}</span><span>;</span>
                        orders<span>.</span><span>Add</span><span>(</span>order<span>)</span><span>;</span>
                    <span>}</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>users<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div><p><code>Configure(IApplicationBuilder app, IWebHostEnvironment env)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>//初始化ShardingCore</span>
            app<span>.</span><span>UseShardingCore</span><span>(</span><span>)</span><span>;</span>
            app<span>.</span><span>UseRouting</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseAuthorization</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseEndpoints</span><span>(</span>endpoints <span>=></span>
            <span>{</span>
                endpoints<span>.</span><span>MapControllers</span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            <span>//初始化种子数据</span>
            app<span>.</span><span>InitSeed</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h3 id="efcore日志-可选"> efcore日志(可选)</h3>
<p>这边为了方便我们观察efcore的执行sql语句我们这边建议对efcore添加日志
<code>Startup</code>添加静态数据</p>
<div><pre><code>        <span>public</span> <span>static</span> <span>readonly</span> <span>ILoggerFactory</span> efLogger <span>=</span> LoggerFactory<span>.</span><span>Create</span><span>(</span>builder <span>=></span>
        <span>{</span>
            builder<span>.</span><span>AddFilter</span><span>(</span><span>(</span>category<span>,</span> level<span>)</span> <span>=></span> category <span>==</span> DbLoggerCategory<span>.</span>Database<span>.</span>Command<span>.</span>Name <span>&amp;&amp;</span> level <span>==</span> LogLevel<span>.</span>Information<span>)</span><span>.</span><span>AddConsole</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>在所有<code>builder.UseSqlServer(conStr);</code></p>
<p>都改成<code>builder.UseSqlServer(conStr).UseLoggerFactory(efLogger);</code></p>
<p>启动后我们将可以看到数据库和表会被自动创建，并且会将种子数据进行插入到内部供我们可以查询测试</p>
<img src="/sharding-core-doc/sharding-data-source.png">]]></content:encoded>
    </item>
    <item>
      <title>修改</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-data-source/update/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-data-source/update/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">修改</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingDataSource" target="_blank" rel="noopener noreferrer">SqlServerShardingDataSource</a></p>
<h2 id="自动追踪修改"> 自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            <span><span>var</span></span> i<span>=</span><span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>13ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser<span>]</span> SET <span>[</span>Name<span>]</span> <span>=</span> @p0
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p1<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="非自动追踪修改"> 非自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update1</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>AsNoTracking</span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            _myDbContext<span>.</span><span>Update</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p2<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser<span>]</span> SET <span>[</span>Area<span>]</span> <span>=</span> @p0, <span>[</span>Name<span>]</span> <span>=</span> @p1
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p2<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><p>结论</p>
<p>追踪情况下sharding-core依然可以对结果进行修改，修改的字段是被修改过后的字段</p>
<p>非追踪情况下sharding-croe也支持查询修改，但是修改的字段是全字段</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-data-source/query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-data-source/query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">查询</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingDataSource" target="_blank" rel="noopener noreferrer">EFCoreShardingDataSource</a></p>
<h2 id="单对象简单查询"> 单对象简单查询</h2>
<p>对<code>SysUser</code>和<code>Order</code>进行查询</p>
<div><pre><code><span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Query</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span><span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>3</span><span>,</span><span>5</span><span>)</span><span>;</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span> dateTime<span>)</span><span>.</span><span>OrderBy</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> orderIdOne <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"3"</span><span>)</span><span>;</span>


            <span><span>var</span></span> sysUsers <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id<span>==</span><span>"6"</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>

            <span>return</span> <span>Ok</span><span>(</span><span>new</span> <span><span>object</span><span>[</span><span>]</span></span>
            <span>{</span>
                sysUser<span>,</span>
                order<span>,</span>
                orderIdOne<span>,</span>
                sysUsers
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"63"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>1271</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-05T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"3"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>2484</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-01-04T03:03:03"</span><span>}</span><span>,</span><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>}</span><span>]</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>8ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>3ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br></div></div><h2 id="join"> join</h2>
<h3 id="分库join分库"> 分库join分库</h3>
<ol>
<li>无索引</li>
</ol>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin</span><span>(</span><span>)</span>
        <span>{</span>
           <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
           <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>4</span><span>,</span> <span>3</span><span>)</span><span>;</span>
           <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span>
               <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span>begin<span>&amp;&amp;</span>o<span>.</span>CreationTime<span>&lt;=</span>end<span>)</span>
                   <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
               <span>select</span> <span>new</span>
               <span>{</span>
                   user<span>.</span>Id<span>,</span>
                   user<span>.</span>Name<span>,</span>
                   user<span>.</span>Area<span>,</span>
                   OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                   order<span>.</span>Payer<span>,</span>
                   order<span>.</span>CreationTime
               <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"61"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-03T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"71"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-13T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"81"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-23T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"91"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-02T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"66"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-08T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"76"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-18T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"86"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-28T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>3ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>3ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div><ol start="2">
<li>有索引<code>Area</code>就是索引</li>
</ol>
<div><pre><code>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin2</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
            <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>4</span><span>,</span> <span>3</span><span>)</span><span>;</span>
            <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> <span>(</span>o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span><span>&amp;&amp;</span>o<span>.</span>Area<span>==</span><span>"A"</span><span>)</span>
                <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>CreationTime <span>>=</span> begin <span>&amp;&amp;</span> o<span>.</span>CreationTime <span>&lt;=</span> end<span>)</span>
                    <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
                <span>select</span> <span>new</span>
                <span>{</span>
                    user<span>.</span>Id<span>,</span>
                    user<span>.</span>Name<span>,</span>
                    user<span>.</span>Area<span>,</span>
                    OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                    order<span>.</span>Payer<span>,</span>
                    order<span>.</span>CreationTime
                <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderId"</span><span>:</span><span>"66"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-08T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>17ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><div><p>注意</p>
<ol>
<li>如果本次查询涉及<code>跨表</code>或者<code>跨库</code>并且查询附带<code>order by</code>那么order by的字段必须包含在返回结果里面.(聚合函数除外：count,any,sum......)</li>
<li>应该尽可能避免分库join分库,如果实在需要join那么也应该尽可能指定某一张表或者分表的数目尽可能小。(因为分表后如果a1,a2 join b1,b2那么就会有2个结果相互组合,路由结果越多性能越低，会生成各自datasourcename的交集(并不是和分表一样的笛卡尔积))</li>
</ol>
</div>
<h3 id="查询接口支持"> 查询接口支持</h3>
<table>
<thead>
<tr>
<th>方法</th>
<th>Method</th>
<th><a href="https://github.com/xuejmnet/sharding-core/blob/main/test/ShardingCore.Test50/ShardingTest.cs" target="_blank" rel="noopener noreferrer">Unit Test</a></th>
</tr>
</thead>
<tbody>
<tr>
<td>第一条</td>
<td>FindAsync</td>
<td>yes</td>
</tr>
<tr>
<td>获取集合</td>
<td>ToListAsync</td>
<td>yes</td>
</tr>
<tr>
<td>第一条</td>
<td>FirstOrDefaultAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最大</td>
<td>MaxAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最小</td>
<td>MinAsync</td>
<td>yes</td>
</tr>
<tr>
<td>是否存在</td>
<td>AnyAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>CountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>LongCountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>求和</td>
<td>SumAsync</td>
<td>yes</td>
</tr>
<tr>
<td>平均</td>
<td>AverageAsync</td>
<td>yes</td>
</tr>
<tr>
<td>包含</td>
<td>ContainsAsync</td>
<td>yes</td>
</tr>
<tr>
<td>分组</td>
<td>GroupByAsync</td>
<td>yes</td>
</tr>
</tbody>
</table>
<div><p>注意</p>
<p>并不是说因为你的字段值是ABC所以我们需要将数据源定义成A、B、C,这边是因为方便通用,一般原则上我们定义为ds0,ds1,ds2，至于<code>Area</code>如何转成<code>ds0</code>,<code>ds1</code>,<code>ds2</code>那么就需要你自己去实现，比如你有一个[A..Z]的数组，数组下标就是对应的<code>ds</code>后面数字那么你就可以自己实现路由，并且还可以支持大于小于等于</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>默认路由</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-route/default-route/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-route/default-route/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">默认路由</source>
      <category>路由</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="默认路由"> 默认路由</h2>
<p>分库提供了默认的路由分表则需要自己去实现,具体实现可以参考分库</p>
<table>
<thead>
<tr>
<th>抽象abstract</th>
<th>路由规则</th>
<th>tail</th>
<th>索引</th>
</tr>
</thead>
<tbody>
<tr>
<td>AbstractSimpleShardingModKeyIntVirtualTableRoute</td>
<td>取模</td>
<td>0,1,2...</td>
<td><code>=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingModKeyStringVirtualTableRoute</td>
<td>取模</td>
<td>0,1,2...</td>
<td><code>=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute</td>
<td>按时间</td>
<td>yyyyMMdd</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingDayKeyLongVirtualTableRoute</td>
<td>按时间戳</td>
<td>yyyyMMdd</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingWeekKeyDateTimeVirtualTableRoute</td>
<td>按时间</td>
<td>yyyyMMdd_dd</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingWeekKeyLongVirtualTableRoute</td>
<td>按时间戳</td>
<td>yyyyMMdd_dd</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute</td>
<td>按时间</td>
<td>yyyyMM</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingMonthKeyLongVirtualTableRoute</td>
<td>按时间戳</td>
<td>yyyyMM</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingYearKeyDateTimeVirtualTableRoute</td>
<td>按时间</td>
<td>yyyy</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingYearKeyLongVirtualTableRoute</td>
<td>按时间戳</td>
<td>yyyy</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
</tbody>
</table>
<p>注:<code>contains</code>表示为<code>o=&gt;ids.contains(o.shardingkey)</code>
注:使用默认的按时间分表的路由规则会让你重写一个GetBeginTime的方法这个方法必须使用静态值如:new DateTime(2021,1,1)不可以用动态值比如DateTime.Now因为每次重新启动都会调用该方法动态情况下会导致每次都不一致</p>
<h2 id="索引"> 索引</h2>
<p>所谓的索引就是支持的表达式比如支持分表字段等于某个值，那么框架就会针对这个值进行解析出对应的数据库分表应该是哪个,并且支持组合<code>and</code>、<code>or</code>。
默认提供的分表路由里面已经实现了所谓的路由，如果你的查询是包含对应的路由那么框架可以大大减小数据库链接的开启。有助于程序的高性能。</p>
<p>假设我们是按id取模，那么如果你有指定的id对应值进行查询，我们就可以直接进行对分表/分库下进行数据源和表的定位，保证查询的高效。</p>
<h3 id="abstractsimpleshardingmodkeyintvirtualtableroute"> AbstractSimpleShardingModKeyIntVirtualTableRoute</h3>
<p>该路由为简单的取模hash路由,分表字段是<code>int</code>类型,接受3个参数，第一个参数表示后缀的位数,第二位表示取模的基数，第三位是取模后缀不足的左补字符.</p>
<p>AbstractSimpleShardingModKeyStringVirtualTableRoute(3,6,'0')那么就是<code>000</code>、<code>001</code>、<code>002</code>、<code>003</code>、<code>004</code>、<code>005</code></p>
<h3 id="abstractsimpleshardingmodkeystringvirtualtableroute"> AbstractSimpleShardingModKeyStringVirtualTableRoute</h3>
<p>该路由为简单的取模hash路由,分表字段是<code>string</code>类型,接受3个参数，第一个参数表示后缀的位数,第二位表示取模的基数，第三位是取模后缀不足的左补字符.</p>
<p>AbstractSimpleShardingModKeyStringVirtualTableRoute(3,6,'0')那么就是<code>000</code>、<code>001</code>、<code>002</code>、<code>003</code>、<code>004</code>、<code>005</code></p>
<h3 id="abstractsimpleshardingdaykeydatetimevirtualtableroute"> AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute</h3>
<p>该路由为简单的按天分表路由,支持分表字段是<code>DateTime</code>,分表后的后缀为<code>yyyyMMdd</code>.</p>
<h3 id="abstractsimpleshardingdaykeylongvirtualtableroute"> AbstractSimpleShardingDayKeyLongVirtualTableRoute</h3>
<p>该路由为简单的按天分表路由,支持分表字段是<code>long</code>,分表后的后缀为<code>yyyyMMdd</code>.</p>
<div><pre><code>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//注意必须返回固定时间,不然每次启动时间都会变动</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//启动自动建表</span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>注意按天分表的路由自动建表的执行顺序为:</p>
<ol>
<li>每天的23:59:00分,&quot;0 59 23 * * ?&quot;</li>
<li>每天的00:00:00分,&quot;0 0 0 * * ?&quot;</li>
<li>每天的00:01:00分,&quot;0 1 0 * * ?&quot;</li>
</ol>
<p>分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨<code>IncrementMinutes</code>分钟来创建对应的表tail</p>
<h3 id="abstractsimpleshardingweekkeydatetimevirtualtableroute"> AbstractSimpleShardingWeekKeyDateTimeVirtualTableRoute</h3>
<p>该路由为简单的按周分表路由,支持分表字段是<code>DateTime</code>,分表后的后缀为<code>yyyyMMdd_dd</code>.</p>
<h3 id="abstractsimpleshardingweekkeylongvirtualtableroute"> AbstractSimpleShardingWeekKeyLongVirtualTableRoute</h3>
<p>该路由为简单的按周分表路由,支持分表字段是<code>long</code>,分表后的后缀为<code>yyyyMMdd_dd</code>.</p>
<div><pre><code>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//注意必须返回固定时间,不然每次启动时间都会变动</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//启动自动建表</span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>注意按周分表的路由自动建表的执行顺序为:</p>
<ol>
<li>每次周末的23:59:00分,&quot;0 59 23 ? * 1&quot;</li>
<li>每次周一的00:00:00分,&quot;0 0 0 ? * 2&quot;</li>
<li>每次周一的00:01:00分,&quot;0 1 0 ? * 2&quot;</li>
</ol>
<p>分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨<code>IncrementMinutes</code>分钟来创建对应的表tail</p>
<h3 id="abstractsimpleshardingmonthkeydatetimevirtualtableroute"> AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute</h3>
<p>该路由为简单的按月分表路由,支持分表字段是<code>DateTime</code>,分表后的后缀为<code>yyyyMM</code>.</p>
<h3 id="abstractsimpleshardingmonthkeylongvirtualtableroute"> AbstractSimpleShardingMonthKeyLongVirtualTableRoute</h3>
<p>该路由为简单的按月分表路由,支持分表字段是<code>long</code>,分表后的后缀为<code>yyyyMM</code>.</p>
<div><pre><code>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//注意必须返回固定时间,不然每次启动时间都会变动</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//启动自动建表</span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>注意按月分表的路由自动建表的执行顺序为:</p>
<ol>
<li>每月的28、29、30、31日的23:59:00分,&quot;0 59 23 28,29,30,31 * ?&quot;</li>
<li>每月的1日的00:00:00分,&quot;0 0 0 1 * ?&quot;</li>
<li>每月的1日的00:01:00分,&quot;0 1 0 1 * ?&quot;</li>
</ol>
<p>分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨<code>IncrementMinutes</code>分钟来创建对应的表tail</p>
<h3 id="abstractsimpleshardingyearkeydatetimevirtualtableroute"> AbstractSimpleShardingYearKeyDateTimeVirtualTableRoute</h3>
<p>该路由为简单的按年分表路由,支持分表字段是<code>DateTime</code>,分表后的后缀为<code>yyyy</code>.</p>
<h3 id="abstractsimpleshardingyearkeylongvirtualtableroute"> AbstractSimpleShardingYearKeyLongVirtualTableRoute</h3>
<p>该路由为简单的按年分表路由,支持分表字段是<code>long</code>,分表后的后缀为<code>yyyy</code>.</p>
<div><pre><code>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//注意必须返回固定时间,不然每次启动时间都会变动</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//启动自动建表</span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>注意按年分表的路由自动建表的执行顺序为:</p>
<ol>
<li>每年的31日的23:59:00分,&quot;0 59 23 31 12 ?&quot;</li>
<li>每年的1日的00:00:00分,&quot;0 0 0 1 1 ?&quot;</li>
<li>每年的1日的00:01:00分,&quot;0 1 0 1 1 ?&quot;</li>
</ol>
<p>分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨<code>IncrementMinutes</code>分钟来创建对应的表tail</p>
<p><strong>注意：所有的定时任务都可以设置为false,并且可以使用自身的定时任务来实现动态的创建表和添加表后缀</strong></p>
<h2 id="时间分表的定时信息"> 时间分表的定时信息</h2>
<p>为了保证可以让程序卡点发布还能正确创建对应的表信息和知道现有的表,所以存在三个节点进行创建表。
但是可能会出现重复创建表的信息，也会出现表没创建的其他原因导致程序执行失败，所以这边对其进行了日志的过滤用户可以再使用默认的时间分表的情况下选择重写<code>ShowErrorLog</code>属性来输出任务执行时候的建表异常信息。</p>
]]></content:encoded>
    </item>
    <item>
      <title>自定义路由</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-route/customer-route/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-route/customer-route/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">自定义路由</source>
      <category>路由</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="条件在右"> 条件在右</h2>
<p>首先我们需要明确一个点就是where后面的条件影响了你对整体路由的一个判断<code>column</code>为分表字段，<code>value</code>为条件</p>
<ol>
<li>
<p><code>column = value</code>，通过计算value可以清楚的知道我们应该查询哪张表</p>
</li>
<li>
<p><code>column &gt; value</code>,在按时间分表的情况通过比较表后缀可以得知表达式<code>&gt;</code>能够过滤的表</p>
</li>
<li>
<p><code>value &lt; column</code>,看着和2一样但是解析的时候确是天差地别,因为我们无法通过<code>&gt;</code>来判断,必须通过<code>&lt;</code>来判断</p>
</li>
<li>
<p><code>value.contains(column)</code>,需要解析成 <code>value[0] = column or value[1] = column or value[2] = column ......</code></p>
</li>
</ol>
<p>框架为了方便用户编写路由已经针对上述所有的情况进行了优化，所有的<code>column</code> 和 <code>value</code>的比较都会将<code>column</code>置于左边，将<code>value</code>置于右边，我们叫做<code>condition on right</code>，并且将所有的<code>contains</code>转换成<code>=</code>，用户可以专心编写路由</p>
<h2 id="abstractshardingoperatorvirtualtableroute"> AbstractShardingOperatorVirtualTableRoute</h2>
<p>所有分表的路由的基类,继承这个基类可以很轻松的实现自定义路由</p>
<h2 id="abstractshardingoperatorvirtualdatasourceroute"> AbstractShardingOperatorVirtualDataSourceRoute</h2>
<p>所有分库的路由的基类,继承这个基类可以很轻松的实现自定义路由</p>
<h2 id="一致性哈希路由"> 一致性哈希路由</h2>
<p>一致性哈希路由的简单实现版本又叫做大数取模分段，在取模的基础上实现了添加单张表后可以将数据迁移做到最小化。
就是在原先的哈希取模的上面进行再次分段来保证不会再增加一个基数的情况下需要大范围的迁移数据，直接上代码</p>
<div><pre><code>            <span><span>var</span></span> stringHashCode <span>=</span> ShardingCoreHelper<span>.</span><span>GetStringHashCode</span><span>(</span><span>"123"</span><span>)</span><span>;</span>
            <span><span>var</span></span> hashCode <span>=</span> stringHashCode <span>%</span> <span>10000</span><span>;</span>
            <span>if</span> <span>(</span>hashCode <span>>=</span> <span>0</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>3000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"A"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>3001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>6000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"B"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>6001</span> <span>&amp;&amp;</span> hashCode <span>&lt;</span> <span>10000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"C"</span><span>;</span>
            <span>}</span>
            <span>else</span>
                <span>throw</span> <span>new</span> <span>InvalidOperationException</span><span>(</span><span><span>$"cant calc hash route hash code:[</span><span><span>{</span><span>stringHashCode</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><p>这应该是一个最最最简单的是个人都能看得懂的路由了，将hashcode进行取模10000，得到0-9999，将其分成[0-3000],[3001-6000],[6001-9999]三段的概率大概是3、3、4相对很平均，那么还是遇到了上面我们所说的一个问题，如果我们现在需要加一个基数呢，首先修改路由</p>
<div><pre><code>            <span><span>var</span></span> stringHashCode <span>=</span> ShardingCoreHelper<span>.</span><span>GetStringHashCode</span><span>(</span><span>"123"</span><span>)</span><span>;</span>
            <span><span>var</span></span> hashCode <span>=</span> stringHashCode <span>%</span> <span>10000</span><span>;</span>
            <span>if</span> <span>(</span>hashCode <span>>=</span> <span>0</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>3000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"A"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>3001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>6000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"B"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>6001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>8000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"D"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>8001</span> <span>&amp;&amp;</span> hashCode <span>&lt;</span> <span>10000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"C"</span><span>;</span>
            <span>}</span>
            <span>else</span>
                <span>throw</span> <span>new</span> <span>InvalidOperationException</span><span>(</span><span><span>$"cant calc hash route hash code:[</span><span><span>{</span><span>stringHashCode</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><p>我们这边增加了一个基数针对[6001-9999]分段进行了数据切分，并且将[8001-9999]区间内的表后缀没变，实际上我们仅仅只需要修改五分之一的数据那么就可以完美的做到数据迁移，并且均匀分布数据,后续如果需要再次增加一台只需要针对'A'或者'B'进行2分那么就可以逐步增加基数来缓解压力，且数据迁移的数量随着基数的增加响应的需要迁移的数据百分比逐步的减少，最坏的情况是增加一倍的基数需要迁移50%的数据，相比较之前的最好情况迁移50%的数据来说十分划算，而且路由规则简单易写是个人就能写出来。</p>
<h2 id="编写一致性哈希路由"> 编写一致性哈希路由</h2>
<p>那么我们如何在sharding-core里面编写这个路由规则呢</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>OrderHashRangeVirtualTableRoute</span><span>:</span><span><span>AbstractShardingOperatorVirtualTableRoute<span>&lt;</span>Order<span>,</span><span>string</span><span>></span></span></span>
    <span>{</span>
        <span>//如何将sharding key的value转换成对应的值</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>.</span><span>ToString</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>//如何将sharding key的value转换成对应的表后缀</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToTail</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span><span>var</span></span> stringHashCode <span>=</span> ShardingCoreHelper<span>.</span><span>GetStringHashCode</span><span>(</span><span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> hashCode <span>=</span> stringHashCode <span>%</span> <span>10000</span><span>;</span>
            <span>if</span> <span>(</span>hashCode <span>>=</span> <span>0</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>3000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"A"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>3001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>6000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"B"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>6001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>10000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"C"</span><span>;</span>
            <span>}</span>
            <span>else</span>
                <span>throw</span> <span>new</span> <span>InvalidOperationException</span><span>(</span><span><span>$"cant calc hash route hash code:[</span><span><span>{</span><span>stringHashCode</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
        <span>}</span>

        <span>//返回目前已经有的所有Order表后缀</span>
        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllTails</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
            <span>{</span>
                <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
            <span>}</span><span>;</span>
        <span>}</span>

        <span>//如何过滤后缀(已经实现了condition on right)用户无需关心条件位置和如何解析条件逻辑判断，也不需要用户考虑and 还是or</span>
        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>
            <span>//因为hash路由仅支持等于所以仅仅只需要写等于的情况</span>
            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToTail</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br></div></div><p><strong>具体的原理如果不清楚可以参考博客<a href="https://www.cnblogs.com/xuejiaming/p/15383899.html" target="_blank" rel="noopener noreferrer">如何自定义路由</a></strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>初始化</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-table/init/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-table/init/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">初始化</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<div><p>分表介绍</p>
<ol>
<li><code>sharding-core</code>支持自定义分表,流式聚合,多表join</li>
<li>虽然框架已经将分表封装的用户毫无感知了,但是也是需要使用者有部分分表的概念的了解</li>
<li>我们吧表A分成A1,A2,A3这三张表,如果你在数据库里还是看到了表A那么就说明程序是不正确的,表A在分表后其实不应该存在了(大部分情况下)</li>
<li><code>IShardingTableDbContext</code>这个接口在你需要支持分表的情况下需要加，如果您只是分库那么就不需要添加这个接口</li>
</ol>
</div>
<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingTable" target="_blank" rel="noopener noreferrer">EFCoreShardingTable</a></p>
<h2 id="分表使用"> 分表使用</h2>
<p>先拟定一个场景目前有用户表<code>SysUser</code>和订单表<code>Order</code>,再添加一个<code>Setting</code>配置表，用户我们按用户id进行取模分表，订单我们按时间月进行分表,配置表我们部分表
首先创建一个空的aspnetcore web api。</p>
<h3 id="安装shardingcore"> 安装ShardingCore</h3>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># 请对应数据库版本</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="创建对象"> 创建对象</h3>
<div><pre><code>    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>SysUser</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> SettingCode <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>Setting</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Code <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div><h3 id="创建dbcontext"> 创建DbContext</h3>
<p>这样我们就创建好了三张表，接下来我们创建我们的<code>DbContext</code></p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>SettingCode<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>SysUser<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Setting<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Code<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Code<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Setting<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br></div></div><div><p>自定义标题</p>
<ol>
<li>构造函数必须是<code>DbContextOptions&lt;MyDbContext&gt;</code>或者<code>DbContextOptions</code></li>
<li><code>OnModelCreating</code>并不是说分表必须要这样，而是你原先efcore怎么使用就怎么使用，efcore配置对象有两种一种是<code>DbSet</code>+<code>Attribute</code>,另外一种是<code>OnModelCreating</code>+<code>ModelBuilder</code>,你可以选择你原先在用的任何一种</li>
<li><code>AbstractShardingDbContext</code>这个对象是可以不继承的，但是如果要使用分表分库你必须实现<code>IShardingTableDbContext</code>这个接口,因为这个接口实现起来都是一样的所以默认你只需要继承<code>AbstractShardingDbContext</code>就可以了</li>
<li><code>IShardingTableDbContext</code>这个接口在你需要支持分表的情况下需要加，如果您只是分库那么就不需要添加这个接口</li>
</ol>
</div>
<h3 id="创建虚拟路由"> 创建虚拟路由</h3>
<ol>
<li>订单表按月分表,这边我们把订单从2021年1月份开始到现在具体</li>
</ol>
<div><pre><code>
    <span>//创建时间按月分表</span>
    <span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//注意一定要配置或者采用接口+标签也是可以的</span>
        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>CreationTime<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>//用户Id取模3分表</span>
    <span>public</span> <span>class</span> <span>SysUserVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>SysUser<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>SysUserVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
        <span>{</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>SysUser<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><h3 id="startup配置"> Startup配置</h3>
<p><code>ConfigureServices(IServiceCollection services)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            services<span>.</span><span>AddControllers</span><span>(</span><span>)</span><span>;</span>
            <span>//添加一下代码</span>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>Begin</span><span>(</span>op <span>=></span>
                <span>{</span>
                    <span>//如果您使用code-first建议选择false</span>
                    op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    <span>//如果您使用code-first建议修改为fsle</span>
                    op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span>
                    <span>"Data Source=localhost;Initial Catalog=EFCoreShardingTableDB;Integrated Security=True;"</span><span>)</span>
                <span>.</span><span>AddShardingTableRoute</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>End</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><div><p>重要</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
</div>
<p>新建一个扩展方法用来初始化ShardingCore和初始化种子数据</p>
<div><pre><code>    <span>public</span> <span>static</span> <span>class</span> <span>StartupExtension</span>
    <span>{</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>UseShardingCore</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>InitSeed</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            <span>using</span> <span>(</span><span><span>var</span></span> serviceScope <span>=</span> app<span>.</span>ApplicationServices<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span><span>var</span></span> myDbContext <span>=</span> serviceScope<span>.</span>ServiceProvider<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>if</span> <span>(</span><span>!</span>myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Setting<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Any</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    <span>List<span>&lt;</span>Setting<span>></span></span> settings <span>=</span> <span>new</span> <span>List<span>&lt;</span>Setting<span>></span></span><span>(</span><span>3</span><span>)</span><span>;</span>
                    settings<span>.</span><span>Add</span><span>(</span><span>new</span> <span>Setting</span><span>(</span><span>)</span>
                    <span>{</span>
                        Code <span>=</span> <span>"Admin"</span><span>,</span>
                        Name <span>=</span> <span>"AdminName"</span>
                    <span>}</span><span>)</span><span>;</span>
                    settings<span>.</span><span>Add</span><span>(</span><span>new</span> <span>Setting</span><span>(</span><span>)</span>
                    <span>{</span>
                        Code <span>=</span> <span>"User"</span><span>,</span>
                        Name <span>=</span> <span>"UserName"</span>
                    <span>}</span><span>)</span><span>;</span>
                    settings<span>.</span><span>Add</span><span>(</span><span>new</span> <span>Setting</span><span>(</span><span>)</span>
                    <span>{</span>
                        Code <span>=</span> <span>"SuperAdmin"</span><span>,</span>
                        Name <span>=</span> <span>"SuperAdminName"</span>
                    <span>}</span><span>)</span><span>;</span>

                    <span>List<span>&lt;</span>SysUser<span>></span></span> users <span>=</span> <span>new</span> <span>List<span>&lt;</span>SysUser<span>></span></span><span>(</span><span>10</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>10</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>
                        <span><span>var</span></span> uer<span>=</span><span>new</span> <span>SysUser</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Name <span>=</span> <span><span>$"MyName</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                            SettingCode <span>=</span> settings<span>[</span>i <span>%</span> <span>3</span><span>]</span><span>.</span>Code
                        <span>}</span><span>;</span>
                        users<span>.</span><span>Add</span><span>(</span>uer<span>)</span><span>;</span>
                    <span>}</span>
                    <span>List<span>&lt;</span>Order<span>></span></span> orders <span>=</span> <span>new</span> <span>List<span>&lt;</span>Order<span>></span></span><span>(</span><span>300</span><span>)</span><span>;</span>
                    <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>300</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>

                        <span><span>var</span></span> order <span>=</span> <span>new</span> <span>Order</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Payer <span>=</span> <span><span>$"</span><span><span>{</span><span>i <span>%</span> <span>10</span></span><span>}</span></span><span>"</span></span><span>,</span>
                            Money <span>=</span> <span>100</span><span>+</span><span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>100</span><span>,</span><span>3000</span><span>)</span><span>,</span>
                            OrderStatus <span>=</span> <span>(</span>OrderStatusEnum<span>)</span><span>(</span>i <span>%</span> <span>4</span> <span>+</span> <span>1</span><span>)</span><span>,</span>
                            CreationTime <span>=</span> begin<span>.</span><span>AddDays</span><span>(</span>i<span>)</span>
                        <span>}</span><span>;</span>
                        orders<span>.</span><span>Add</span><span>(</span>order<span>)</span><span>;</span>
                    <span>}</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>settings<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>users<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br></div></div><p><code>Configure(IApplicationBuilder app, IWebHostEnvironment env)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>//初始化ShardingCore</span>
            app<span>.</span><span>UseShardingCore</span><span>(</span><span>)</span><span>;</span>
            app<span>.</span><span>UseRouting</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseAuthorization</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseEndpoints</span><span>(</span>endpoints <span>=></span>
            <span>{</span>
                endpoints<span>.</span><span>MapControllers</span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            <span>//初始化种子数据</span>
            app<span>.</span><span>InitSeed</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h3 id="efcore日志-可选"> efcore日志(可选)</h3>
<p>这边为了方便我们观察efcore的执行sql语句我们这边建议对efcore添加日志</p>
<p><code>Startup</code>添加静态数据</p>
<div><pre><code>        <span>public</span> <span>static</span> <span>readonly</span> <span>ILoggerFactory</span> efLogger <span>=</span> LoggerFactory<span>.</span><span>Create</span><span>(</span>builder <span>=></span>
        <span>{</span>
            builder<span>.</span><span>AddFilter</span><span>(</span><span>(</span>category<span>,</span> level<span>)</span> <span>=></span> category <span>==</span> DbLoggerCategory<span>.</span>Database<span>.</span>Command<span>.</span>Name <span>&amp;&amp;</span> level <span>==</span> LogLevel<span>.</span>Information<span>)</span><span>.</span><span>AddConsole</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>在所有<code>builder.UseSqlServer(conStr);</code></p>
<p>都改成<code>builder.UseSqlServer(conStr).UseLoggerFactory(efLogger);</code></p>
<p>启动后我们将可以看到数据库和表会被自动创建，并且会将种子数据进行插入到内部供我们可以查询测试</p>
<img src="/sharding-core-doc/sharding-table.png">]]></content:encoded>
    </item>
    <item>
      <title>删除</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-table/delete/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-table/delete/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">删除</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingTable" target="_blank" rel="noopener noreferrer">EFCoreShardingTable</a></p>
<h2 id="删除数据"> 删除数据</h2>
<p>增删改查除了查询稍微在分表+排序的情况下需要注意其实其他操作和efcore基本上一致</p>
<p>删除也是</p>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Delete</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"9"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            _myDbContext<span>.</span><span>Remove</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>控制台我们可以看到对应的执行sql</p>
<div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      DELETE FROM <span>[</span>SysUser<span>]</span>
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p0<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>修改</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-table/update/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-table/update/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">修改</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingTable" target="_blank" rel="noopener noreferrer">EFCoreShardingTable</a></p>
<h2 id="自动追踪修改"> 自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            <span><span>var</span></span> i<span>=</span><span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>13ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser_01<span>]</span> SET <span>[</span>Name<span>]</span> <span>=</span> @p0
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p1<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="非自动追踪修改"> 非自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update1</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>AsNoTracking</span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            _myDbContext<span>.</span><span>Update</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p3<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p2<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser_01<span>]</span> SET <span>[</span>Area<span>]</span> <span>=</span> @p0, <span>[</span>Name<span>]</span> <span>=</span> @p1, <span>[</span>SettingCode<span>]</span> <span>=</span> @p2
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p3<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><p>结论</p>
<p>追踪情况下sharding-core依然可以对结果进行修改，修改的字段是被修改过后的字段</p>
<p>非追踪情况下sharding-croe也支持查询修改，但是修改的字段是全字段</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>手动路由</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-route/manual-route/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-route/manual-route/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">手动路由</source>
      <category>路由</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="背景"> 背景</h2>
<p>分表字段不一定在where条件里，但是需要进行自定表的查询,典型场景： 租户,很多时候租户Id分表,会存在于请求头或者请求体中,来确保后续的所有查询都需要走对应的分表，再比如多语言,可能我们会对语言进行分表,但是只会在请求时指定语言而不会将语言加入查询条件,甚至语言这个字段都不存在数据库中。</p>
<h2 id="如何实现"> 如何实现</h2>
<ol>
<li>对应后缀表启用<code>提示路由</code></li>
</ol>
<div><pre><code>
    <span>public</span> <span>class</span> <span>SysUserModVirtualTableRoute</span> <span>:</span> <span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>SysUserMod<span>></span></span></span>
    <span>{</span>
        <span>/// &lt;summary></span>
        <span>/// 开启提示路由</span>
        <span>/// &lt;/summary></span>
        <span>protected</span> <span>override</span> <span><span>bool</span></span> EnableHintRoute <span>=></span> <span>true</span><span>;</span>
        <span>/// &lt;summary></span>
        <span>/// 开启断言路由 如果不需要断言那么可以选择不开启提示路由[EnableHintRoute]必须开启</span>
        <span>/// &lt;/summary></span>
        <span>protected</span> <span>override</span> <span><span>bool</span></span> EnableAssertRoute <span>=></span> <span>true</span><span>;</span>

        <span>public</span> <span>SysUserModVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
        <span>{</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><ol>
<li>依赖注入<code>IShardingRouteManager</code>，并且开启<code>CreateScope</code>,<code>TryCreateOrAddMustTail&lt;SysUserMod&gt;(&quot;00&quot;,&quot;01&quot;)</code></li>
</ol>
<div><pre><code>
        <span>private</span> <span>readonly</span> <span>DefaultShardingDbContext</span> _defaultTableDbContext<span>;</span>
        <span>private</span> <span>readonly</span> <span>IShardingRouteManager</span> _shardingRouteManager<span>;</span>

        <span>public</span> <span>ValuesController</span><span>(</span><span>DefaultShardingDbContext</span> defaultTableDbContext<span>,</span> <span>IShardingRouteManager</span> shardingRouteManager<span>)</span>
        <span>{</span>
            _defaultTableDbContext <span>=</span> defaultTableDbContext<span>;</span>
            _shardingRouteManager <span>=</span> shardingRouteManager<span>;</span>
        <span>}</span>


            <span>using</span> <span>(</span>_shardingRouteManager<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                _shardingRouteManager<span>.</span>Current<span>.</span><span><span>TryCreateOrAddMustTail</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>"00"</span><span>,</span><span>"01"</span><span>)</span><span>;</span>
                <span>//_shardingRouteManager.Current.TryCreateOrAddHintTail&lt;SysUserMod>("00", "01");</span>
                <span>//_shardingRouteManager.Current.TryCreateOrAddAssertTail&lt;SysUserMod>();</span>

                <span><span>var</span></span> mod00s <span>=</span> <span>await</span> _defaultTableDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Skip</span><span>(</span><span>10</span><span>)</span><span>.</span><span>Take</span><span>(</span><span>11</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>所有在<code>CreateScope</code>内部的<code>SysUserMod</code>的查询都将只会走指定的表也就是[&quot;00&quot;,&quot;01&quot;],可以针对<code>Middleware</code>,<code>ActionFilter</code>处进行使用来达到租户的模式</p>
<h2 id="路由过滤器"> 路由过滤器</h2>
<p>假设我们对单次查询返回的路由不满意需要配置,比如如果单次查询大于10个结果那么我们只需要返回前5个,这个操作该如何实现呢，</p>
<ol>
<li>路由后置过滤器，通过路由的重写</li>
</ol>
<div><pre><code>
        <span>protected</span> <span>override</span> <span>List<span>&lt;</span>IPhysicTable<span>></span></span> <span>AfterPhysicTableFilter</span><span>(</span><span>List<span>&lt;</span>IPhysicTable<span>></span></span> allPhysicTables<span>,</span> <span>List<span>&lt;</span>IPhysicTable<span>></span></span> filterPhysicTables<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>filterPhysicTables<span>.</span>Count <span>>=</span> <span>10</span><span>)</span>
            <span>{</span>
                <span>//throw new Exception ....</span>
                <span>return</span> filterPhysicTables<span>.</span><span>Take</span><span>(</span><span>5</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>

            <span>return</span> filterPhysicTables<span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>通过这个后置过滤我们可以轻轻松松的完成对查询的控制,但是这个是全局的等于说写了那么所有的该对象的路由都要进行这种操作,所以下面就有了第二种方式<code>断言路由</code>
2. 断言路由,所谓的断言路由其实就是提示路由下的一种所以如果我们需要使用断言路由就要进行对<code>提示路由</code>的开启</p>
<div><pre><code>
        <span>/// &lt;summary></span>
        <span>/// 开启提示路由</span>
        <span>/// &lt;/summary></span>
        <span>protected</span> <span>override</span> <span><span>bool</span></span> EnableHintRoute <span>=></span> <span>true</span><span>;</span>
        <span>/// &lt;summary></span>
        <span>/// 开启断言路由 如果不需要断言那么可以选择不开启提示路由[EnableHintRoute]必须开启</span>
        <span>/// &lt;/summary></span>
        <span>protected</span> <span>override</span> <span><span>bool</span></span> EnableAssertRoute <span>=></span> <span>true</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>如何使用断言路由，首先我们需要创建一个对应的路由断言</p>
<div><pre><code>
        <span>public</span> <span>class</span> <span>TestRouteAssert</span><span>:</span><span><span>ITableRouteAssert<span>&lt;</span>SysUserMod<span>></span></span></span>
        <span>{</span>
            <span>public</span> <span><span>void</span></span> <span>Assert</span><span>(</span><span>List<span>&lt;</span>IPhysicTable<span>></span></span> allPhysicTables<span>,</span> <span>List<span>&lt;</span>IPhysicTable<span>></span></span> resultPhysicTables<span>)</span>
            <span>{</span>

                <span>if</span> <span>(</span>resultPhysicTables<span>.</span>Count <span>>=</span> <span>10</span><span>)</span>
                <span>{</span>
                    <span>//throw new Exception ....</span>
                    resultPhysicTables<span>=</span>resultPhysicTables<span>.</span><span>Take</span><span>(</span><span>5</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><div><pre><code>
            <span>using</span> <span>(</span>_shardingRouteManager<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                _shardingRouteManager<span>.</span>Current<span>.</span><span><span>TryCreateOrAddAssertTail</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>new</span> <span>TestRouteAssert</span><span>(</span><span>)</span><span>)</span><span>;</span>

                <span><span>var</span></span> mod00s <span>=</span> <span>await</span> _defaultTableDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Skip</span><span>(</span><span>10</span><span>)</span><span>.</span><span>Take</span><span>(</span><span>11</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>这样我们就做到了和全局路由过滤器一样的效果但是是可以自定义的。</p>
<h2 id="musttail"> MustTail</h2>
<p>强制路由,使用强制路由<code>_shardingRouteManager.Current.TryCreateOrAddMustTail&lt;SysUserMod&gt;(&quot;00&quot;,&quot;01&quot;);</code>将无视断言路由和路由过滤器。</p>
<h2 id="hinttail"> HintTail</h2>
<p>提示路由,使用方式和强制路由一样<code>_shardingRouteManager.Current.TryCreateOrAddHintTail&lt;SysUserMod&gt;(&quot;00&quot;, &quot;01&quot;);</code>区别就是强制走提示路由后还需要在进行断言路由的判断</p>
<h2 id="asserttail"> AssertTail</h2>
<p>断言路由用来进行断言判断和筛选查询过滤结果</p>
<div><p>路由的顺序</p>
<ol>
<li>开启提示路由?开启判断有强制直接走强制，没强制就判断是否有提示有提示就走提示，走完提示在判断是否开启断言，开启了就再走断言，如果都没有就走普通</li>
<li>开启了提示路由和断言路由，并且没有强制路由和提示路由，仅仅只有断言路由那么就是先走自动过滤筛选表，然后走全局过滤，最后走断言路由</li>
</ol>
</div>
<p><strong>注意具体的流程可以参考源码<a href="https://github.com/xuejmnet/sharding-core/blob/main/src/ShardingCore/Core/VirtualRoutes/TableRoutes/Abstractions/AbstractShardingFilterVirtualTableRoute.cs" target="_blank" rel="noopener noreferrer">AbstractShardingFilterVirtualTableRoute</a> 或者<a href="https://github.com/xuejmnet/sharding-core/blob/main/src/ShardingCore/Core/VirtualRoutes/DataSourceRoutes/Abstractions/AbstractShardingFilterVirtualDataSourceRoute.cs" target="_blank" rel="noopener noreferrer">AbstractShardingFilterVirtualDataSourceRoute</a></strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>幻灯片页</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/slides/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/slides/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">幻灯片页</source>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[
<i>Not supported content</i>]]></content:encoded>
      <enclosure url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/logo.svg" type="image/svg+xml"/>
    </item>
    <item>
      <title>单元测试覆盖率</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/unit-test-coverage/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/unit-test-coverage/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">单元测试覆盖率</source>
      <category>单元测试覆盖率</category>
      <pubDate>Tue, 30 Nov 2021 01:40:55 GMT</pubDate>
      <content:encoded><![CDATA[<img src="/sharding-core-doc/unit-test-coverage.png.png">]]></content:encoded>
    </item>
    <item>
      <title>自动追踪</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/auto-track/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/auto-track/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">自动追踪</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<p>自动追踪</p>
]]></content:encoded>
    </item>
    <item>
      <title>密码加密的文章</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/encrypt/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/encrypt/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">密码加密的文章</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="密码加密的文章"> 密码加密的文章</h1>
<p>实际的文章内容。</p>
<p>段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。</p>
<p>段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。</p>
]]></content:encoded>
    </item>
    <item>
      <title>查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-table/query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/en/sharding-table/query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">查询</source>
      <category>使用指南</category>
      <pubDate>Mon, 15 Nov 2021 09:37:06 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingTable" target="_blank" rel="noopener noreferrer">EFCoreShardingTable</a></p>
<h2 id="单对象简单查询"> 单对象简单查询</h2>
<p>对<code>SysUser</code>和<code>Order</code>进行查询</p>
<div><pre><code><span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Query</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span><span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>3</span><span>,</span><span>5</span><span>)</span><span>;</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span> dateTime<span>)</span><span>.</span><span>OrderBy</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> orderIdOne <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"3"</span><span>)</span><span>;</span>


            <span><span>var</span></span> sysUsers <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id<span>==</span><span>"6"</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>

            <span>return</span> <span>Ok</span><span>(</span><span>new</span> <span><span>object</span><span>[</span><span>]</span></span>
            <span>{</span>
                sysUser<span>,</span>
                order<span>,</span>
                orderIdOne<span>,</span>
                sysUsers
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"63"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>2407</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-05T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"3"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>974</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-01-04T03:03:03"</span><span>}</span><span>,</span><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>}</span><span>]</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>6ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202111<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>25ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>21ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>13ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202106<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>9ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202107<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>11ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202109<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>23ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202108<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>5ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>47ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202110<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202110<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202109<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202108<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202107<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202111<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202102<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202101<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202106<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br></div></div><h2 id="join"> join</h2>
<h3 id="分表join不分表"> 分表join不分表</h3>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin1</span><span>(</span><span>)</span>
        <span>{</span>
           <span><span>var</span></span> sql<span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span>
                <span>join</span> setting <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Setting<span>></span></span></span><span>(</span><span>)</span>
                    <span>on</span> user<span>.</span>SettingCode equals setting<span>.</span>Code
                <span>select</span> <span>new</span>
                <span>{</span>
                    user<span>.</span>Id<span>,</span>
                    user<span>.</span>Name<span>,</span>
                    user<span>.</span>Area<span>,</span>
                    user<span>.</span>SettingCode<span>,</span>
                    SettingName<span>=</span>setting<span>.</span>Name<span>,</span>
                <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>
              <span>await</span> sql<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"settingName"</span><span>:</span><span>"UserName"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"settingName"</span><span>:</span><span>"AdminName"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>s0<span>]</span>.<span>[</span>Name<span>]</span> AS <span>[</span>SettingName<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>[</span>Setting<span>]</span> AS <span>[</span>s0<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span> <span>=</span> <span>[</span>s0<span>]</span>.<span>[</span>Code<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>s0<span>]</span>.<span>[</span>Name<span>]</span> AS <span>[</span>SettingName<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>[</span>Setting<span>]</span> AS <span>[</span>s0<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span> <span>=</span> <span>[</span>s0<span>]</span>.<span>[</span>Code<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h3 id="分表join分表"> 分表join分表</h3>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin2</span><span>(</span><span>)</span>
        <span>{</span>
           <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
           <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>4</span><span>,</span> <span>3</span><span>)</span><span>;</span>
           <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span>
               <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span>begin<span>&amp;&amp;</span>o<span>.</span>CreationTime<span>&lt;=</span>end<span>)</span>
                   <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
               <span>select</span> <span>new</span>
               <span>{</span>
                   user<span>.</span>Id<span>,</span>
                   user<span>.</span>Name<span>,</span>
                   user<span>.</span>Area<span>,</span>
                   user<span>.</span>SettingCode<span>,</span>
                   OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                   order<span>.</span>Payer<span>,</span>
                   order<span>.</span>CreationTime
               <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"61"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-03T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"71"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-13T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"81"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-23T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"91"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-02T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"66"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-08T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"76"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-18T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"86"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-28T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>21ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>54ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>20ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br></div></div><div><p>注意</p>
<ol>
<li>如果本次查询涉及<code>跨表</code>或者<code>跨库</code>并且查询附带<code>order by</code>那么order by的字段必须包含在返回结果里面.(聚合函数除外：count,any,sum......)</li>
<li>应该尽可能避免分表join分表,如果实在需要join那么也应该尽可能指定某一张表或者分表的数目尽可能小。(因为分表后如果a1,a2 join b1,b2那么就会有4个结果相互组合,路由结果越多性能越低，会生成笛卡尔积)</li>
</ol>
</div>
<h3 id="查询接口支持"> 查询接口支持</h3>
<table>
<thead>
<tr>
<th>方法</th>
<th>Method</th>
<th><a href="https://github.com/xuejmnet/sharding-core/blob/main/test/ShardingCore.Test50/ShardingTest.cs" target="_blank" rel="noopener noreferrer">Unit Test</a></th>
</tr>
</thead>
<tbody>
<tr>
<td>第一条</td>
<td>FindAsync</td>
<td>yes</td>
</tr>
<tr>
<td>获取集合</td>
<td>ToListAsync</td>
<td>yes</td>
</tr>
<tr>
<td>第一条</td>
<td>FirstOrDefaultAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最大</td>
<td>MaxAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最小</td>
<td>MinAsync</td>
<td>yes</td>
</tr>
<tr>
<td>是否存在</td>
<td>AnyAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>CountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>LongCountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>求和</td>
<td>SumAsync</td>
<td>yes</td>
</tr>
<tr>
<td>平均</td>
<td>AverageAsync</td>
<td>yes</td>
</tr>
<tr>
<td>包含</td>
<td>ContainsAsync</td>
<td>yes</td>
</tr>
<tr>
<td>分组</td>
<td>GroupByAsync</td>
<td>yes</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>组件禁用</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/disable/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/disable/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">组件禁用</source>
      <description>&amp;lt;p&amp;gt;你可以通过设置页面的 Frontmatter，在页面禁用一些功能。&amp;lt;/p&amp;gt;
</description>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<p>你可以通过设置页面的 Frontmatter，在页面禁用一些功能。</p>

<p>本页面应当禁用了:</p>
<ul>
<li>导航栏</li>
<li>侧边栏</li>
<li>路径导航</li>
<li>页面信息</li>
<li>贡献者</li>
<li>编辑此页链接</li>
<li>更新时间</li>
<li>上一篇/下一篇 链接</li>
<li>评论</li>
<li>页脚</li>
<li>返回顶部按钮</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Markdown 增强</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/markdown/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/markdown/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Markdown 增强</source>
      <description>&amp;lt;p&amp;gt;&amp;lt;code&amp;gt;vuepress-theme-hope&amp;lt;/code&amp;gt; 通过内置 &amp;lt;a href=&amp;quot;https://vuepress-theme-hope.github.io/md-enhance&amp;quot; target=&amp;quot;_blank&amp;quot; rel=&amp;quot;noopener noreferrer&amp;quot;&amp;gt;md-enhance&amp;lt;/a&amp;gt;，在 Markdown 中启用了更多的语法与新功能。&amp;lt;/p&amp;gt;
</description>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<p><code>vuepress-theme-hope</code> 通过内置 <a href="https://vuepress-theme-hope.github.io/md-enhance" target="_blank" rel="noopener noreferrer">md-enhance</a>，在 Markdown 中启用了更多的语法与新功能。</p>

<h2 id="一键启用"> 一键启用</h2>
<p>你可以设置 <code>themeconfig.mdEnhance.enableAll</code> 启用 <a href="https://vuepress-theme-hope.github.io/md-enhance" target="_blank" rel="noopener noreferrer">md-enhance</a> 插件的所有功能。</p>
<div><div><br><br><div>&nbsp;</div><div>&nbsp;</div><div>&nbsp;</div><br><br><br></div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  themeConfig<span>:</span> <span>{</span>
    mdEnhance<span>:</span> <span>{</span>
      enableAll<span>:</span> <span>true</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="新增的更多语法"> 新增的更多语法</h2>
<h3 id="上下角标"> 上下角标</h3>
<p>19<sup>th</sup> H<sub>2</sub>O</p>
<details><summary>代码</summary>
<div><pre><code>19^th^ H<span><span>~</span><span>2</span><span>~</span></span>O
</code></pre>
<div><span>1</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/sup-sub/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="自定义对齐"> 自定义对齐</h3>
<div>
<p>我是居中的</p>
</div>
<div>
<p>我在右对齐</p>
</div>
<details><summary>代码</summary>
<div><pre><code>::: center

我是居中的

:::

::: right

我在右对齐

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/align/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="脚注"> 脚注</h3>
<p>此文字有脚注<sup></sup>.</p>
<details><summary>代码</summary>
<div><pre><code>此文字有脚注[^first].

<span><span>[</span><span>^first</span><span>]</span><span>:</span> 这是脚注内容</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/footnote/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="标记"> 标记</h3>
<p>你可以标记 <mark>重要的内容</mark> 。</p>
<details><summary>代码</summary>
<div><pre><code>你可以标记 ==重要的内容== 。
</code></pre>
<div><span>1</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/mark/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="任务列表"> 任务列表</h3>
<ul>
<li><input type="checkbox" checked="checked" disabled="disabled" id="task-item-0"><label for="task-item-0"> 计划 1</label></li>
<li><input type="checkbox"  disabled="disabled" id="task-item-1"><label for="task-item-1"> 计划 2</label></li>
</ul>
<details><summary>Code</summary>
<div><pre><code><span>-</span> [x] 计划 1
<span>-</span> [ ] 计划 2
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/guide/markdown/tasklist/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="流程图"> 流程图</h3>
<i>Not supported content</i><details><summary>代码</summary>
<div><pre><code><span><span>```</span><span>flow</span>
<span>cond=>condition: Process?
process=>operation: Process
e=>end: End

cond(yes)->process->e
cond(no)->e</span>
<span>```</span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/flowchart/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h2 id="mermaid"> Mermaid</h2>
<Mermaid id="mermaid-64a57060" data-code="graph%20TD%3B%0A%20%20%20%20A--%3EB%3B%0A%20%20%20%20A--%3EC%3B%0A%20%20%20%20B--%3ED%3B%0A%20%20%20%20C--%3ED%3B%0A"></Mermaid><details><summary>代码</summary>
<div><pre><code><span><span>```</span><span>mermaid</span>
<span>graph TD;
    A-->B;
    A-->C;
    B-->D;
    C-->D;</span>
<span>```</span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/mermaid/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="tex-语法"> Tex 语法</h3>
<p class='katex-block'><span><span><span><i>Not supported content</i></span><span aria-hidden="true"><span><span style="height:2.4em;vertical-align:-0.95em;"></span><span><span></span><span><span><span><span style="height:1.3714em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.05556em;">∂</span><span><span style="margin-right:0.03588em;">ω</span><span><span><span><span style="height:0.5904em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.05556em;">∂</span><span><span><span><span style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="margin-right:0.1667em;"></span><span><span style="top:0em;"><span>(</span></span><span><span></span><span><span><span><span style="height:1.3414em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.03588em;">ω</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">y</span><span><span><span><span style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="top:0em;"><span>)</span></span></span><span style="margin-right:0.2778em;"></span><span>=</span><span style="margin-right:0.2778em;"></span></span><span><span style="height:3.0277em;vertical-align:-1.2777em;"></span><span><span style="top:0em;"><span>(</span></span><span><span></span><span><span><span><span style="height:1.3414em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span style="margin-right:0.03588em;">ω</span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">y</span><span><span><span><span style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.03588em;">ω</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="top:0em;"><span>)</span></span></span><span style="margin-right:0.1667em;"></span><span><span style="top:0em;"><span>{</span></span><span>(</span><span>lo<span style="margin-right:0.01389em;">g</span></span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.03588em;">y</span><span><span>)</span><span><span><span><span style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span><span><span><span><span style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span style="height:3.05em;"></span><span><span><span>i</span><span>=</span><span>1</span></span></span></span><span style="top:-3.05em;"><span style="height:3.05em;"></span><span><span>∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span style="height:3.05em;"></span><span><span style="margin-right:0.02778em;">r</span></span></span></span><span>​</span></span><span><span style="height:1.2777em;"><span></span></span></span></span></span><span style="margin-right:0.1667em;"></span><span><span></span><span><span><span><span style="height:1.5017em;"><span style="top:-2.314em;"><span style="height:3em;"></span><span><span><span style="margin-right:0.03588em;">ω</span><span><span><span><span style="height:0.7507em;"><span style="top:-2.989em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span style="height:3em;"></span><span style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span style="height:3em;"></span><span><span>(</span><span>−</span><span>1</span><span><span>)</span><span><span><span><span style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span>i</span></span></span></span></span></span></span></span><span style="margin-right:0.02778em;">r</span><span style="margin-right:0.1667em;"></span><span>⋯</span><span style="margin-right:0.1667em;"></span><span>(</span><span style="margin-right:0.02778em;">r</span><span style="margin-right:0.2222em;"></span><span>−</span><span style="margin-right:0.2222em;"></span><span>i</span><span style="margin-right:0.2222em;"></span><span>+</span><span style="margin-right:0.2222em;"></span><span>1</span><span>)</span><span>(</span><span>lo<span style="margin-right:0.01389em;">g</span></span><span style="margin-right:0.1667em;"></span><span style="margin-right:0.03588em;">y</span><span><span>)</span><span><span><span><span style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span style="height:2.7em;"></span><span><span><span style="margin-right:0.02778em;">r</span><span>−</span><span>i</span></span></span></span></span></span></span></span></span></span></span></span><span>​</span></span><span><span style="height:0.686em;"><span></span></span></span></span></span><span></span></span><span style="top:0em;"><span>}</span></span></span></span></span></span></span></p>
<details><summary>代码</summary>
<div><pre><code>$$
\frac {\partial^r} {\partial \omega^r} \left(\frac {y^{\omega}} {\omega}\right)
= \left(\frac {y^{\omega}} {\omega}\right) \left\{(\log y)^r + \sum_{i=1}^r \frac {(-1)^i r \cdots (r-i+1) (\log y)^{r-i}} {\omega^i} \right\}
$$
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/tex/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="代码案例"> 代码案例</h3>

          <div
            id="code-demo-5ac6bc9f"
           
  
 data-title="%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%20Demo"

            data-code="%7B%22html%22%3A%22%3Ch1%3EMr.Hope%3C%2Fh1%3E%5Cn%3Cp%3E%3Cspan%20id%3D%5C%22very%5C%22%3E%E5%8D%81%E5%88%86%3C%2Fspan%3E%20%E5%B8%85%3C%2Fp%3E%5Cn%22%2C%22js%22%3A%22document.querySelector(%5C%22%23very%5C%22).addEventListener(%5C%22click%5C%22%2C%20()%20%3D%3E%20%7B%5Cn%20%20alert(%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22)%3B%5Cn%7D)%3B%5Cn%22%2C%22css%22%3A%22span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%22%7D"
          >
              
              <div>
                <div>
<div><pre><code><span><span><span>&lt;</span>h1</span><span>></span></span>Mr.Hope<span><span><span>&lt;/</span>h1</span><span>></span></span>
<span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;</span>span</span> <span>id</span><span><span>=</span><span>"</span>very<span>"</span></span><span>></span></span>十分<span><span><span>&lt;/</span>span</span><span>></span></span> 帅<span><span><span>&lt;/</span>p</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><div><pre><code>document<span>.</span><span>querySelector</span><span>(</span><span>"#very"</span><span>)</span><span>.</span><span>addEventListener</span><span>(</span><span>"click"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>alert</span><span>(</span><span>"十分帅"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div>
            </div>
          </div>
          
        </div>
<details><summary>代码</summary>
<div><pre><code>::: demo 一个普通 Demo

<span><span>```</span><span>html</span>
<span><span><span><span>&lt;</span>h1</span><span>></span></span>Mr.Hope<span><span><span>&lt;/</span>h1</span><span>></span></span>
<span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;</span>span</span> <span>id</span><span><span>=</span><span>"</span>very<span>"</span></span><span>></span></span>十分<span><span><span>&lt;/</span>span</span><span>></span></span> 帅<span><span><span>&lt;/</span>p</span><span>></span></span></span>
<span>```</span></span>

<span><span>```</span><span>js</span>
<span>document<span>.</span><span>querySelector</span><span>(</span><span>"#very"</span><span>)</span><span>.</span><span>addEventListener</span><span>(</span><span>"click"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>alert</span><span>(</span><span>"十分帅"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span></span>
<span>```</span></span>

<span><span>```</span><span>css</span>
<span><span>span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span></span>
<span>```</span></span>

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div></details>

          <div
            id="code-demo-693e1878"
           
  data-type="react"
 data-title="%E4%B8%80%E4%B8%AA%20React%20Demo"

            data-code="%7B%22js%22%3A%22export%20default%20class%20App%20extends%20React.Component%20%7B%5Cn%20%20constructor(props)%20%7B%5Cn%20%20%20%20super(props)%3B%5Cn%20%20%20%20this.state%20%3D%20%7B%20message%3A%20%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22%20%7D%3B%5Cn%20%20%7D%5Cn%20%20render()%20%7B%5Cn%20%20%20%20return%20(%5Cn%20%20%20%20%20%20%3Cdiv%20className%3D%5C%22box-react%5C%22%3E%5Cn%20%20%20%20%20%20%20%20Mr.Hope%20%3Cspan%3E%7Bthis.state.message%7D%3C%2Fspan%3E%5Cn%20%20%20%20%20%20%3C%2Fdiv%3E%5Cn%20%20%20%20)%3B%5Cn%20%20%7D%5Cn%7D%5Cn%22%2C%22css%22%3A%22.box-react%20span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%22%7D"
          >
              
              <div>
                <div>
<div><pre><code><span>export</span> <span>default</span> <span>class</span> <span>App</span> <span>extends</span> <span>React<span>.</span>Component</span> <span>{</span>
  <span>constructor</span><span>(</span><span>props</span><span>)</span> <span>{</span>
    <span>super</span><span>(</span>props<span>)</span><span>;</span>
    <span>this</span><span>.</span>state <span>=</span> <span>{</span> message<span>:</span> <span>"十分帅"</span> <span>}</span><span>;</span>
  <span>}</span>
  <span>render</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>(</span>
      <span>&lt;</span>div className<span>=</span><span>"box-react"</span><span>></span>
        Mr<span>.</span>Hope <span>&lt;</span>span<span>></span><span>{</span><span>this</span><span>.</span>state<span>.</span>message<span>}</span><span>&lt;</span><span>/</span>span<span>></span>
      <span>&lt;</span><span>/</span>div<span>></span>
    <span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><div><pre><code><span>.box-react span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div>
            </div>
          </div>
          
        </div>
<details><summary>代码</summary>
<div><pre><code>::: demo [react] 一个 React Demo

<span><span>```</span><span>js</span>
<span><span>export</span> <span>default</span> <span>class</span> <span>App</span> <span>extends</span> <span>React<span>.</span>Component</span> <span>{</span>
  <span>constructor</span><span>(</span><span>props</span><span>)</span> <span>{</span>
    <span>super</span><span>(</span>props<span>)</span><span>;</span>
    <span>this</span><span>.</span>state <span>=</span> <span>{</span> message<span>:</span> <span>"十分帅"</span> <span>}</span><span>;</span>
  <span>}</span>
  <span>render</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>(</span>
      <span>&lt;</span>div className<span>=</span><span>"box-react"</span><span>></span>
        Mr<span>.</span>Hope <span>&lt;</span>span<span>></span><span>{</span><span>this</span><span>.</span>state<span>.</span>message<span>}</span><span>&lt;</span><span>/</span>span<span>></span>
      <span>&lt;</span><span>/</span>div<span>></span>
    <span>)</span><span>;</span>
  <span>}</span>
<span>}</span></span>
<span>```</span></span>

<span><span>```</span><span>css</span>
<span><span>.box-react span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span></span>
<span>```</span></span>

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div></details>

          <div
            id="code-demo-2c0b9cdb"
           
  data-type="vue"
 data-title="%E4%B8%80%E4%B8%AA%20Vue%20Demo"

            data-code="%7B%22vue%22%3A%22%3Ctemplate%3E%5Cn%20%20%3Cdiv%20class%3D%5C%22box%5C%22%3E%5Cn%20%20%20%20Mr.Hope%20%3Cspan%3E%7B%7B%20message%20%7D%7D%3C%2Fspan%3E%5Cn%20%20%3C%2Fdiv%3E%5Cn%3C%2Ftemplate%3E%5Cn%3Cscript%3E%5Cnexport%20default%20%7B%5Cn%20%20data%3A%20()%20%3D%3E%20(%7B%20message%3A%20%5C%22%E5%8D%81%E5%88%86%E5%B8%85%5C%22%20%7D)%2C%5Cn%7D%3B%5Cn%3C%2Fscript%3E%5Cn%3Cstyle%3E%5Cn.box%20span%20%7B%5Cn%20%20color%3A%20red%3B%5Cn%7D%5Cn%3C%2Fstyle%3E%5Cn%22%7D"
          >
              
              <div>
                <div>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>box<span>"</span></span><span>></span></span>
    Mr.Hope <span><span><span>&lt;</span>span</span><span>></span></span>{{ message }}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>(</span><span>{</span> message<span>:</span> <span>"十分帅"</span> <span>}</span><span>)</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
<span><span><span>&lt;</span>style</span><span>></span></span><span><span>
<span>.box span</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div>
            </div>
          </div>
          
        </div>
<details><summary>代码</summary>
<div><pre><code>::: demo [vue] 一个 Vue Demo

<span><span>```</span><span>vue</span>
<span>&lt;template>
  &lt;div>
    Mr.Hope &lt;span>{{ message }}&lt;/span>
  &lt;/div>
&lt;/template>
&lt;script>
export default {
  data: () => ({ message: "十分帅" }),
};
&lt;/script>
&lt;style>
.box span {
  color: red;
}
&lt;/style></span>
<span>```</span></span>

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div></details>

          <div
            id="code-demo-2869b0e2"
           
  
 data-title="%E4%B8%80%E4%B8%AA%E6%99%AE%E9%80%9A%20Demo"

            data-code="%7B%22md%22%3A%22%23%20%E6%A0%87%E9%A2%98%5Cn%5Cn%E5%8D%81%E5%88%86%E5%B8%85%5Cn%22%2C%22ts%22%3A%22const%20message%3A%20string%20%3D%20%5C%22Mr.Hope%5C%22%3B%5Cn%5Cndocument.querySelector(%5C%22h1%5C%22).innerHTML%20%3D%20message%3B%5Cn%22%2C%22scss%22%3A%22h1%20%7B%5Cn%20%20font-style%3A%20italic%3B%5Cn%5Cn%20%20%2B%20p%20%7B%5Cn%20%20%20%20color%3A%20red%3B%5Cn%20%20%7D%5Cn%7D%5Cn%22%7D"
          >
              
              <div>
                <div>
<div><pre><code><span><span>#</span> 标题</span>

十分帅
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>const</span> message<span>:</span> <span>string</span> <span>=</span> <span>"Mr.Hope"</span><span>;</span>

document<span>.</span><span>querySelector</span><span>(</span><span>"h1"</span><span>)</span><span>.</span>innerHTML <span>=</span> message<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><div><pre><code><span>h1 </span><span>{</span>
  <span>font-style</span><span>:</span> italic<span>;</span>

  <span>+ p </span><span>{</span>
    <span>color</span><span>:</span> red<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div>
            </div>
          </div>
          
        </div>
<details><summary>代码</summary>
<div><pre><code>::: demo 一个普通 Demo

<span><span>```</span><span>md</span>
<span><span><span>#</span> 标题</span>

十分帅</span>
<span>```</span></span>

<span><span>```</span><span>ts</span>
<span><span>const</span> message<span>:</span> <span>string</span> <span>=</span> <span>"Mr.Hope"</span><span>;</span>

document<span>.</span><span>querySelector</span><span>(</span><span>"h1"</span><span>)</span><span>.</span>innerHTML <span>=</span> message<span>;</span></span>
<span>```</span></span>

<span><span>```</span><span>scss</span>
<span><span>h1 </span><span>{</span>
  <span>font-style</span><span>:</span> italic<span>;</span>

  <span>+ p </span><span>{</span>
    <span>color</span><span>:</span> red<span>;</span>
  <span>}</span>
<span>}</span></span>
<span>```</span></span>

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/demo/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h3 id="幻灯片"> 幻灯片</h3>
<i>Not supported content</i><details><summary>代码</summary>
<div><pre><code>@slidestart

<span><span>##</span> 幻灯片 1</span>

一个有文字和 <span>[<span>链接</span>](<span>https://mrhope.site</span>)</span> 的段落

<span>---</span>

<span><span>##</span> 幻灯片 2</span>

<span>-</span> 列表 1
<span>-</span> 列表 2

<span>---</span>

<span><span>##</span> 幻灯片 3.1</span>

<span><span>```</span><span>js</span>
<span><span>const</span> a <span>=</span> <span>1</span><span>;</span></span>
<span>```</span></span>

--

<span><span>##</span> 幻灯片 3.2</span>

$$
J(\theta_0,\theta_1) = \sum_{i=0}
$$

@slideend
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div></details>
<ul>
<li><a href="https://vuepress-theme-hope.github.io/zh/guide/markdown/presentation/" target="_blank" rel="noopener noreferrer">点击查看</a></li>
</ul>
<h2 id="其他语法"> 其他语法</h2>
<div><p>自定义标题</p>
<p>信息容器</p>
</div>
<div><p>自定义标题</p>
<p>提示容器</p>
</div>
<div><p>自定义标题</p>
<p>警告容器</p>
</div>
<div><p>自定义标题</p>
<p>危险容器</p>
</div>
<details><summary>自定义标题</summary>
<p>详情容器</p>
</details>
<details><summary>代码</summary>
<div><pre><code>::: info 自定义标题

信息容器

:::

::: tip 自定义标题

提示容器

:::

::: warning 自定义标题

警告容器

:::

::: danger 自定义标题

危险容器

:::

::: details 自定义标题

详情容器

:::
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br></div></div></details>
<hr>
<section>
<ol>
<li id="footnote1"><p>这是脚注内容 </p>
</li>
</ol>
</section>
]]></content:encoded>
    </item>
    <item>
      <title>页面配置</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/page/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/page/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">页面配置</source>
      <category>使用指南</category>
      <pubDate>Wed, 01 Jan 2020 00:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="页面信息"> 页面信息</h2>
<p>你可以在 Markdown 的 Frontmatter 中设置页面信息。</p>
<ul>
<li>
<p>作者设置为 Ms.Hope。</p>
</li>
<li>
<p>写作时间应为 2020 年 1 月 1 日</p>
</li>
<li>
<p>分类为 “使用指南”</p>
</li>
<li>
<p>标签为 “页面配置” 和 “使用指南”</p>
</li>
</ul>
<h2 id="页面内容"> 页面内容</h2>
<p>你可以自由在这里书写你的 Markdown。</p>
<div><p>提示</p>
<ul>
<li>
<p>Markdown 文件夹的图片请使用相对链接 <code>./</code> 进行引用。</p>
</li>
<li>
<p><code>.vuepress/public</code> 文件夹的图片，请使用绝对链接 <code>/</code> 进行引用</p>
</li>
</ul>
</div>
<p>主题包含了一个自定义徽章章可以使用:</p>
<blockquote>
<p>文字结尾应该有深蓝色的 徽章文字 徽章。 <i>Not supported content</i></p>
</blockquote>
<h2 id="页面结构"> 页面结构</h2>
<p>此页面应当包含：</p>
<ul>
<li>返回顶部按钮</li>
<li>路径导航</li>
<li>评论</li>
<li>页脚</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>介绍</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/introduce/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/introduce/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">介绍</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<p>ShardingCore是一款易用、简单、高性能、普适性，针对<a href="https://github.com/dotnet/efcore" target="_blank" rel="noopener noreferrer">efcore</a>生态下的分表分库的扩展解决方案,支持efcore2+的所有版本,支持efcore2+的所有数据库、支持自定义路由、动态路由、高性能分页、读写分离的一款组件,一款零依赖第三方组件的扩展，如果您熟悉efcore的使用那么对于这个组件您只需要简单配置即可零成本开始使用。</p>
<div><p>注意</p>
<ol>
<li>本组件仅仅只是针对efcore的一个扩展</li>
<li>本组件基于目前分表分库下的最新、最高性能的原理来实现，实际使用中还需要结合业务设计合理的分片方式</li>
<li>本组件目前不提供数据迁移功能,如果你一开始的数据分表、分库不是动态的那么后续的库/表增加需要您自己手动去迁移数据</li>
<li>本组件是针对efcore的扩展所以只要您的框架里面用到了efcore并且可以针对DbContextOptionsBuilder进行手动处理那么就可以支持(如 <a href="https://github.com/abpframework/abp" target="_blank" rel="noopener noreferrer">abp vnext</a>)</li>
</ol>
</div>
<h2 id="特性"> 特性</h2>
<ul>
<li><strong>Code First</strong></li>
</ul>
<p>支持efcore的code first支持表结构的迁移自动化。</p>
<ul>
<li><strong>自定义路由</strong></li>
</ul>
<p>支持对数据分表/分库的自定义路由，可以满足几乎90%的业务分表/分库规则，并且支持外部传入配置</p>
<ul>
<li><strong>分片字段任意类型</strong></li>
</ul>
<p>支持分片字段为任意类型的字段比如按时间分片(支持 datetime,long,int...)</p>
<ul>
<li><strong>join、group</strong></li>
</ul>
<p>支持分片对象和非分片对象的join group by，并且支持分片对象和分片对象的join group by</p>
<ul>
<li><strong>高性能分页</strong></li>
</ul>
<p>具有极少数的客户端分片中间件下才有的流式聚合，和特定的高性能分页，具有低内存高性能O(n),并且支持顺序分页，反向分页，追加排序</p>
<ul>
<li><strong>手动路由</strong></li>
</ul>
<p>支持分片查询指定分片表，和断言分片表</p>
<ul>
<li><strong>批量操作</strong></li>
</ul>
<p>支持efcore生态下的所有批量操作组件</p>
<ul>
<li><strong>自动追踪</strong></li>
</ul>
<p>是efcore分片中间件下为数不多的支持自动追踪的</p>
<ul>
<li><strong>沉浸式编码</strong></li>
</ul>
<p>支持在编写数据库的crud的时候保证使用体验和efcore原生编码一样，无需学习成本</p>
<ul>
<li><strong>多数据库支持</strong></li>
</ul>
<p>只要是efcore2+支持的数据库sharding-core都是支持的</p>
<p>别犹豫了，赶快上手吧</p>
]]></content:encoded>
    </item>
    <item>
      <title>参数配置</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/params-confg/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/params-confg/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">参数配置</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="autotrackentity"> AutoTrackEntity</h2>
<p>sharding-core默认针对分表后的数据将不支持追踪,未分表的对象支持原生efcore的追踪规则,如果你的查询对象A是部分表的那么依旧符合原生使用efcore的追踪规则,针对分表对象B那么将不再支持追踪.</p>
<h3 id="使用追踪"> 使用追踪</h3>
<p>你可以设置<code>AutoTrackEntity</code>为true</p>
<div><pre><code>services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>Begin</span><span>(</span>o <span>=></span>
                <span>{</span>
                <span>}</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><p>那么所有的对象都将支持追踪。</p>
<h3 id="不启用追踪"> 不启用追踪</h3>
<p><code>AutoTrackEntity</code>设置为true或者false都没什么关系,建议设置为true，因为有可能需要使用追踪</p>
<div><pre><code> services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>DefaultShardingDbContext<span>></span></span></span><span>(</span>
                    <span>(</span>conn<span>,</span> o<span>)</span> <span>=></span>
                        o<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>.</span><span>UseQueryTrackingBehavior</span><span>(</span>QueryTrackingBehavior<span>.</span>NoTracking<span>)</span>
                <span>)</span><span>.</span><span>Begin</span><span>(</span>o <span>=></span>
                <span>{</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseQueryTrackingBehavior</span><span>(</span>QueryTrackingBehavior<span>.</span>NoTracking<span>)</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>追加所有的创建<code>DbContext</code>的委托<code>.UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking)</code>那么所有的查询都将不再启用追踪除非手动调用<code>AsTracking</code></p>
<div><p>注意</p>
<p>因为<code>AutoTrackEntity</code>设置为false后如果不设置<code>DbContext</code>为<code>.UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking)</code>那么分表后的查询依然会走追踪只是程序无法追踪到，因为查询的原理会新创建n个<code>DbContext</code>但是这些<code>DbContext</code>进行查询的时候并没有使用<code>NoTracking</code>所以性能上还是会有一定的损失，<strong>总结就是<code>AutoTrackEntity</code>无脑设置为true</strong></p>
</div>
<h2 id="ensurecreatedwithoutshardingtable"> EnsureCreatedWithOutShardingTable</h2>
<p>这个属性的意思很好理解就是是否需要在启动的时候创建表，这边的创建表是除了分表的对象，其他对象都会直接创建对应的表，每次启动都会执行一下，如果您是使用<a href="/sharding-core-doc/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<h2 id="createshardingtableonstart"> CreateShardingTableOnStart</h2>
<p>这个熟悉的意思就是是否需要在启动的时候创建表，但是由于<code>efcore</code>并未提供关于表是否存在的判断，所以如果你将这个值设置为true,那么每次都会在启动的时候都会去执行创建表的方法，这样就会导致启动的时候如果有某些表过多那么就会导致启动速度变慢，可以再您未创建表的时候使用这个属性，创建完成后将这个属性设置为false，如果您是使用<a href="/sharding-core-doc/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<h2 id="ignorecreatetableerror"> IgnoreCreateTableError</h2>
<p><code>sharding-core</code>默认会在创建表失败后输出错误信息,但是输出的信息会被log记录所以为了log不记录这些信息，可以将这个值设置为true那么如果创建失败(已经存在表)框架将不会抛出对应的错误消息，如果您是使用<a href="/sharding-core-doc/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<h2 id="parallelquerymaxthreadcount"> ParallelQueryMaxThreadCount</h2>
<p>并发查询最大线程数,默认cpu核心数*2，因为分表/分库后的单次查询会涉及到N张表，N&gt;=1为了保证单次查询不会导致整个系统崩溃掉，所以这边提供了这个属性，可以保证涉及到跨库或者跨表的时候查询不会创建过多的<code>DbConnection</code></p>
<h2 id="parallelquerytimeout"> ParallelQueryTimeOut</h2>
<p>并发查询超时时间,默认30秒,这个字段也是为了在分成多个线程查询后可能导致线程一致未返回结果，所以添加了这个字段在超时后可以取消掉现有的线程,防止无限制等待。</p>
]]></content:encoded>
    </item>
    <item>
      <title>分表并且分库</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/sharding-all/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/sharding-all/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">分表并且分库</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
    </item>
    <item>
      <title>分库</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/sharding-data-source/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/sharding-data-source/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">分库</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
    </item>
    <item>
      <title>读写分离</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/read-write/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/read-write/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">读写分离</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
    </item>
    <item>
      <title>分表</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/sharding-table/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/sharding-table/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">分表</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
    </item>
    <item>
      <title>概念</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/terminology/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/terminology/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">概念</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
    </item>
    <item>
      <title>x.3升级到x.4指南</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide-upgrade-3-4/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide-upgrade-3-4/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">x.3升级到x.4指南</source>
      <category>x.3升级到x.4指南</category>
      <pubDate>Fri, 07 Jan 2022 14:00:26 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="说明"> 说明</h2>
<p>如果您目前正在使用x.3.x.x希望可以升级到最新版本的x.4.x.x那么可以通过查看对比如下差异来选择是否升级</p>
<h2 id="优点"> 优点</h2>
<ul>
<li>x.4.x.x版本相较于x.3.x.x版本新增额外功能多配置,原先针对x.3.x.x版本如果是多租户下一个租户使用一个数据库链接那么所创建的对象必须要支持分库,才可以没办法动态切换默认数据库,并且额外所有表都需要支持分库,在x.4.x.x版本新增了多配置动态获取,保证了在单配置情况下还是和原先一样的情况下多配置下支持额外动态配置,分库隔离的情况下不需要针对所有对象进行分库处理操作。</li>
<li>后续会对x.3.x.x版本进行bug修复,但是不会增加新功能,后续的新功能和优化都会在最新版上进行</li>
<li>支持多租户下不同租户的不同数据库</li>
</ul>
<h2 id="注意点"> 注意点</h2>
<ul>
<li>4版本和3版本的区别除了动态多配置外,还有启动时候的配置方式进行了改变。</li>
<li><code>IVirtualDataSource&lt;TShardingDbContext&gt;</code>无法通过依赖注入获取,取而代之的是<code>IVirtualDataSourceManager&lt;TShardingDbContext&gt;</code></li>
<li><code>IShardingDbContext</code>需要实现一个新方法可以通过<code>shardingDbContextExecutor</code>来进行实现</li>
<li><code>IShardingComparer</code>无法通过依赖注入获取并且移除泛型接口</li>
<li><code>IConnectionStringManager</code>移除泛型接口,并且不支持依赖注入,可以通过<code>IVirtualDataSource&lt;TShardingDbContext&gt;</code>来进行获取</li>
<li><code>IShardingConnectionStringResolver</code>移除泛型接口,并且不支持依赖注入</li>
<li><code>IReadWriteOptions&lt;TShardingDbContext&gt;</code>被移除</li>
<li><code>IShardingDbContextOptionsBuilderConfig&lt;TShardingDbContext&gt;</code>被移除</li>
</ul>
<h2 id="原先startup"> 原先startup</h2>
<div><pre><code>services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>ShardingDefaultDbContext<span>></span></span></span><span>(</span><span>(</span>conn<span>,</span> o<span>)</span> <span>=></span>
                    o<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>)</span>
                <span>.</span><span>Begin</span><span>(</span>o <span>=></span>
                <span>{</span>
                    o<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    o<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>

                    o<span>.</span>ThrowIfQueryRouteNotMatch <span>=</span> <span>false</span><span>;</span>
                    <span>//o.AddParallelTables(typeof(SysUserMod), typeof(SysUserSalary));</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>)</span>
                <span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"A"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBA;Integrated Security=True;"</span><span>)</span>
                <span>.</span><span>AddShardingDataSource</span><span>(</span>sp <span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span> <span>"B"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;"</span> <span>}</span><span>,</span>
                        <span>{</span> <span>"C"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBC;Integrated Security=True;"</span> <span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddShardingDataSourceRoute</span><span>(</span>o <span>=></span>
                <span>{</span>
                    o<span>.</span><span><span>AddShardingDatabaseRoute</span><span><span>&lt;</span>OrderAreaShardingVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddShardingTableRoute</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserSalaryVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderCreateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogDayVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogWeekDateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogWeekTimeLongVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogYearDateTimeVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogMonthLongvirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogYearLongVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModIntVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogDayLongVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>MultiShardingOrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddReadWriteSeparation</span><span>(</span>sp <span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> IEnumerable<span>&lt;</span><span>string</span><span>></span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"A"</span><span>,</span> <span>new</span> <span>HashSet<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
                            <span>{</span>
                                <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;"</span>
                            <span>}</span>
                        <span>}</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>,</span>ReadStrategyEnum<span>.</span>Loop<span>,</span><span>defaultEnable</span><span>:</span> <span>false</span><span>,</span> <span>readConnStringGetStrategy</span><span>:</span>ReadConnStringGetStrategyEnum<span>.</span>LatestEveryTime<span>)</span>
                <span>.</span><span>AddTableEnsureManager</span><span>(</span>sp<span>=></span><span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>ShardingDefaultDbContext<span>></span></span><span>(</span><span>)</span><span>)</span>
                <span>.</span><span>End</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br></div></div><h2 id="现在的startup"> 现在的startup</h2>
<div><pre><code>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>ShardingDefaultDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>AddEntityConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    <span>//如果您使用code-first建议选择false</span>
                    op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    <span>//如果您使用code-first建议修改为fsle</span>
                    op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                    <span>//当无法获取路由时会返回默认值而不是报错</span>
                    op<span>.</span>ThrowIfQueryRouteNotMatch <span>=</span> <span>false</span><span>;</span>
                    <span>//这边设置了如果AddConfig没设置就是用这边的</span>
                    <span>//op.UseShardingQuery((conStr, builder) =></span>
                    <span>//{</span>
                    <span>//    builder.UseSqlServer(conStr).UseLoggerFactory(efLogger);</span>
                    <span>//});</span>
                    <span>//op.UseShardingTransaction((connection, builder) =></span>
                    <span>//{</span>
                    <span>//    builder.UseSqlServer(connection).UseLoggerFactory(efLogger);</span>
                    <span>//});</span>
                    op<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>OrderAreaShardingVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserSalaryVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderCreateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogDayVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogWeekDateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogWeekTimeLongVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogYearDateTimeVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogMonthLongvirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogYearLongVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModIntVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogDayLongVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>MultiShardingOrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>

                <span>}</span><span>)</span>
                <span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>ConfigId<span>=</span><span>"c1"</span><span>;</span>
                    <span>//op.Priority = 1;</span>

                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>

                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"A"</span><span>,</span>
                        <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBA;Integrated Security=True;"</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddExtraDataSource</span><span>(</span>sp <span>=></span>
                    <span>{</span>
                        <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span> <span>"B"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;"</span> <span>}</span><span>,</span>
                        <span>{</span> <span>"C"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBC;Integrated Security=True;"</span> <span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddReadWriteSeparation</span><span>(</span>sp <span>=></span>
                    <span>{</span>
                        <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> IEnumerable<span>&lt;</span><span>string</span><span>></span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"A"</span><span>,</span> <span>new</span> <span>HashSet<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
                            <span>{</span>
                                <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;"</span>
                            <span>}</span>
                        <span>}</span>
                    <span>}</span><span>;</span>
                    <span>}</span><span>,</span> ReadStrategyEnum<span>.</span>Loop<span>,</span> <span>defaultEnable</span><span>:</span> <span>false</span><span>,</span> <span>readConnStringGetStrategy</span><span>:</span> ReadConnStringGetStrategyEnum<span>.</span>LatestEveryTime<span>)</span><span>;</span>
                    op<span>.</span><span>ReplaceTableEnsureManager</span><span>(</span>sp <span>=></span> <span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>ShardingDefaultDbContext<span>></span></span><span>(</span><span>)</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br></div></div><p><strong>总结</strong> 移除<code>AddShardingDbContext</code>委托参数,将分表分库路由添加新增到了<code>AddEntityConfig</code>,额外新增<code>AddConfig</code>额外多了一个必填字段ConfigId用于在多配置下进行获取,当然如果你是单配置的那么可以忽略,<code>EnsureConfig</code>表示为单个配置<code>EnsureMultiConfig</code>表示为多配置,目前Startup必须要配置一个<code>AddConfig</code></p>
]]></content:encoded>
    </item>
    <item>
      <title>参数配置</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/params-confg/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/params-confg/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">参数配置</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="配置"> 配置</h2>
<div><pre><code> services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>AddEntityConfig</span><span>(</span>op <span>=></span>
            <span>{</span>
                <span>//如果您使用code-first建议选择false</span>
                op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                <span>//如果您使用code-first建议修改为fsle</span>
                op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                <span>//当无法获取路由时会返回默认值而不是报错</span>
                op<span>.</span>ThrowIfQueryRouteNotMatch <span>=</span> <span>false</span><span>;</span>
                <span>//如果创建表出错的话是否忽略,如果不忽略就会输出warning的日志</span>
                op<span>.</span>IgnoreCreateTableError <span>=</span> <span>true</span><span>;</span>
                <span>//是否缓存分库路由表达式缓存仅缓存单个操作</span>
                <span>//sharding data source route filter expression compile cache</span>
                op<span>.</span>EnableDataSourceRouteCompileCache <span>=</span> <span>null</span><span>;</span>
                <span>//是否缓存分表路由表达式缓存仅缓存单个操作</span>
                <span>//sharding table route filter expression compile cache</span>
                op<span>.</span>EnableTableRouteCompileCache <span>=</span> <span>null</span><span>;</span>
                <span>//如果找不到路由结果是否抛出异常还是选择返回默认值</span>
                op<span>.</span>ThrowIfQueryRouteNotMatch <span>=</span> <span>false</span><span>;</span>
                <span>//添加这个对象的字符串创建dbcontext 优先级低 优先采用AddConfig下的</span>
                op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>;</span>
                <span>//添加这个对象的链接创建dbcontext 优先级低 优先采用AddConfig下的</span>
                op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>;</span>
                <span>//添加分库路由</span>
                op<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>xxx<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>//添加分表路由</span>
                op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>xxx<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>AddConfig</span><span>(</span>op <span>=></span><span>//AddConfig必须存在一个</span>
            <span>{</span>
                <span>//当前配置的名称</span>
                op<span>.</span>ConfigId <span>=</span> <span>"a"</span><span>;</span>
                <span>//当前配置优先级</span>
                op<span>.</span>Priority <span>=</span> <span>1</span><span>;</span>
                <span>//当前配置链接模式</span>
                op<span>.</span>ConnectionMode <span>=</span> ConnectionModeEnum<span>.</span>SYSTEM_AUTO<span>;</span>
                <span>//当前配置最大连接数</span>
                op<span>.</span>MaxQueryConnectionsLimit <span>=</span> <span>4</span><span>;</span>
                <span>//同上配置</span>
                op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>;</span>
                <span>//同上配置</span>
                op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>;</span>
                <span>//添加默认链接</span>
                op<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span>
                    <span>"Data Source=localhost;Initial Catalog=xxxx;Integrated Security=True;"</span><span>)</span><span>;</span>
                <span>//添加额外数据源链接(分库下会用到)</span>
                op<span>.</span><span>AddExtraDataSource</span><span>(</span>sp <span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span> <span>"ds1"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=xxxx1;Integrated Security=True;"</span> <span>}</span><span>,</span>
                        <span>{</span> <span>"ds2"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=xxxx2;Integrated Security=True;"</span> <span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>)</span><span>;</span>
                <span>//添加默认的比较器(guid在sqlserver下和c#下比较器排序行为不一致需要手动修复)</span>
                op<span>.</span><span>ReplaceShardingComparer</span><span>(</span>sp<span>=></span><span>new</span> <span>CSharpLanguageShardingComparer</span><span>(</span><span>)</span><span>)</span><span>;</span>
                <span>//添加表确认默认提供了sqlserver和mysql的如果有其他的请提交pr补充谢谢</span>
                op<span>.</span><span>ReplaceTableEnsureManager</span><span>(</span>sp<span>=></span><span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>MyDbContext<span>></span></span><span>(</span><span>)</span><span>)</span><span>;</span>
                <span>//添加读写分离</span>
                op<span>.</span><span>AddReadWriteSeparation</span><span>(</span>sp <span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> IEnumerable<span>&lt;</span><span>string</span><span>></span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"ds0"</span><span>,</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
                            <span>{</span>
                                <span>"Data Source=localhost;Initial Catalog=xxxx0_1;Integrated Security=True;"</span>
                            <span>}</span>
                        <span>}</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>,</span> ReadStrategyEnum<span>.</span>Loop<span>,</span> <span>defaultEnable</span><span>:</span> <span>true</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span>ShardingConfigurationStrategyEnum<span>.</span>ThrowIfNull<span>)</span><span>;</span><span>//单个配置后续不会增加了的 如果无法匹配会抛出异常</span>
            <span>//.EnsureMultiConfig(ShardingConfigurationStrategyEnum.ThrowIfNull)//多个配置后续还会增加,使用时必须指定configId 如果无法匹配会抛出异常 还可以指定返回优先级最高的或者返回null 但是返回null的情况下sharding-core将无法正常运行</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br></div></div><h2 id="enabletableroutecompilecache"> EnableTableRouteCompileCache</h2>
<p>针对分表下的表达式编译,默认null
针对单个结果的表达式进行编译缓存可以有效的提高性能</p>
<h2 id="enabledatasourceroutecompilecache"> EnableDataSourceRouteCompileCache</h2>
<p>针对分库下的表达式编译,默认null
针对单个结果的表达式进行编译缓存可以有效的提高性能</p>
<h2 id="ensurecreatedwithoutshardingtable"> EnsureCreatedWithOutShardingTable</h2>
<p>这个属性的意思很好理解就是是否需要在启动的时候创建表，这边的创建表是除了分表的对象，其他对象都会直接创建对应的表，只有当数据库是空的前提下或者没有数据库的前提下会自动创建数据库和普通表，如果您是使用<a href="/sharding-core-doc/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<p>有库了不会建库，普通表(非分表的可以是分库的表但不能是分表的表)有任何一张存在库里了别的普通表都不会被创建</p>
<div><p>注意</p>
<p>!!!<strong>只有</strong>当数据库是空的前提下或者没有数据库的前提下会自动创建数据库和普通表!!!</p>
<p>!!!<strong>只有</strong>当数据库是空的前提下或者没有数据库的前提下会自动创建数据库和普通表!!!</p>
<p>!!!<strong>只有</strong>当数据库是空的前提下或者没有数据库的前提下会自动创建数据库和普通表!!!</p>
</div>
<h2 id="createshardingtableonstart"> CreateShardingTableOnStart</h2>
<p>这个属性的意思就是是否需要在启动的时候创建分表了的表，但是由于<code>efcore</code>并未提供关于表是否存在的判断，所以如果你将这个值设置为true,那么每次都会在启动的时候都会去执行创建表的方法，这样就会导致启动的时候如果有某些表过多那么就会导致启动速度变慢，可以再您未创建表的时候使用这个属性，创建完成后将这个属性设置为false，如果您是使用<a href="/sharding-core-doc/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<h2 id="ignorecreatetableerror"> IgnoreCreateTableError</h2>
<p><code>sharding-core</code>默认会在创建表失败后输出错误信息,但是输出的信息会被log记录所以为了log不记录这些信息，可以将这个值设置为true那么如果创建失败(已经存在表)框架将不会抛出对应的错误消息，如果您是使用<a href="/sharding-core-doc/adv/code-first/">code-first</a>的那么这个值可以无视或者设置为false。</p>
<h2 id="maxqueryconnectionslimit"> MaxQueryConnectionsLimit</h2>
<p>最大并发链接数，就是表示单次查询<code>sharding-core</code>允许使用的dbconnection，默认会加上1就是说如果你配置了<code>MaxQueryConnectionsLimit=10</code>那么实际<code>sharding-core</code>会在同一次查询中开启11条链接最多,为什么是11不是10因为<code>sharding-core</code>会默认开启一个链接用来进行空dbconnection的使用。如果不设置本参数那么默认是cpu线程数<code>Environment.ProcessorCount</code></p>
<h2 id="connectionmode"> ConnectionMode</h2>
<p>链接模式,可以由用户自行指定，使用内存限制,和连接数限制或者系统自行选择最优</p>
<p>链接模式，有三个可选项，分别是：</p>
<h3 id="memory-strictly"> MEMORY_STRICTLY</h3>
<p>内存限制模式最小化内存聚合 流式聚合 同时会有多个链接</p>
<p>MEMORY_STRICTLY的意思是最小化内存使用率，就是非一次性获取所有数据然后采用流式聚合</p>
<h3 id="connection-strictly"> CONNECTION_STRICTLY</h3>
<p>连接数限制模式最小化并发连接数 内存聚合 连接数会有限制</p>
<p>CONNECTION_STRICTLY的意思是最小化连接并发数，就是单次查询并发连接数为设置的连接数<code>MaxQueryConnectionsLimit</code>。因为有限制，所以无法一直挂起多个连接，数据的合并为内存聚合采用最小化内存方式进行优化，而不是无脑使用内存聚合</p>
<h3 id="system-auto"> SYSTEM_AUTO</h3>
<p>系统自动选择内存还是流式聚合</p>
<p>系统自行选择会根据用户的配置采取最小化连接数，但是如果遇到分页则会根据分页策略采取内存限制，因为skip过大会导致内存爆炸</p>
<div><p>注意</p>
<p>!!!如果用户手动设置ConnectionMode则按照用户设置的为准,之后判断本次查询skip是否大于UseMemoryLimitWhileSkip,如果是采用<code>MEMORY_STRICTLY</code>,之后才是系统动态设置根据<code>MaxQueryConnectionsLimit</code>来分配!!!
!!!如果用户手动设置ConnectionMode则按照用户设置的为准,之后判断本次查询skip是否大于UseMemoryLimitWhileSkip,如果是采用<code>MEMORY_STRICTLY</code>,之后才是系统动态设置根据<code>MaxQueryConnectionsLimit</code>来分配!!!
!!!如果用户手动设置ConnectionMode则按照用户设置的为准,之后判断本次查询skip是否大于UseMemoryLimitWhileSkip,如果是采用<code>MEMORY_STRICTLY</code>,之后才是系统动态设置根据<code>MaxQueryConnectionsLimit</code>来分配!!!</p>
</div>
<h2 id="replaceshardingcomparer"> ReplaceShardingComparer</h2>
<p>添加默认的比较器(guid在sqlserver下和c#下比较器排序行为不一致需要手动修复)</p>
<h2 id="replacetableensuremanager"> ReplaceTableEnsureManager</h2>
<p>添加表确认默认提供了sqlserver和mysql的如果有其他的请提交pr补充谢谢</p>
<h2 id="shardingconfigurationstrategyenum"> ShardingConfigurationStrategyEnum</h2>
<h3 id="throwifnull"> ThrowIfNull</h3>
<p>如果找到将抛出异常,单配置下无需管理(推荐、默认也是这个值)</p>
<h3 id="returnnull"> ReturnNull</h3>
<p>如果找不到就返回null,如果返回null那么dbcontext将无法正常运行,所以如果设置返回null请一定要在创建dbcontext之前指定configId</p>
<h3 id="returnhighpriority"> ReturnHighPriority</h3>
<p>当不指定或者找不到对应的当前虚拟数据源或者configId时将返回优先级最高的那个</p>
<h2 id="addconfig"> AddConfig</h2>
<p>支持添加多个配置,每个配置可以指定自定义数据库,并且支持动态添加</p>
]]></content:encoded>
    </item>
    <item>
      <title>介绍</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/introduce/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/introduce/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">介绍</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="重要重要重要"> 重要重要重要</h2>
<p>无论您是否是第一次使用请先仔细阅读<a href="/sharding-core-doc/important">重要</a></p>
<div><p>注意</p>
<p>！！！重要重要重要！！！</p>
<p>！！！重要重要重要！！！</p>
<p>！！！重要重要重要！！！</p>
</div>
<p>ShardingCore是一款易用、简单、高性能、普适性，针对<a href="https://github.com/dotnet/efcore" target="_blank" rel="noopener noreferrer">efcore</a>生态下的分表分库的扩展解决方案,支持efcore2+的所有版本,支持efcore2+的所有数据库、支持自定义路由、动态路由、高性能分页、读写分离的一款组件,一款零依赖第三方组件的扩展，如果您熟悉efcore的使用那么对于这个组件您只需要简单配置即可零成本开始使用。</p>
<div><p>注意</p>
<ol>
<li>本组件仅仅只是针对efcore的一个扩展</li>
<li>本组件基于目前分表分库下的最新、最高性能的原理来实现，实际使用中还需要结合业务设计合理的分片方式</li>
<li>本组件目前不提供数据迁移功能,如果你一开始的数据分表、分库不是动态的那么后续的库/表增加需要您自己手动去迁移数据</li>
<li>本组件是针对efcore的扩展所以只要您的框架里面用到了efcore并且可以针对DbContextOptionsBuilder进行手动处理那么就可以支持(如 <a href="https://github.com/abpframework/abp" target="_blank" rel="noopener noreferrer">abp vnext</a>)</li>
</ol>
</div>
<h2 id="特性"> 特性</h2>
<ul>
<li><strong>Code First</strong></li>
</ul>
<p>支持efcore的code first支持表结构的迁移自动化。</p>
<ul>
<li><strong>自定义路由</strong></li>
</ul>
<p>支持对数据分表/分库的自定义路由，可以满足几乎90%的业务分表/分库规则，并且支持外部传入配置</p>
<ul>
<li><strong>默认路由</strong></li>
</ul>
<p>针对分表默认提供多种路由:int取模,string取模,long时间按年月周日分表,DateTime时间按年月周日分表，并且按时间分表支持自动创建对应的表无需手动处理</p>
<ul>
<li><strong>分片字段任意类型</strong></li>
</ul>
<p>支持分片字段为任意类型的字段比如按时间分片(支持 datetime,long,int...)</p>
<ul>
<li><strong>join、group</strong></li>
</ul>
<p>支持分片对象和非分片对象的join group by，并且支持分片对象和分片对象的join group by</p>
<ul>
<li><strong>高性能分页</strong></li>
</ul>
<p>具有极少数的客户端分片中间件下才有的流式聚合，和特定的高性能分页，具有低内存高性能O(n),并且支持顺序分页，反向分页，追加排序</p>
<ul>
<li><strong>手动路由</strong></li>
</ul>
<p>支持分片查询指定分片表，和断言分片表</p>
<ul>
<li><strong>批量操作</strong></li>
</ul>
<p>支持efcore生态下的所有批量操作组件</p>
<ul>
<li><strong>自动追踪</strong></li>
</ul>
<p>是efcore分片中间件下为数不多的支持自动追踪的</p>
<ul>
<li><strong>沉浸式编码</strong></li>
</ul>
<p>支持在编写数据库的crud的时候保证使用体验和efcore原生编码一样，无需学习成本</p>
<ul>
<li><strong>多字段分片</strong></li>
</ul>
<p>本框架支持查询时通过额外字段来进行快速索引</p>
<ul>
<li><strong>多数据库支持</strong></li>
</ul>
<p>只要是efcore2+支持的数据库sharding-core都是支持的</p>
<ul>
<li><strong>动态分库</strong></li>
</ul>
<p>支持动态分库对需要的对象进行动态分库添加</p>
<ul>
<li><strong>动态读写分离</strong></li>
</ul>
<p>针对其支持动态读写分离</p>
<ul>
<li><strong>动态多配置</strong></li>
</ul>
<p>支持动态多配置,并且支持动态多数据库类型(用户自行实现多个<code>IShardingRuntimeContext</code>即可)</p>
<p>别犹豫了，赶快上手吧</p>
]]></content:encoded>
    </item>
    <item>
      <title>快速上手</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/quick-start/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide%20copy/quick-start/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">快速上手</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="版本"> 版本</h2>
<p>sharding-core 目前为止以efcore版本号作为主版本，所以您会在nuget上看到2.x,3.x,5.x的版本,如果需要请安装最新版nuget上的efcore版本对应的sharding-core版本</p>
<div><p>注意</p>
<p>如果nuget上的sharding-core版本不适合您目前的efcore版本并且您目前不想升级对应的efcore版本，请自行下载程序进行源码编译替换成您所需要的efcore版本</p>
</div>
<h2 id="安装和启动"> 安装和启动</h2>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore -Version LastVersion
</code></pre>
<div><span>1</span><br><span>2</span><br></div></div><h2 id="使用efcore"> 使用efcore</h2>
<ol>
<li>首先我们创建一个空的控制台程序</li>
</ol>
<div><pre><code><span># 创建一个目录用于测试</span>
<span>mkdir</span> EFCoreSharding

<span># 进入创建的目录</span>
<span>cd</span> EFCoreSharding

<span># 创建一个空的控制台程序</span>
dotnet new console

<span># 添加efcore 测试我们采用sqlserver作为测试数据库，其他数据库用法一致</span>
dotnet <span>add</span> package Microsoft.EntityFrameworkCore.SqlServer --version <span>5.0</span>.11
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><div><p>注意</p>
<p>这边我们文档编写时控制台程序为net5.0，所以我们这边选择了efcore5的版本的最新版，具体请参考您自己的项目</p>
</div>
<ol start="2">
<li>创建订单对象<code>Order</code>：</li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 订单表</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>Order</span>
<span>{</span>
    <span>/// &lt;summary></span>
    <span>/// 订单Id</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>/// &lt;summary></span>
    <span>/// 付款用户名</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>/// &lt;summary></span>
    <span>/// 付款金额分</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>/// &lt;summary></span>
    <span>/// 创建时间</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span>DateTime</span> CreateTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>/// &lt;summary></span>
    <span>/// 是否已删除</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span><span>bool</span></span> IsDelete <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><ol start="3">
<li>创建efcore的dbcontext</li>
</ol>
<div><pre><code><span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>DbContext</span></span>
<span>{</span>
    <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span><span>:</span><span>base</span><span>(</span>options<span>)</span>
    <span>{</span>
        
    <span>}</span>

    <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
    <span>{</span>
        <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
        modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>o <span>=></span>
        <span>{</span>
            o<span>.</span><span>HasKey</span><span>(</span>p <span>=></span> p<span>.</span>Id<span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>40</span><span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"订单Id"</span><span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"付款用户名"</span><span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>Money<span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"付款金额分"</span><span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>CreateTime<span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"创建时间"</span><span>)</span><span>;</span>
            o<span>.</span><span>Property</span><span>(</span>p <span>=></span> p<span>.</span>IsDelete<span>)</span><span>.</span><span>HasComment</span><span>(</span><span>"是否已删除"</span><span>)</span><span>;</span>
            o<span>.</span><span>HasQueryFilter</span><span>(</span>p <span>=></span> p<span>.</span>IsDelete <span>==</span> <span>false</span><span>)</span><span>;</span>
            o<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><ol start="4">
<li>启动配置efcore并且插入对应的数据</li>
</ol>
<p>在<code>Program</code>的<code>Main</code>函数下添加如下代码</p>
<div><pre><code><span>class</span> <span>Program</span>
<span>{</span>
    <span>static</span> <span><span>void</span></span> <span>Main</span><span>(</span><span><span>string</span><span>[</span><span>]</span></span> args<span>)</span>
    <span>{</span>
        <span>IServiceCollection</span> services <span>=</span> <span>new</span> <span>ServiceCollection</span><span>(</span><span>)</span><span>;</span>
        services<span>.</span><span>AddLogging</span><span>(</span><span>)</span><span>;</span>
        services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>o <span>=></span> o<span>.</span><span>UseSqlServer</span><span>(</span><span>"Data Source=localhost;Initial Catalog=EFCoreShardingDB;Integrated Security=True;"</span><span>)</span><span>)</span><span>;</span>
        <span><span>var</span></span> buildServiceProvider <span>=</span> services<span>.</span><span>BuildServiceProvider</span><span>(</span><span>)</span><span>;</span>
        <span>using</span> <span>(</span><span><span>var</span></span> scope <span>=</span> buildServiceProvider<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> myDbContext <span>=</span> scope<span>.</span>ServiceProvider<span>.</span><span><span>GetService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>//如果不存在就创建数据库和对应的数据库表</span>
            myDbContext<span>.</span>Database<span>.</span><span>EnsureCreated</span><span>(</span><span>)</span><span>;</span>

            <span><span>var</span></span> now <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>1</span><span>,</span><span>1</span><span>)</span><span>;</span>
            <span><span>var</span></span> orders <span>=</span> Enumerable<span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span>10</span><span>)</span><span>.</span><span>Select</span><span>(</span><span>(</span>o<span>,</span>i<span>)</span><span>=></span><span>new</span> <span>Order</span><span>(</span><span>)</span>
            <span>{</span>
                Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                CreateTime <span>=</span> now<span>.</span><span>AddDays</span><span>(</span>i<span>)</span><span>,</span>
                Payer <span>=</span> <span><span>$"用户:</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                Money <span>=</span> i<span>*</span><span>100</span><span>,</span>
                IsDelete <span>=</span> <span>false</span>
            <span>}</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
            myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div><div><p>提示</p>
<ol>
<li>这边我们采用的是<code>myDbContext.Database.EnsureCreated();</code>方法可以保证第一次创建对应的表和库。</li>
<li>并不是所有的efcore都需要按我这种写法,具体按您自己的原先的使用即可。</li>
<li>程序运行后可以看到数据库和表被创建并且数据被插入到对应的数据库里面了。</li>
</ol>
</div>
<h2 id="efcore升级到sharding-core"> efcore升级到sharding-core</h2>
<p>目前efcore的使用是单表单库的和实体对象是一对一的，我们将对此进行升级，添加sharding-core的支持，目前我们这边有两种方式可以配置<code>Order</code>支持分表分库：</p>
<h3 id="添加sharding-core包"> 添加sharding-core包</h3>
<div><pre><code>dotnet <span>add</span> package ShardingCore --version <span>5.3</span>.1.19
</code></pre>
<div><span>1</span><br></div></div><div><p>提示</p>
<p>根据项目自己选择sharding-core 2.x/3.x/5.x......的最新版本.</p>
</div>
<h3 id="删除掉原先的数据库"> 删除掉原先的数据库</h3>
<p>因为目前还没有涉及到code-first的用法所以目前我们先对其进行数据库的重建</p>
<h3 id="虚拟路由配置-推荐"> 虚拟路由配置(推荐)</h3>
<p>首先我们针对当前已有的项目进行<code>Order</code>分表的配置,路由规则订单按Id取模</p>
<ol>
<li>创建分表路由<code>OrderVirtualTableRoute</code></li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 创建虚拟路由</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
<span>{</span>
    <span>public</span> <span>OrderVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
    <span>{</span>
    <span>}</span>

    <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
    <span>{</span>
        builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        builder<span>.</span><span>AutoCreateTable</span><span>(</span><span>null</span><span>)</span><span>;</span>
        builder<span>.</span><span>TableSeparator</span><span>(</span><span>"_"</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><p>提示</p>
<ol>
<li><code>ShardingProperty</code>必须指定,表示具体按什么字段进行分表</li>
<li><code>AutoCreateTable</code>可选,表示是否需要在<strong>启动</strong>的时候建表:null表示根据全局配置,true:表示需要,false:表示不需要,默认null</li>
<li><code>TableSeparator</code>可选,表示分表后缀和虚拟表名之间的分隔连接符,默认<code>_</code></li>
<li><code>AbstractSimpleShardingModKeyStringVirtualTableRoute&lt;Order&gt;</code>由sharding-core提供的默认取模分表规则,其中2代表分表后尾巴有两位,3表示按3取模所以后缀为:00,01,02。因为最多2位所以可以最多到99,如果需要了解更多路由<a href="/sharding-core-doc/pages/defaultroute">默认路由</a></li>
</ol>
</div>
<h3 id="接口特性配置"> 接口特性配置</h3>
<p>除了路由配置您还可以使用接口和特性来实现</p>
<ol>
<li>让订单<code>Order</code>继承<code>IShardingTable</code></li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 订单表</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>Order</span><span>:</span><span><span>IShardingTable</span></span>
<span>{</span>
  <span>//.....</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><ol start="2">
<li>对<code>Order</code>需要分表的字段进行分表字段特性添加(仅支持一个分表字段)</li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 订单表</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>Order</span><span>:</span><span><span>IShardingTable</span></span>
<span>{</span>
  <span>/// &lt;summary></span>
  <span>/// 订单Id</span>
  <span>/// &lt;/summary></span>
  <span>[</span>ShardingTableKey<span>]</span>
  <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
  <span>//.....</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><ol start="3">
<li>创建分表路由<code>OrderVirtualTableRoute</code></li>
</ol>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 创建虚拟路由</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
<span>{</span>
    <span>public</span> <span>OrderVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
    <span>{</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><div><p>提示</p>
<ol>
<li><code>ShardingTableKey</code>特性表示对应的属性是需要被分表的字段,如：<code>Order</code>对象通过<code>Id</code>属性来进行分表</li>
<li>按接口+特性分表我们发现虚拟路由里面将不需要配置对应的方法<code>Configure</code></li>
<li>推荐使用第一种路由处配置对应的分表信息</li>
</ol>
</div>
<h3 id="配置dbcontext"> 配置dbcontext</h3>
<p>替换<code>MyDbContext</code>的父类</p>
<div><pre><code><span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
<span>{</span>
    <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span><span>:</span><span>base</span><span>(</span>options<span>)</span>
    <span>{</span>
        
    <span>}</span>
    <span>//....</span>
    <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><div><p>提示</p>
<ol>
<li><code>AbstractShardingDbContext</code>是系统默认实现了<code>IShardingDbContext</code>的抽象类,你也可以自行实现</li>
<li><code>IShardingTableDbContext</code>继承该接口的<code>DbContext</code>表示需要实现分表功能,如果您只需要分库那么可以不继承该对象</li>
</ol>
</div>
<h2 id="启动配置"> 启动配置</h2>
<p>介绍完两种配置后下面我们开始对程序进行</p>
<p>目前sharding-core支持两种配置方式,两种配置方式一样</p>
<ol>
<li>通过<code>services.AddShardingDbContext&lt;MyDbContext&gt;()</code>,</li>
<li>通过在原先的配置<code>services.AddDbContext&lt;MyDbContext&gt;()</code>后追加新的配置<code>services.AddShardingConfigure&lt;MyDbContext&gt;()</code>,</li>
</ol>
<div><p>提示</p>
<ol>
<li>两种配置方式一样,第一种是对第二种的封装而已,具体使用那种都可以按自己的需要</li>
<li>原<code>AddDbContext</code>需要添加配置<code>UseSharding&lt;MyDbContext&gt;()</code></li>
</ol>
</div>
<div><pre><code><span>class</span> <span>Program</span>
<span>{</span>
    <span>static</span> <span><span>void</span></span> <span>Main</span><span>(</span><span><span>string</span><span>[</span><span>]</span></span> args<span>)</span>
    <span>{</span>
        <span>IServiceCollection</span> services <span>=</span> <span>new</span> <span>ServiceCollection</span><span>(</span><span>)</span><span>;</span>
        services<span>.</span><span>AddLogging</span><span>(</span><span>)</span><span>;</span>
        <span>//原来的dbcontext配置</span>
        services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>o <span>=></span>
            o<span>.</span><span>UseSqlServer</span><span>(</span><span>"Data Source=localhost;Initial Catalog=EFCoreShardingDB;Integrated Security=True;"</span><span>)</span>
                <span>.</span><span><span>UseSharding</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>//需要添加</span>
            <span>)</span><span>;</span>
        <span>//额外添加分片配置</span>
        services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
            <span>{</span>
                builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>Begin</span><span>(</span>o <span>=></span>
            <span>{</span>
                o<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                o<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>AddShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
            <span>{</span>
                builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>AddDefaultDataSource</span><span>(</span>Guid<span>.</span><span>NewGuid</span><span>(</span><span>)</span><span>.</span><span>ToString</span><span>(</span><span>"n"</span><span>)</span><span>,</span>
                <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDB;Integrated Security=True;"</span><span>)</span>
            <span>.</span><span>AddShardingTableRoute</span><span>(</span>op <span>=></span>
            <span>{</span>
                op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>End</span><span>(</span><span>)</span><span>;</span>

        <span><span>var</span></span> buildServiceProvider <span>=</span> services<span>.</span><span>BuildServiceProvider</span><span>(</span><span>)</span><span>;</span>
        <span>//启动必备</span>
        buildServiceProvider<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>using</span> <span>(</span><span><span>var</span></span> scope <span>=</span> buildServiceProvider<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> myDbContext <span>=</span> scope<span>.</span>ServiceProvider<span>.</span><span><span>GetService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>//如果不存在就创建数据库和对应的数据库表</span>
            <span>//myDbContext.Database.EnsureCreated();//注释掉不然会创建虚拟表，虚拟表其实没什么用</span>

            <span><span>var</span></span> now <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>1</span><span>,</span><span>1</span><span>)</span><span>;</span>
            <span><span>var</span></span> orders <span>=</span> Enumerable<span>.</span><span>Range</span><span>(</span><span>0</span><span>,</span><span>10</span><span>)</span><span>.</span><span>Select</span><span>(</span><span>(</span>o<span>,</span>i<span>)</span><span>=></span><span>new</span> <span>Order</span><span>(</span><span>)</span>
            <span>{</span>
                Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                CreateTime <span>=</span> now<span>.</span><span>AddDays</span><span>(</span>i<span>)</span><span>,</span>
                Payer <span>=</span> <span><span>$"用户:</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                Money <span>=</span> i<span>*</span><span>100</span><span>,</span>
                IsDelete <span>=</span> <span>false</span>
            <span>}</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
            myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br></div></div><p>启动项目后我们可以看到程序会自动创建数据库和表结构，并且会按照我们设定的规则进行取模插入,并且逻辑表名<code>Order</code>将不会存在于数据库</p>
<div><p>警告</p>
<p>！！！如果您使用第二种配置,那么请对<code>services.AddDbContext&lt;MyDbContext&gt;()</code>配置内部使用的数据库连接字符串和后续的<code>AddDefaultDataSource</code>中添加的字符串一致不然会导致无法使用事务。</p>
<p>！！！如果您使用第二种配置,那么请对<code>services.AddDbContext&lt;MyDbContext&gt;()</code>配置内部使用的数据库连接字符串和后续的<code>AddDefaultDataSource</code>中添加的字符串一致不然会导致无法使用事务。</p>
<p>！！！如果您使用第二种配置,那么请对<code>services.AddDbContext&lt;MyDbContext&gt;()</code>配置内部使用的数据库连接字符串和后续的<code>AddDefaultDataSource</code>中添加的字符串一致不然会导致无法使用事务。</p>
</div>
<div><p>提示</p>
<ol>
<li>如果程序无法启动请确保一下几点，确认是否已经注入原生的efcore的DbContext,并且在原生的后续对DbContextOptions进行了<code>UseSharding&lt;MyDbContext&gt;()</code>配置</li>
<li>是否配置了额外分片<code>AddShardingConfigure</code>(第一种配置可以忽略)，是否创建了通过字符串委托和链接委托</li>
<li>default data source 的连接字符串是否和默认dbcontext创建的一致</li>
<li>是否添加了分表路由<code>AddShardingTableRoute(op =&gt;{op.AddShardingTableRoute&lt;OrderVirtualTableRoute&gt;();})</code></li>
<li>是否启动了分表启动器<code>buildServiceProvider.GetRequiredService&lt;IShardingBootstrapper&gt;().Start();</code></li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>x.5升级到x.6指南</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide-upgrade-5-6/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide-upgrade-5-6/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">x.5升级到x.6指南</source>
      <category>x.5升级到x.6指南</category>
      <pubDate>Wed, 06 Jul 2022 04:55:30 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="说明"> 说明</h2>
<p>如果您目前是处于比较低的版本建议一步一步升级上来,目前而言x.6版本有着很大的一个变动,基本上对于很多用户而言使用上会有差异</p>
<h2 id="优点"> 优点</h2>
<ul>
<li>对于原先的所有<code>ShardingCore</code>的版本是通过静态方法<code>ShardingContaner</code>来调用的，导致程序整个生命周期只有一个配置项,并且是静态的,就会导致系统对于同一个<code>DbContext</code>类型是没办法采用多种配置手段的,而且对于code-first而言的使用体验上也是欠佳的,而新版本将其整个框架只和一个分片运行上下文关联<code>IShardingRuntimeContext</code>而不是原先的<code>ShardingContaner</code></li>
</ul>
<h2 id="注意点"> 注意点</h2>
<ul>
<li>6版本将不在依赖DbContextType,所以所有的原先依赖注入的泛型方法全部失效,并且无法注入，取而代之的是<code>IShardingRuntimeContext</code>,可以使用依赖注入来注入,也可以通过dbcontext获取,更可以用户赋值给静态属性,完全由用户定义</li>
<li>之前所有的依赖注入获取的东西将全部由<code>IShardingRuntimeContext</code>提供</li>
<li>因为整个<code>efcore</code>在<code>ShardingCore</code>中仅依赖<code>IShardingRuntimeContext</code>,所以不同<code>IShardingRuntimeContext</code>对efcore而言就是不同的配置,所以目前移除掉多配置(多租户模式),用户可以自行实现。</li>
<li>原先Migrations迁移操作需要新建一个控制台程序,并且迁移后的更新数据库不支持分库数据库,所以为了用户的使用体验,进行了优化兼容升级</li>
<li>原先的设计虚拟表，虚拟表管理者被移除,直接使用路由管理者管理路由,移除了物理表,虚拟表,虚拟表管理者这个概念</li>
<li>启动后创建分表分库将由原先的配置改成手动调用,这样可以自己选择符合的实际</li>
<li>默认使用efcore将不在依赖整个启动器,只需要依赖轻量级的上下文即可</li>
</ul>
<h2 id="原先startup"> 原先startup</h2>
<p>x.4.x.x-x.5.x.x版本</p>
<div><pre><code>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>ShardingDefaultDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>AddEntityConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    <span>//如果您使用code-first建议选择false</span>
                    op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    <span>//如果您使用code-first建议修改为fsle</span>
                    op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                    <span>//当无法获取路由时会返回默认值而不是报错</span>
                    op<span>.</span>ThrowIfQueryRouteNotMatch <span>=</span> <span>false</span><span>;</span>
                    <span>//这边设置了如果AddConfig没设置就是用这边的</span>
                    <span>//op.UseShardingQuery((conStr, builder) =></span>
                    <span>//{</span>
                    <span>//    builder.UseSqlServer(conStr).UseLoggerFactory(efLogger);</span>
                    <span>//});</span>
                    <span>//op.UseShardingTransaction((connection, builder) =></span>
                    <span>//{</span>
                    <span>//    builder.UseSqlServer(connection).UseLoggerFactory(efLogger);</span>
                    <span>//});</span>
                    op<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>OrderAreaShardingVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserSalaryVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderCreateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogDayVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogWeekDateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogWeekTimeLongVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogYearDateTimeVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogMonthLongvirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogYearLongVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModIntVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogDayLongVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>MultiShardingOrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>

                <span>}</span><span>)</span>
                <span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>ConfigId<span>=</span><span>"c1"</span><span>;</span>
                    <span>//op.Priority = 1;</span>

                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>

                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"A"</span><span>,</span>
                        <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBA;Integrated Security=True;"</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddExtraDataSource</span><span>(</span>sp <span>=></span>
                    <span>{</span>
                        <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span> <span>"B"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;"</span> <span>}</span><span>,</span>
                        <span>{</span> <span>"C"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBC;Integrated Security=True;"</span> <span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddReadWriteSeparation</span><span>(</span>sp <span>=></span>
                    <span>{</span>
                        <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> IEnumerable<span>&lt;</span><span>string</span><span>></span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"A"</span><span>,</span> <span>new</span> <span>HashSet<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
                            <span>{</span>
                                <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;"</span>
                            <span>}</span>
                        <span>}</span>
                    <span>}</span><span>;</span>
                    <span>}</span><span>,</span> ReadStrategyEnum<span>.</span>Loop<span>,</span> <span>defaultEnable</span><span>:</span> <span>false</span><span>,</span> <span>readConnStringGetStrategy</span><span>:</span> ReadConnStringGetStrategyEnum<span>.</span>LatestEveryTime<span>)</span><span>;</span>
                    op<span>.</span><span>ReplaceTableEnsureManager</span><span>(</span>sp <span>=></span> <span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>ShardingDefaultDbContext<span>></span></span><span>(</span><span>)</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>



                <span>//必须且必须在调用这个方法后才可以使用dbcontext</span>
                app<span>.</span>ApplictaionServices<span>.</span><span><span>GetService</span><span><span>&lt;</span>IShardingBootStrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br></div></div><h2 id="现在的startup"> 现在的startup</h2>
<p>x.6.x.x+</p>
<div><pre><code>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>ShardingDefaultDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>UseRouteConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>OrderAreaShardingVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserSalaryVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderCreateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogDayVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogWeekDateTimeVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogWeekTimeLongVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogYearDateTimeVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogMonthLongvirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogYearLongVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModIntVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>LogDayLongVirtualRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>MultiShardingOrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>

                <span>}</span><span>)</span>
                <span>.</span><span>UseConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    <span>//当无法获取路由时会返回默认值而不是报错</span>
                    op<span>.</span>ThrowIfQueryRouteNotMatch <span>=</span> <span>false</span><span>;</span>
                    <span>//忽略建表错误compensate table和table creator</span>
                    op<span>.</span>IgnoreCreateTableError <span>=</span> <span>true</span><span>;</span>
                    <span>//迁移时使用的并行线程数(分库有效)defaultShardingDbContext.Database.Migrate()</span>
                    op<span>.</span>MigrationParallelCount <span>=</span> Environment<span>.</span>ProcessorCount<span>;</span>
                    <span>//补偿表创建并行线程数 调用UseAutoTryCompensateTable有效</span>
                    op<span>.</span>CompensateTableParallelCount <span>=</span> Environment<span>.</span>ProcessorCount<span>;</span>
                    <span>//最大连接数限制</span>
                    op<span>.</span>MaxQueryConnectionsLimit <span>=</span> Environment<span>.</span>ProcessorCount<span>;</span>
                    <span>//链接模式系统默认</span>
                    op<span>.</span>ConnectionMode <span>=</span> ConnectionModeEnum<span>.</span>SYSTEM_AUTO<span>;</span>
                    <span>//如何通过字符串查询创建DbContext</span>
                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    <span>//如何通过事务创建DbContext</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    <span>//添加默认数据源</span>
                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"A"</span><span>,</span>
                        <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBA;Integrated Security=True;"</span><span>)</span><span>;</span>
                    <span>//添加额外数据源</span>
                    op<span>.</span><span>AddExtraDataSource</span><span>(</span>sp <span>=></span>
                    <span>{</span>
                        <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span> <span>"B"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;"</span> <span>}</span><span>,</span>
                        <span>{</span> <span>"C"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBC;Integrated Security=True;"</span> <span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    <span>//添加读写分离</span>
                    op<span>.</span><span>AddReadWriteSeparation</span><span>(</span>sp <span>=></span>
                    <span>{</span>
                        <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> IEnumerable<span>&lt;</span><span>string</span><span>></span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"A"</span><span>,</span> <span>new</span> <span>HashSet<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
                            <span>{</span>
                                <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;"</span>
                            <span>}</span>
                        <span>}</span>
                    <span>}</span><span>;</span>
                    <span>}</span><span>,</span> ReadStrategyEnum<span>.</span>Loop<span>,</span> <span>defaultEnable</span><span>:</span> <span>false</span><span>,</span> <span>readConnStringGetStrategy</span><span>:</span> ReadConnStringGetStrategyEnum<span>.</span>LatestEveryTime<span>)</span><span>;</span>
                <span>}</span><span>)</span>
                <span>.</span><span><span>ReplaceService</span><span><span>&lt;</span>ITableEnsureManager<span>,</span>SqlServerTableEnsureManager<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>AddShardingCore</span><span>(</span><span>)</span><span>;</span>




            <span>//启动ShardingCore创建表任务(不调用也可以使用ShardingCore)</span>
            <span>//不调用会导致定时任务不会开启</span>
            app<span>.</span>ApplictaionServices<span>.</span><span>UseAutoShardingCreate</span><span>(</span><span>)</span><span>;</span>
            <span>//启动进行表补偿(不调用也可以使用ShardingCore)</span>
            app<span>.</span>ApplictaionServices<span>.</span><span>UseAutoTryCompensateTable</span><span>(</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br></div></div><h2 id="区别"> 区别</h2>
<table>
<thead>
<tr>
<th>功能</th>
<th>说明</th>
<th>x.5</th>
<th>x.6</th>
</tr>
</thead>
<tbody>
<tr>
<td>CreateShardingTableOnStart</td>
<td>启动创建分表</td>
<td>√</td>
<td>UseAutoTryCompensateTable</td>
</tr>
<tr>
<td>EnsureCreatedWithOutShardingTable</td>
<td>创建库和非分表的表</td>
<td>√</td>
<td>UseAutoTryCompensateTable</td>
</tr>
<tr>
<td>CreateDataBaseOnlyOnStart</td>
<td>启动仅创建库</td>
<td>√</td>
<td>UseAutoTryCompensateTable</td>
</tr>
<tr>
<td>IgnoreCreateTableError</td>
<td>忽略建表错误</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>ThrowIfQueryRouteNotMatch</td>
<td>无法匹配路由报错</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>ConfigId</td>
<td>配置id</td>
<td>√</td>
<td>-</td>
</tr>
<tr>
<td>Priority</td>
<td>配置优先级</td>
<td>√</td>
<td>-</td>
</tr>
<tr>
<td>MaxQueryConnectionsLimit</td>
<td>最大连接数</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>ConnectionMode</td>
<td>默认链接模式</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>AddShardingTableRoute</td>
<td>添加分表路由</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>AddShardingDataSourceRoute</td>
<td>添加分库路由</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>MigrationParallelCount</td>
<td>迁移并行数</td>
<td>-</td>
<td>√</td>
</tr>
<tr>
<td>CompensateTableParallelCount</td>
<td>补偿表并行数</td>
<td>-</td>
<td>√</td>
</tr>
<tr>
<td>UseShardingQuery</td>
<td>连接字符串创建DbContextOptions</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>UseShardingTransaction</td>
<td>连接创建DbContextOptions</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>AddDefaultDataSource</td>
<td>默认数据源</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>AddExtraDataSource</td>
<td>额外数据源</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>AddReadWriteSeparation</td>
<td>读写分离</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>ReplaceTableEnsureManager</td>
<td>替换表确认</td>
<td>√</td>
<td>使用ReplaceService</td>
</tr>
<tr>
<td>IShardingBootStrapper.Start()</td>
<td>启动ShardingCore</td>
<td>√</td>
<td>-</td>
</tr>
<tr>
<td>UseAutoShardingCreate</td>
<td>启动定时任务建表</td>
<td>包含在Start</td>
<td>√</td>
</tr>
<tr>
<td>UseAutoTryCompensateTable</td>
<td>补偿表</td>
<td>√</td>
<td>√</td>
</tr>
</tbody>
</table>
<p><strong>总结</strong>
对于AspNetCore的升级迁移其实目前来看并不算很大</p>
<ul>
<li>1.移除了多配置,因为目前配置随着<code>IShardingRuntimeContext</code>进行整个DbContext的贯穿所以多配置可以用户自定义</li>
<li>2.依赖注入全部不能使用,之前所有的依赖注入将全部通过<code>IShardingRuntimeContext</code>获取,
<code>IShardingRuntimeContext</code>的内部依赖注入如果非应用程序依赖注入将无法获取应用本身的注入服务,<code>IShardingRuntimeContext</code>如果按上述注入那么可以依赖注入获取,如果静态注入那么可以通过静态属性获取,当然也可以通过DbContext获取</li>
<li>3.ShardingContainer移除自行实现</li>
<li>4.迁移默认支持分库,并且不再需要新建控制台和<code>DesginTimeFactory</code>来实现</li>
<li>5.所有的参数配置从<code>AddEntityConfig</code>/<code>UseRouteConfig</code>迁移到了 <code>AddConfig</code>/<code>UseConfig</code>处</li>
<li>6.所有的ShardingCore提供的泛型接口全部转成非泛型接口,因为<code>IShardingRuntimeContext</code>本身和<code>DbContext</code>类型并没有太多关系</li>
<li>7.移除<code>ShardingContainer</code>静态方法自行处理</li>
<li>8.移除<code>IVirtualDataSourceManager</code>本身默认移除静态方式所以不再支持多配置,用户可以通过自定义多个<code>IShardingRuntimeContext</code>来实现多配置</li>
<li>9.移除<code>IDataSource</code>的路由功能,拆分到<code>IDataSourceRouteManager</code>里面</li>
<li>10.移除<code>IVirtualTableManager</code>由于之前架构设计过于复杂导致使用起来很复杂并且概念很多,这次索性直接移除虚拟表概念直接由路由提供,可以通过<code>ITableRouteManager</code>来代替使用</li>
<li>11.移除<code>IVirtualTable</code>概念</li>
<li>12.移除<code>IPhysicTable</code>概念,表信息由<code>IEntityMetadataManager</code>的<code>EntityMetadata</code>提供</li>
<li>13.<code>VirtualTableName</code>概念改成<code>LogicTableName</code>就是原先的未分表的表名</li>
<li>14.如果你是abp或者其他自定义的DbContext需要实现的接口GetDbContext参数进行了改变由原先的bool类型isParallelQuery变成了创建生成枚举</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>快速上手老鸟</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/quick-start-old-bird/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/quick-start-old-bird/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">快速上手老鸟</source>
      <category>使用指南</category>
      <pubDate>Fri, 17 Dec 2021 00:57:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次demo源码：<a href="https://github.com/xuejmnet/ShardingCoreDocDemo/tree/main/EFCoreSharding" target="_blank" rel="noopener noreferrer">EFCoreSharding</a></p>
<h2 id="快速开始"> 快速开始</h2>
<p>5步实现按月分表,且支持自动化建表建库</p>
<h3 id="第一步安装依赖"> 第一步安装依赖</h3>
<p><code>ShardingCore</code>版本表现形式为a.b.c.d,其中a表示<code>efcore</code>的版本号,b表示<code>ShardingCore</code>的主版本号,c表示<code>ShardingCore</code>次级版本号,d表示<code>ShardingCore</code>的修订版本号</p>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># use sqlserver</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
<span>#  use mysql</span>
<span>#PM> Install-Package Pomelo.EntityFrameworkCore.MySql</span>
<span># use other database driver,if efcore support</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="第二步创建查询对象"> 第二步创建查询对象</h3>
<p>查询对象</p>
<div><pre><code>
    <span>/// &lt;summary></span>
    <span>/// order table</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>/// &lt;summary></span>
        <span>/// order Id</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// payer id</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// pay money cent</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// area</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// order status</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// CreationTime</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div><h3 id="第三步创建dbcontext"> 第三步创建dbcontext</h3>
<p>dbcontext <code>AbstractShardingDbContext</code>和<code>IShardingTableDbContext</code>如果你是普通的DbContext那么就继承<code>AbstractShardingDbContext</code>需要分表就实现<code>IShardingTableDbContext</code>,如果只有分库可以不实现<code>IShardingTableDbContext</code>接口</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// empty impl if use sharding table</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><h3 id="第四步添加分表路由"> 第四步添加分表路由</h3>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 创建虚拟路由</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
<span>{</span>
    <span>public</span> <span>OrderVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
    <span>{</span>
    <span>}</span>

    <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
    <span>{</span>
        builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        builder<span>.</span><span>AutoCreateTable</span><span>(</span><span>null</span><span>)</span><span>;</span>
        builder<span>.</span><span>TableSeparator</span><span>(</span><span>"_"</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><p>提示</p>
<ol>
<li><code>ShardingProperty</code>必须指定,表示具体按什么字段进行分表</li>
<li><code>AutoCreateTable</code>可选,表示是否需要在<strong>启动</strong>的时候建表:null表示根据全局配置,true:表示需要,false:表示不需要,默认null</li>
<li><code>TableSeparator</code>可选,表示分表后缀和虚拟表名之间的分隔连接符,默认<code>_</code></li>
<li><code>AbstractSimpleShardingModKeyStringVirtualTableRoute&lt;Order&gt;</code>由sharding-core提供的默认取模分表规则,其中2代表分表后尾巴有两位,3表示按3取模所以后缀为:00,01,02。因为最多2位所以可以最多到99,如果需要了解更多路由<a href="/sharding-core-doc/pages/defaultroute">默认路由</a></li>
</ol>
</div>
<h3 id="第五步配置启动项"> 第五步配置启动项</h3>
<p>无论你是何种数据库只需要修改<code>AddDefaultDataSource</code>里面的链接字符串 请不要修改委托内部的UseXXX参数 <code>conStr</code> and <code>connection</code></p>
<div><pre><code>
        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            <span>//额外添加分片配置</span>
            services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>AddEntityConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>ConfigId <span>=</span> <span>"c1"</span><span>;</span>
                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span>Guid<span>.</span><span>NewGuid</span><span>(</span><span>)</span><span>.</span><span>ToString</span><span>(</span><span>"n"</span><span>)</span><span>,</span>
                        <span>"Data Source=localhost;Initial Catalog=EFCoreShardingTableDB;Integrated Security=True;"</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>// it's importment don't forget it</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
            <span>// other configure....</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br></div></div><p>这样所有的配置就完成了你可以愉快地对Order表进行按月分表了</p>
<div><pre><code><span>[</span><span><span>Route</span><span><span>(</span><span>"api/[controller]"</span><span>)</span></span></span><span>]</span>
<span>public</span> <span>class</span> <span>ValuesController</span> <span>:</span> <span><span>Controller</span></span>
<span>{</span>
        <span>private</span> <span>readonly</span> <span>MyDbContext</span> _myDbContext<span>;</span>

        <span>public</span> <span>ValuesController</span><span>(</span><span>MyDbContext</span> myDbContext<span>)</span>
        <span>{</span>
            _myDbContext <span>=</span> myDbContext<span>;</span>
        <span>}</span>

        <span>[</span><span><span>HttpGet</span></span><span>]</span>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Get</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"2"</span><span>)</span><span>;</span>
            <span>return</span> <span>OK</span><span>(</span>order<span>)</span>
        <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><div><p>提示</p>
<ol>
<li>如果程序无法启动请确保一下几点，确认是否已经注入原生的efcore的DbContext,并且在原生的后续对DbContextOptions进行了<code>UseSharding&lt;MyDbContext&gt;()</code>配置</li>
<li>是否配置了额外分片<code>AddShardingConfigure</code>(第一种配置可以忽略)，是否创建了通过字符串委托和链接委托</li>
<li>default data source 的连接字符串是否和默认dbcontext创建的一致</li>
<li>是否添加了分表路由<code>op.AddShardingTableRoute&lt;OrderVirtualTableRoute&gt;();</code></li>
<li>是否启动了分表启动器<code>buildServiceProvider.GetRequiredService&lt;IShardingBootstrapper&gt;().Start();</code></li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>快速上手控制台</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/quick-start-console/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/quick-start-console/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">快速上手控制台</source>
      <category>使用指南</category>
      <pubDate>Wed, 06 Jul 2022 04:55:13 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次demo源码：<a href="https://github.com/xuejmnet/ShardingCoreDocDemo/tree/main/EFCoreSharding" target="_blank" rel="noopener noreferrer">EFCoreSharding</a></p>
<h2 id="快速开始"> 快速开始</h2>
<p>5步实现按月分表,且支持自动化建表建库</p>
<h3 id="第一步安装依赖"> 第一步安装依赖</h3>
<p><code>ShardingCore</code>版本表现形式为a.b.c.d,其中a表示<code>efcore</code>的版本号,b表示<code>ShardingCore</code>的主版本号,c表示<code>ShardingCore</code>次级版本号,d表示<code>ShardingCore</code>的修订版本号</p>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># use sqlserver</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
<span>#  use mysql</span>
<span>#PM> Install-Package Pomelo.EntityFrameworkCore.MySql</span>
<span># use other database driver,if efcore support</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="第二步创建查询对象"> 第二步创建查询对象</h3>
<p>查询对象</p>
<div><pre><code>
    <span>/// &lt;summary></span>
    <span>/// order table</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>/// &lt;summary></span>
        <span>/// order Id</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// payer id</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// pay money cent</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// area</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// order status</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// CreationTime</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div><h3 id="第三步创建dbcontext"> 第三步创建dbcontext</h3>
<p>dbcontext <code>AbstractShardingDbContext</code>和<code>IShardingTableDbContext</code>如果你是普通的DbContext那么就继承<code>AbstractShardingDbContext</code>需要分表就实现<code>IShardingTableDbContext</code>,如果只有分库可以不实现<code>IShardingTableDbContext</code>接口</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// empty impl if use sharding table</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><h3 id="第四步添加分表路由"> 第四步添加分表路由</h3>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 创建虚拟路由</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
<span>{</span>
    <span>public</span> <span>OrderVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
    <span>{</span>
    <span>}</span>

    <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
    <span>{</span>
        builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        builder<span>.</span><span>AutoCreateTable</span><span>(</span><span>null</span><span>)</span><span>;</span>
        builder<span>.</span><span>TableSeparator</span><span>(</span><span>"_"</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><p>提示</p>
<ol>
<li><code>ShardingProperty</code>必须指定,表示具体按什么字段进行分表</li>
<li><code>AutoCreateTable</code>可选,表示是否需要在<strong>启动</strong>的时候建表:null表示根据全局配置,true:表示需要,false:表示不需要,默认null</li>
<li><code>TableSeparator</code>可选,表示分表后缀和虚拟表名之间的分隔连接符,默认<code>_</code></li>
<li><code>AbstractSimpleShardingModKeyStringVirtualTableRoute&lt;Order&gt;</code>由sharding-core提供的默认取模分表规则,其中2代表分表后尾巴有两位,3表示按3取模所以后缀为:00,01,02。因为最多2位所以可以最多到99,如果需要了解更多路由<a href="/sharding-core-doc/pages/defaultroute">默认路由</a></li>
</ol>
</div>
<h3 id="第五步配置启动项"> 第五步配置启动项</h3>
<p>无论你是何种数据库只需要修改<code>AddDefaultDataSource</code>里面的链接字符串 请不要修改委托内部的UseXXX参数 <code>conStr</code> and <code>connection</code></p>
<div><pre><code>
        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            <span>//添加分片配置</span>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>AddEntityConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>ConfigId <span>=</span> <span>"c1"</span><span>;</span>
                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span>Guid<span>.</span><span>NewGuid</span><span>(</span><span>)</span><span>.</span><span>ToString</span><span>(</span><span>"n"</span><span>)</span><span>,</span>
                        <span>"Data Source=localhost;Initial Catalog=EFCoreShardingTableDB;Integrated Security=True;"</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>// it's importment don't forget it</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
            <span>// other configure....</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br></div></div><p>这样所有的配置就完成了你可以愉快地对Order表进行按月分表了</p>
<div><pre><code><span>[</span><span><span>Route</span><span><span>(</span><span>"api/[controller]"</span><span>)</span></span></span><span>]</span>
<span>public</span> <span>class</span> <span>ValuesController</span> <span>:</span> <span><span>Controller</span></span>
<span>{</span>
        <span>private</span> <span>readonly</span> <span>MyDbContext</span> _myDbContext<span>;</span>

        <span>public</span> <span>ValuesController</span><span>(</span><span>MyDbContext</span> myDbContext<span>)</span>
        <span>{</span>
            _myDbContext <span>=</span> myDbContext<span>;</span>
        <span>}</span>

        <span>[</span><span><span>HttpGet</span></span><span>]</span>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Get</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"2"</span><span>)</span><span>;</span>
            <span>return</span> <span>OK</span><span>(</span>order<span>)</span>
        <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><div><p>提示</p>
<ol>
<li>如果程序无法启动请确保一下几点，确认是否已经注入原生的efcore的DbContext,并且在原生的后续对DbContextOptions进行了<code>UseSharding&lt;MyDbContext&gt;()</code>配置</li>
<li>目前<code>ShardingCore</code>提供了三种配置方式</li>
</ol>
<ul>
<li>1.默认配置</li>
</ul>
<div><pre><code>services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br></div></div><p>这个配置包含了<code>AddDbContext</code>+<code>AddShardingConfigure</code></p>
<ul>
<li>2.额外配置</li>
</ul>
<div><pre><code>  <span>//原来的dbcontext配置</span>
  services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>DIExtension<span>.</span>UseDefaultSharding<span>&lt;</span>MyDbContext<span>></span><span>)</span><span>;</span>
  <span>//额外添加分片配置</span>
  services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><ul>
<li>3.字符串配置适合单配置的情况下</li>
</ul>
<div><pre><code>  <span>//原来的dbcontext配置</span>
  services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>options<span>=></span>options<span>.</span><span>UseSqlServer</span><span>(</span><span>"连接字符串必须和AddConfig的DefaultDataSource一样"</span><span>)</span><span>.</span><span><span>UseSharding</span><span><span>&lt;</span>TodoAppDbContext<span>></span></span></span><span>(</span><span>)</span><span>)</span><span>;</span><span>//UseSharding&lt;TodoAppDbContext>()必须要配置</span>
  <span>//额外添加分片配置</span>
  services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><ol start="3">
<li>default data source 的连接字符串是否和默认dbcontext创建的一致</li>
<li>是否添加了分表路由<code>op.AddShardingTableRoute&lt;OrderVirtualTableRoute&gt;();</code></li>
<li>是否启动了分表启动器<code>buildServiceProvider.GetRequiredService&lt;IShardingBootstrapper&gt;().Start();</code></li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>重要</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/important/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/important/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">重要</source>
      <category>重要</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>警告</p>
<p>！！！升级如果不使用<code>app.ApplictaionServices.UseAutoShardingCreate()</code>将不会自动创建表任务请注意</p>
<p>！！！升级如果不使用<code>app.ApplictaionServices.UseAutoShardingCreate()</code>将不会自动创建表任务请注意</p>
<p>！！！升级如果不使用<code>app.ApplictaionServices.UseAutoShardingCreate()</code>将不会自动创建表任务请注意</p>
</div>
<h2 id="前言"> 前言</h2>
<p><code>ShardingCore</code>主旨是增加efcore，针对efcore的分片方面进行增强，并且不对efcore的业务代码进行侵入。不解决数据库层面的问题，编写复杂sql如果在sql层面是慢的那么<code>sharding-core</code>也是无能为力的.</p>
<h2 id="版本"> 版本</h2>
<p><code>ShardingCore</code>版本格式为a.b.c.d</p>
<ul>
<li><strong>a</strong>表示<code>efcore</code>的版本号</li>
<li><strong>b</strong>表示<code>ShardingCore</code>主要版本号</li>
<li><strong>c</strong>表示<code>ShardingCore</code>小版本号</li>
<li><strong>d</strong>表示<code>ShardingCore</code>修订版本号</li>
</ul>
<h2 id="常见问题"> 常见问题</h2>
<p>因为当前架构师在当前dbcontext作为壳运行,crud会创建真实的dbcontext依托在当前dbcontext上,所以当前dbcontext目前crud都是可以的没有问题,但是如果遇到需要获取track或者其他的一些处理就不应该在当前dbcontext上处理,应该通过内部的DbContextExecutor来获取内部的DbContext来进行处理</p>
<h2 id="dbcontext构造函数问题"> DbContext构造函数问题</h2>
<p>请不要再DbContext构造函数内部调用会让model提前确定的方法比如</p>
<div><pre><code>        public DefaultShardingDbContext(DbContextOptions&lt;DefaultShardingDbContext&gt; options) : base(options)
        {
            //切记不要在构造函数中使用会让模型提前创建的方法
            //ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking;
            //Database.SetCommandTimeout(30000);
        }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="损耗"> 损耗</h2>
<p>1.未分片对象查询,<code>ShardingCore</code>在针对未分片对象的查询上面进行了优化,单次的查询仅<code>0.005ms</code>损耗,性能为原生efcore的97%;
2.分片对象和原生efcore对象查询，在主键查询的情况下也就是只考虑<code>ShardingCore</code>损耗的情况下为单次<code>0.06ms</code>-<code>0.08ms</code>左右</p>
<p>当数据为瓶颈时分片后可以提高的性能是线性提升的,在数据库未成为读取数据库瓶颈时,整个查询两者差距不大</p>
<h2 id="缺点"> 缺点</h2>
<ul>
<li>本库的缺点是比较消耗链接，针对<code>dbconnection</code>的消耗比一般的链接要高，但是可以通过启动时候配置<code>MaxQueryConnectionsLimit</code>字段来限制单次查询的<code>dbconnection</code>的消耗，从而可以让用户可以进行控制连接数.</li>
<li>目前不支持分表对象的<code>Include</code>,也不建议你对分表对象进行include,如果你需要操作分表对象请选择join方式而不是include</li>
<li>三方批处理对象需要获取真实<code>dbcontext</code>后才可以支持</li>
<li>因为不支持<code>Include</code>所以没必要给sharding对象进行导航属性设置(不支持导航属性)</li>
</ul>
<h2 id="为什么不用union或者union-all"> 为什么不用union或者union all</h2>
<p>虽然union(all)在单表分表下面实现简单,支持的语句多但是性能随着表数量和表数据的增多性能逐渐下降更别说索引失效的场景,但是再多表join下面生成的sql将是不可控的，性能和索引将是一个大大的问题因为涉及到分表的多表不一定索引一直因为可能会出现数据偏向问题建立不同的所以结构导致索引失效不好优化、并且不支持分库等一系列问题</p>
<h3 id="查询为读写分离支持追踪"> 查询为读写分离支持追踪</h3>
<p>如果本次查询是读写分离无论走的什么链接都支持对应对象的追踪</p>
<h2 id="gethashcode"> GetHashCode</h2>
<p>c#的gethashcode并不能直接用来取模，因为c#的<code>GetHashCode</code>会在程序启动的生命周期内同一个字符串是一样的，但是如果程序关闭后在启动那么就会和之前的hashcode不一致,所以这边建议使用<code>sharding-core</code>提供的<code>ShardingCoreHelper.GetStringHashCode(shardingKeyStr)</code></p>
<h2 id="group-by"> Group By</h2>
<p>如果使用group by那么为了保证程序正常执行会在group by下判断如果没有order字段会将所有的select属性加上去，如果有order by那么必须和group by的select字段一样数目,如果group by 对对应属性进行了<code>avg</code>操作那么请对该属性同样进行<code>count</code>操作</p>
<h2 id="guid"> GUID</h2>
<p>如果您是sqlserver 并且在用guid排序那么为了和数据库guid排序一致请知悉,<code>sharding-core</code>默认会将guid转成sqlguid去比较来保证和数据库一致的排序表现,但是未提供<code>Nullable&lt;Guid&gt;</code>的排序正确判断,如果需要可自行实现,下面是一个案例,默认<code>ShardingCore</code>已处理<code>Guid</code>的情况</p>
<div><pre><code><span>/// &lt;summary></span>
<span>/// like this example</span>
<span>/// &lt;/summary></span>
<span>/// &lt;typeparam name="TShardingDbContext">&lt;/typeparam></span>
<span>public</span> <span>class</span> <span>SqlServerNullableGuidCSharpLanguageShardingComparer<span>&lt;</span>TShardingDbContext<span>></span></span><span>:</span><span><span>CSharpLanguageShardingComparer<span>&lt;</span>TShardingDbContext<span>></span></span></span> <span>where</span> <span>TShardingDbContext</span> <span>:</span> <span><span>DbContext</span><span>,</span> <span>IShardingDbContext</span></span>
<span>{</span>
        <span>public</span> <span>override</span> <span><span>int</span></span> <span>Compare</span><span>(</span><span>IComparable</span> x<span>,</span> <span>IComparable</span> y<span>,</span> <span><span>bool</span></span> asc<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>x <span>is</span> <span>XXType</span> xg <span>&amp;&amp;</span> y <span>is</span> <span>XXType</span> yg<span>)</span>
            <span>{</span>
                <span>return</span> <span>new</span> <span>XXFixedType</span><span>(</span>xg<span>)</span><span>.</span><span>SafeCompareToWith</span><span>(</span><span>new</span> <span>XXFixedType</span><span>(</span>yg<span>)</span><span>,</span> asc<span>)</span><span>;</span>
            <span>}</span>
            <span>return</span> <span>base</span><span>.</span><span>Compare</span><span>(</span>x<span>,</span> y<span>,</span> asc<span>)</span><span>;</span>
        <span>}</span>
<span>}</span>

<span>//configure</span>
<span>.</span><span>ReplaceShardingComparer</span><span>(</span>sp<span>=></span><span>new</span> <span>SqlServerNullableGuidCSharpLanguageShardingComparer<span>&lt;</span>DefaultShardingDbContext<span>></span></span><span>(</span><span>)</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p><strong>注意:如果您使用的框架不是本框架,那么请确认他的分表聚合是否是内存聚合,如果是内存聚合请确保他会有正确的guid排序在数据库和内存之间</strong></p>
<h2 id="自增id"> 自增Id</h2>
<p>如果您在efcore配置了整型为自增那么请不要对自增字段设置为sharding字段因为会导致分表数据没办法正确分表，因为自增字段只有在正确插入到数据库后才会知道具体的值，所以不可以吧自增字段设置为分表/分库字段</p>
<h2 id="性能优化-已经弃用表达式构建条件无需缓存"> 性能优化(已经弃用表达式构建条件无需缓存)</h2>
<p>如果您对程序的性能有要求建议您针对每个路由开启表达式缓存，并且自行实现多表判断表达式缓存，系统默认会在你启用路由表达式缓存后针对单个表达式比较进行缓存提高10倍编译性能</p>
<div><pre><code>
    public class SysUserSalaryVirtualTableRoute:AbstractShardingOperatorVirtualTableRoute&lt;SysUserSalary,int&gt;
    {
        //开启路由表达式缓存
        public override bool? EnableRouteParseCompileCache =&gt; true;

        //.....
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>如果您需要使用一下方法需要注意</p>
<h2 id="ensurecreated-建议使用migrate"> EnsureCreated (建议使用migrate)</h2>
<p><code>DbContext.Database.EnsureCreated()</code>如果您需要使用这个接口请自行实现<code>IMigrationsSqlGenerator</code></p>
<h2 id="时间分表"> 时间分表</h2>
<p>如果您是时间分表的那么请一定要阅读<a href="/sharding-core-doc/adv/pagination">高性能分页</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>快速上手AspNetCore</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/quick-start-aspnetcore/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/quick-start-aspnetcore/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">快速上手AspNetCore</source>
      <category>使用指南</category>
      <pubDate>Wed, 06 Jul 2022 04:55:13 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次demo源码：<a href="https://github.com/xuejmnet/ShardingCoreDocDemo/tree/main/EFCoreSharding" target="_blank" rel="noopener noreferrer">EFCoreSharding</a></p>
<h2 id="快速开始"> 快速开始</h2>
<p>5步实现按月分表,且支持自动化建表建库</p>
<h3 id="第一步安装依赖"> 第一步安装依赖</h3>
<p><code>ShardingCore</code>版本表现形式为a.b.c.d,其中a表示<code>efcore</code>的版本号,b表示<code>ShardingCore</code>的主版本号,c表示<code>ShardingCore</code>次级版本号,d表示<code>ShardingCore</code>的修订版本号</p>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># use sqlserver</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
<span>#  use mysql</span>
<span>#PM> Install-Package Pomelo.EntityFrameworkCore.MySql</span>
<span># use other database driver,if efcore support</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="第二步创建查询对象"> 第二步创建查询对象</h3>
<p>查询对象</p>
<div><pre><code>
    <span>/// &lt;summary></span>
    <span>/// order table</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>/// &lt;summary></span>
        <span>/// order Id</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// payer id</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// pay money cent</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// area</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// order status</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// CreationTime</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div><h3 id="第三步创建dbcontext"> 第三步创建dbcontext</h3>
<p>dbcontext <code>AbstractShardingDbContext</code>和<code>IShardingTableDbContext</code>如果你是普通的DbContext那么就继承<code>AbstractShardingDbContext</code>需要分表就实现<code>IShardingTableDbContext</code>,如果只有分库可以不实现<code>IShardingTableDbContext</code>接口</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// empty impl if use sharding table</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><h3 id="第四步添加分表路由"> 第四步添加分表路由</h3>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 创建虚拟路由</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
<span>{</span>
    <span>public</span> <span>OrderVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
    <span>{</span>
    <span>}</span>

    <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
    <span>{</span>
        builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        builder<span>.</span><span>AutoCreateTable</span><span>(</span><span>null</span><span>)</span><span>;</span>
        builder<span>.</span><span>TableSeparator</span><span>(</span><span>"_"</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><p>提示</p>
<ol>
<li><code>ShardingProperty</code>必须指定,表示具体按什么字段进行分表</li>
<li><code>AutoCreateTable</code>可选,表示是否需要在<strong>启动</strong>的时候建表:null表示根据全局配置,true:表示需要,false:表示不需要,默认null</li>
<li><code>TableSeparator</code>可选,表示分表后缀和虚拟表名之间的分隔连接符,默认<code>_</code></li>
<li><code>AbstractSimpleShardingModKeyStringVirtualTableRoute&lt;Order&gt;</code>由sharding-core提供的默认取模分表规则,其中2代表分表后尾巴有两位,3表示按3取模所以后缀为:00,01,02。因为最多2位所以可以最多到99,如果需要了解更多路由<a href="/sharding-core-doc/pages/defaultroute">默认路由</a></li>
</ol>
</div>
<h3 id="第五步配置启动项"> 第五步配置启动项</h3>
<p>无论你是何种数据库只需要修改<code>AddDefaultDataSource</code>里面的链接字符串 请不要修改委托内部的UseXXX参数 <code>conStr</code> and <code>connection</code></p>
<div><pre><code>
        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            <span>//添加分片配置</span>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>UseRouteConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddConfig</span><span>(</span><span>(</span>sp<span>,</span>op<span>)</span> <span>=></span>
                <span>{</span>
                    
                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span>Guid<span>.</span><span>NewGuid</span><span>(</span><span>)</span><span>.</span><span>ToString</span><span>(</span><span>"n"</span><span>)</span><span>,</span>
                        <span>"Data Source=localhost;Initial Catalog=EFCoreShardingTableDB;Integrated Security=True;"</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddShardingCore</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            
            <span>//not required, enable job auto create table 非必须 启用自动创建表的任务 </span>
            app<span>.</span>ApplicationServices<span>.</span><span>UseAutoShardingCreate</span><span>(</span><span>)</span><span>;</span>
            <span>//not required, enable check table missing and auto create,非必须  启动检查缺少的表并且创建</span>
            app<span>.</span>ApplicationServices<span>.</span><span>UseAutoTryCompensateTable</span><span>(</span><span>)</span><span>;</span>
            <span>// other configure....</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div><p>这样所有的配置就完成了你可以愉快地对Order表进行按月分表了</p>
<div><pre><code><span>[</span><span><span>Route</span><span><span>(</span><span>"api/[controller]"</span><span>)</span></span></span><span>]</span>
<span>public</span> <span>class</span> <span>ValuesController</span> <span>:</span> <span><span>Controller</span></span>
<span>{</span>
        <span>private</span> <span>readonly</span> <span>MyDbContext</span> _myDbContext<span>;</span>

        <span>public</span> <span>ValuesController</span><span>(</span><span>MyDbContext</span> myDbContext<span>)</span>
        <span>{</span>
            _myDbContext <span>=</span> myDbContext<span>;</span>
        <span>}</span>

        <span>[</span><span><span>HttpGet</span></span><span>]</span>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Get</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"2"</span><span>)</span><span>;</span>
            <span>return</span> <span>OK</span><span>(</span>order<span>)</span>
        <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><div><p>提示</p>
<ol>
<li>如果程序无法启动请确保一下几点，确认是否已经注入原生的efcore的DbContext,并且在原生的后续对DbContextOptions进行了<code>UseSharding&lt;MyDbContext&gt;()</code>配置</li>
<li>目前<code>ShardingCore</code>提供了三种配置方式</li>
</ol>
<ul>
<li>1.默认配置</li>
</ul>
<div><pre><code>services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br></div></div><p>这个配置包含了<code>AddDbContext</code>+<code>AddShardingConfigure</code></p>
<ul>
<li>2.额外配置</li>
</ul>
<div><pre><code>  <span>//原来的dbcontext配置</span>
  services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>ShardingCoreExtension<span>.</span>UseDefaultSharding<span>&lt;</span>MyDbContext<span>></span><span>)</span><span>;</span>
  <span>//额外添加分片配置</span>
  services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><ul>
<li>3.字符串配置适合单配置的情况下</li>
</ul>
<div><pre><code>  <span>//原来的dbcontext配置</span>
  services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>options<span>=></span>options<span>.</span><span>UseSqlServer</span><span>(</span><span>"连接字符串必须和AddConfig的DefaultDataSource一样"</span><span>)</span><span>.</span><span><span>UseSharding</span><span><span>&lt;</span>TodoAppDbContext<span>></span></span></span><span>(</span><span>)</span><span>)</span><span>;</span><span>//UseSharding&lt;TodoAppDbContext>()必须要配置</span>
  <span>//额外添加分片配置</span>
  services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><ol start="3">
<li>default data source 的连接字符串是否和默认dbcontext创建的一致</li>
<li>是否添加了分表路由<code>op.AddShardingTableRoute&lt;OrderVirtualTableRoute&gt;();</code></li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>快速上手</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/quick-start/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/quick-start/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">快速上手</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次demo源码：<a href="https://github.com/xuejmnet/ShardingCoreDocDemo/tree/main/EFCoreSharding" target="_blank" rel="noopener noreferrer">EFCoreSharding</a></p>
<h2 id="快速开始"> 快速开始</h2>
<p>5步实现按月分表,且支持自动化建表建库</p>
<h3 id="第一步安装依赖"> 第一步安装依赖</h3>
<p><code>ShardingCore</code>版本表现形式为a.b.c.d,其中a表示<code>efcore</code>的版本号,b表示<code>ShardingCore</code>的主版本号,c表示<code>ShardingCore</code>次级版本号,d表示<code>ShardingCore</code>的修订版本号</p>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># use sqlserver</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
<span>#  use mysql</span>
<span>#PM> Install-Package Pomelo.EntityFrameworkCore.MySql</span>
<span># use other database driver,if efcore support</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h3 id="第二步创建查询对象"> 第二步创建查询对象</h3>
<p>查询对象</p>
<div><pre><code>
    <span>/// &lt;summary></span>
    <span>/// order table</span>
    <span>/// &lt;/summary></span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>/// &lt;summary></span>
        <span>/// order Id</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// payer id</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// pay money cent</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// area</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// order status</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// CreationTime</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div><h3 id="第三步创建dbcontext"> 第三步创建dbcontext</h3>
<p>dbcontext <code>AbstractShardingDbContext</code>和<code>IShardingTableDbContext</code>如果你是普通的DbContext那么就继承<code>AbstractShardingDbContext</code>需要分表就实现<code>IShardingTableDbContext</code>,如果只有分库可以不实现<code>IShardingTableDbContext</code>接口</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
        <span>/// &lt;summary></span>
        <span>/// empty impl if use sharding table</span>
        <span>/// &lt;/summary></span>
        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br></div></div><h3 id="第四步添加分表路由"> 第四步添加分表路由</h3>
<div><pre><code><span>/// &lt;summary></span>
<span>/// 创建虚拟路由</span>
<span>/// &lt;/summary></span>
<span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
<span>{</span>
    <span>public</span> <span>OrderVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
    <span>{</span>
    <span>}</span>

    <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
    <span>{</span>
        builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        builder<span>.</span><span>AutoCreateTable</span><span>(</span><span>null</span><span>)</span><span>;</span>
        builder<span>.</span><span>TableSeparator</span><span>(</span><span>"_"</span><span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><div><p>提示</p>
<ol>
<li><code>ShardingProperty</code>必须指定,表示具体按什么字段进行分表</li>
<li><code>AutoCreateTable</code>可选,表示是否需要在<strong>启动</strong>的时候建表:null表示根据全局配置,true:表示需要,false:表示不需要,默认null</li>
<li><code>TableSeparator</code>可选,表示分表后缀和虚拟表名之间的分隔连接符,默认<code>_</code></li>
<li><code>AbstractSimpleShardingModKeyStringVirtualTableRoute&lt;Order&gt;</code>由sharding-core提供的默认取模分表规则,其中2代表分表后尾巴有两位,3表示按3取模所以后缀为:00,01,02。因为最多2位所以可以最多到99,如果需要了解更多路由<a href="/sharding-core-doc/pages/defaultroute">默认路由</a></li>
</ol>
</div>
<h3 id="第五步配置启动项"> 第五步配置启动项</h3>
<p>无论你是何种数据库只需要修改<code>AddDefaultDataSource</code>里面的链接字符串 请不要修改委托内部的UseXXX参数 <code>conStr</code> and <code>connection</code></p>
<div><pre><code>
        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            <span>//添加分片配置</span>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>AddEntityConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>conn<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conn<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>ConfigId <span>=</span> <span>"c1"</span><span>;</span>
                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span>Guid<span>.</span><span>NewGuid</span><span>(</span><span>)</span><span>.</span><span>ToString</span><span>(</span><span>"n"</span><span>)</span><span>,</span>
                        <span>"Data Source=localhost;Initial Catalog=EFCoreShardingTableDB;Integrated Security=True;"</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>// it's importment don't forget it</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
            <span>// other configure....</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br></div></div><p>这样所有的配置就完成了你可以愉快地对Order表进行按月分表了</p>
<div><pre><code><span>[</span><span><span>Route</span><span><span>(</span><span>"api/[controller]"</span><span>)</span></span></span><span>]</span>
<span>public</span> <span>class</span> <span>ValuesController</span> <span>:</span> <span><span>Controller</span></span>
<span>{</span>
        <span>private</span> <span>readonly</span> <span>MyDbContext</span> _myDbContext<span>;</span>

        <span>public</span> <span>ValuesController</span><span>(</span><span>MyDbContext</span> myDbContext<span>)</span>
        <span>{</span>
            _myDbContext <span>=</span> myDbContext<span>;</span>
        <span>}</span>

        <span>[</span><span><span>HttpGet</span></span><span>]</span>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Get</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"2"</span><span>)</span><span>;</span>
            <span>return</span> <span>OK</span><span>(</span>order<span>)</span>
        <span>}</span>
<span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br></div></div><div><p>提示</p>
<ol>
<li>如果程序无法启动请确保一下几点，确认是否已经注入原生的efcore的DbContext,并且在原生的后续对DbContextOptions进行了<code>UseSharding&lt;MyDbContext&gt;()</code>配置</li>
<li>目前<code>ShardingCore</code>提供了三种配置方式</li>
</ol>
<ul>
<li>1.默认配置</li>
</ul>
<div><pre><code>services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br></div></div><p>这个配置包含了<code>AddDbContext</code>+<code>AddShardingConfigure</code></p>
<ul>
<li>2.额外配置</li>
</ul>
<div><pre><code>  <span>//原来的dbcontext配置</span>
  services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>DIExtension<span>.</span>UseDefaultSharding<span>&lt;</span>MyDbContext<span>></span><span>)</span><span>;</span>
  <span>//额外添加分片配置</span>
  services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><ul>
<li>3.字符串配置适合单配置的情况下</li>
</ul>
<div><pre><code>  <span>//原来的dbcontext配置</span>
  services<span>.</span><span><span>AddDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span>options<span>=></span>options<span>.</span><span>UseSqlServer</span><span>(</span><span>"连接字符串必须和AddConfig的DefaultDataSource一样"</span><span>)</span><span>.</span><span><span>UseSharding</span><span><span>&lt;</span>TodoAppDbContext<span>></span></span></span><span>(</span><span>)</span><span>)</span><span>;</span><span>//UseSharding&lt;TodoAppDbContext>()必须要配置</span>
  <span>//额外添加分片配置</span>
  services<span>.</span><span><span>AddShardingConfigure</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><ol start="3">
<li>default data source 的连接字符串是否和默认dbcontext创建的一致</li>
<li>是否添加了分表路由<code>op.AddShardingTableRoute&lt;OrderVirtualTableRoute&gt;();</code></li>
<li>是否启动了分表启动器<code>buildServiceProvider.GetRequiredService&lt;IShardingBootstrapper&gt;().Start();</code></li>
</ol>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Custom Layout</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/layout/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/layout/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Custom Layout</source>
      <pubDate>Tue, 02 Nov 2021 08:39:31 GMT</pubDate>
      <content:encoded><![CDATA[<p>You can use slots with markdown and component support to custom page layout.</p>
<div><p>注意</p>
<p>This is just a demo, you should add styles according to your own needs.</p>


</div>
<template #page-top><p>Page top content</p>
</template><template #page-bottom><p>Page bottom content</p>
</template><template #content-top><p>Content top content</p>
</template><template #content-bottom><p>Content bottom content</p>
</template><template #navbar-start><p>Navbar start content</p>
</template><template #navbar-center><p>Navbar center content</p>
</template><template #navbar-end><p>Navbar end content</p>
</template><template #sidebar-top><p>Sidebar top content</p>
</template><template #sidebar-center><p>Sidebar center content</p>
</template><template #sidebar-bottom><p>Sidebar bottom content</p>
</template><p>For details, see <a href="https://vuepress-theme-hope.github.io/guide/layout/custom/" target="_blank" rel="noopener noreferrer">Custom layout</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>FirstOrDefault</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/first-or-default/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/first-or-default/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">FirstOrDefault</source>
      <category>查询</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
    </item>
    <item>
      <title>查询注意事项</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query-notes/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query-notes/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">查询注意事项</source>
      <category>查询注意事项</category>
      <pubDate>Thu, 30 Dec 2021 04:41:43 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="查询"> 查询</h2>
<h3 id="未分片对象查询"> 未分片对象查询</h3>
<p>如果本次查询对象不是分片(分表或者分库)的那么本次查询将交由原生efcore执行,而不是sharding-core接管,具体执行会在当前<code>DbContext</code>内部的<code>ShardingDbContextExecutor</code>属性内创建一个默认数据源名称的<code>DbContext</code>,这个<code>DbContext</code>内部模型对象映射到表上面都是原生表名称</p>
<div><pre><code><span><span>var</span></span> order <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span> <span>232398109278351360</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><p><code>_myDbContext</code>在执行期间发现<code>Order</code>既不是分表也不是分库那么会将当前查询表达式通过创建一个空映射的DbContext来进行处理,所以如果你是原生的查询那么都将是支持的包括追踪</p>
<h3 id="查询分片对象"> 查询分片对象</h3>
<p>如果本次查询仅有分片对象情况下,查询执行器将判断当前查询路由是否跨表是否跨库,如果不跨表并且不跨库如果满足这两点那么将进行一下判断</p>
<p>1.追踪查询
满足本次查询没有分表(<strong>仅分库</strong>)或者有分表的情况下所有的<code>tail</code>都一样并且所有的查询对象都需要是分表的，那么本次查询将交由efcore原生查询,生成的<code>DbContext</code>将分片对象映射到对应的分表对象上
2.非追踪查询
仅需满足不跨表和不跨库即可交由efcore原生查询</p>
<h3 id="查询对象存在分片和为分片"> 查询对象存在分片和为分片</h3>
<p>将交由sharding-core查询聚合且返回对象如果是DbContext的model的对象类型那么将会进行手动track</p>
<h3 id="未跟踪查询"> 未跟踪查询</h3>
<p>如果你是未跟踪查询那么除了sharding对象的include不要使用,其他基本上无需考虑</p>
<div><p>注意</p>
<p>！！！如果查询对象是sharding对象那么请不要进行include操作,包括主表未分片子表分片。
！！！如果查询对象是sharding对象那么请不要进行include操作,包括主表未分片子表分片。
！！！如果查询对象是sharding对象那么请不要进行include操作,包括主表未分片子表分片。</p>
</div>
<img src="/sharding-core-doc/query-process.png">]]></content:encoded>
    </item>
    <item>
      <title>Project home</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/home/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/home/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Project home</source>
      <pubDate>Tue, 02 Nov 2021 08:39:31 GMT</pubDate>
      <content:encoded><![CDATA[<p>This is an example of a normal homepage. You can place your main content here.</p>
<p>To use this layout, you need to set <code>home: true</code> in the page front matter.</p>
<p>For related descriptions of configuration items, please see <a href="https://vuepress-theme-hope.github.io/guide/layout/home/" target="_blank" rel="noopener noreferrer">Project HomePage Layout Config</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>分组查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/group-by-query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/group-by-query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">分组查询</source>
      <category>查询</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="支持group"> 支持group</h2>
<div><pre><code>    <span><span>var</span></span> ids <span>=</span> <span>new</span><span>[</span><span>]</span> <span>{</span><span>"200"</span><span>,</span> <span>"300"</span><span>}</span><span>;</span>
            <span><span>var</span></span> dateOfMonths <span>=</span> <span>new</span><span>[</span><span>]</span> <span>{</span><span>202111</span><span>,</span> <span>202110</span><span>}</span><span>;</span>
            <span><span>var</span></span> <span>group</span> <span>=</span> <span>await</span> <span>(</span><span>from</span> u <span>in</span> _virtualDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUserSalary<span>></span></span></span><span>(</span><span>)</span>
                    <span>.</span><span>Where</span><span>(</span>o <span>=></span> ids<span>.</span><span>Contains</span><span>(</span>o<span>.</span>UserId<span>)</span> <span>&amp;&amp;</span> dateOfMonths<span>.</span><span>Contains</span><span>(</span>o<span>.</span>DateOfMonth<span>)</span><span>)</span>
                <span>group</span> u <span>by</span> <span>new</span>
                <span>{</span>
                    UId <span>=</span> u<span>.</span>UserId
                <span>}</span>
                <span>into</span> g
                <span>select</span> <span>new</span>
                <span>{</span>
                    GroupUserId <span>=</span> g<span>.</span>Key<span>.</span>UId<span>,</span>
                    Count <span>=</span> g<span>.</span><span>Count</span><span>(</span><span>)</span><span>,</span>
                    TotalSalary <span>=</span> g<span>.</span><span>Sum</span><span>(</span>o <span>=></span> o<span>.</span>Salary<span>)</span><span>,</span>
                    AvgSalary <span>=</span> g<span>.</span><span>Average</span><span>(</span>o <span>=></span> o<span>.</span>Salary<span>)</span><span>,</span>
                    AvgSalaryDecimal <span>=</span> g<span>.</span><span>Average</span><span>(</span>o <span>=></span> o<span>.</span>SalaryDecimal<span>)</span><span>,</span>
                    MinSalary <span>=</span> g<span>.</span><span>Min</span><span>(</span>o <span>=></span> o<span>.</span>Salary<span>)</span><span>,</span>
                    MaxSalary <span>=</span> g<span>.</span><span>Max</span><span>(</span>o <span>=></span> o<span>.</span>Salary<span>)</span>
                <span>}</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><table>
<thead>
<tr>
<th>聚合函数</th>
<th>是否支持</th>
</tr>
</thead>
<tbody>
<tr>
<td>Count</td>
<td>支持</td>
</tr>
<tr>
<td>Sum</td>
<td>支持</td>
</tr>
<tr>
<td>Max</td>
<td>支持</td>
</tr>
<tr>
<td>Min</td>
<td>支持</td>
</tr>
<tr>
<td>Average</td>
<td>支持</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>Intro Page</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/intro/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/intro/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Intro Page</source>
      <pubDate>Tue, 02 Nov 2021 08:39:31 GMT</pubDate>
      <content:encoded><![CDATA[<h1 id="intro-page"> Intro Page</h1>
<p>Place your introducation and profile here.</p>
]]></content:encoded>
    </item>
    <item>
      <title>组合查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/multi-entity-query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/multi-entity-query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">组合查询</source>
      <category>查询</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="组合查询"> 组合查询</h2>
<p>默认不推荐<code>include</code>，分表对象+分表、分表对象+分表对象都是在本框架内被支持的，支持的形式为join, 默认推荐join组合而不是include</p>
]]></content:encoded>
    </item>
    <item>
      <title>事务中查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/query-in-transaction/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/query-in-transaction/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">事务中查询</source>
      <category>查询</category>
      <pubDate>Thu, 11 Nov 2021 02:54:25 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="事务中查询block"> 事务中查询block</h2>
<p>当我们开启事务的时候如果涉及到跨表查询,那么sharding-core的做法是这样的</p>
<ol>
<li>因为同一个connection不能有多个结果集并行获取(除非sqlserver开始MARS)(MultipleActive Result Set),所以sharding-core默认所有数据库都不支持MARS,这个前提下那么涉及跨表操作就需要开始多个链接来进行并行查询+内存串行聚合。所以如果开启了事务不是同一个链接session的前提下，另一个链接是无法读取到事务内的数据结果，如果出现全表扫描的情况下可能会出现死锁,所以在事务内部建议使用with(nolock)，具体做法</li>
</ol>
<div><pre><code></code></pre>
<div></div></div><p><strong>注意</strong>最好的做法是尽可能的短事务,不要再事务开启后,数据增删改后未提交事务的情况下进行跨表查询，所以只要保证尽可能短的事务就可以了</p>
]]></content:encoded>
    </item>
    <item>
      <title>单对象查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/single-entity-query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/query/single-entity-query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">单对象查询</source>
      <category>查询</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="单表查询"> 单表查询</h2>
<p>和efcore原生查询没有任何区别,支持未分表下的所有操作</p>
]]></content:encoded>
    </item>
    <item>
      <title>概念</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/terminology/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/guide/terminology/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">概念</source>
      <category>使用指南</category>
      <pubDate>Wed, 03 Nov 2021 00:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<p><code>sharding-core</code>框架是一款分表分库组件,一款将efcore的一个dbcontext一个对象一张表扩展成了一个dbcontext一个对象多张表对应多个dbcontext,一款基于表达式解析，具有高性能路由的分表分库框架。</p>
<h2 id="全局"> 全局</h2>
<h3 id="shelldbcontext壳dbcontext"> ShellDbContext壳DbContext</h3>
<p>用户和业务系统交互,单并不是正真执行得DbContext</p>
<h3 id="ishardingruntimecontext"> IShardingRuntimeContext</h3>
<p><code>IShardingRuntimeContext</code>让<code>DbContext</code>支持<code>Sharding</code>功能的上下文,用于构建出不同的<code>DbContextOptions</code>使用不同的<code>IShardingRuntimeContext</code>那么就可以让<code>DbContext</code>支持不同的<code>Sharding</code>,并且一下所有配置都由<code>IShardingRuntimeContext</code>获取,而不是依赖注入,<code>IShardingRuntimeContext</code>可以由依赖注入获取也可以用户自行保存譬如:静态属性</p>
<div><pre><code>  <span><span>var</span></span> shardingRuntimeContext <span>=</span> <span>new</span> <span>ShardingRuntimeBuilder<span>&lt;</span>DefaultShardingDbContext<span>></span></span><span>(</span><span>)</span>
                    <span>.</span><span>UseRouteConfig</span><span>(</span>o <span>=></span>
                    <span>{</span>
                        o<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserLogByMonthRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                        o<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserModVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                         o<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>SysUserModVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>.</span><span>UseConfig</span><span>(</span>o <span>=></span>
                    <span>{</span> 
                        o<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span>builder<span>)</span><span>=></span>
                        <span>{</span>
                            builder<span>.</span><span>UseMySql</span><span>(</span>conStr<span>,</span> <span>new</span> <span>MySqlServerVersion</span><span>(</span><span>new</span> <span>Version</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
                        <span>}</span><span>)</span><span>;</span>
                        o<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                        <span>{</span>
                            builder
                                <span>.</span><span>UseMySql</span><span>(</span>connection<span>,</span> <span>new</span> <span>MySqlServerVersion</span><span>(</span><span>new</span> <span>Version</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
                        <span>}</span><span>)</span><span>;</span>
                        o<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span> <span>"server=127.0.0.1;port=3306;database=dbdbd0;userid=root;password=root;"</span><span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>.</span><span><span>ReplaceService</span><span><span>&lt;</span>ITableEnsureManager<span>,</span>MySqlTableEnsureManager<span>></span></span></span><span>(</span><span>)</span>
                    <span>.</span><span>Build</span><span>(</span>sp<span>)</span><span>;</span><span>//sp为依赖注入的应用程序的依赖注入服务的提供者</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><h2 id="以下所有服务由ishardingruntimecontext获取"> 以下所有服务由IShardingRuntimeContext获取</h2>
<h3 id="ishardingprovider"> IShardingProvider</h3>
<p><code>IShardingProvider</code>对应配置信息获取如果配置时传入应用<code>IServiceProvider</code>那么也可以通过本接口获取应用的注入服务</p>
<div><pre><code>shardingRuntimeContext<span>.</span><span>GetShardingProvider</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="ishardingrouteconfigoptions"> IShardingRouteConfigOptions</h3>
<p><code>IShardingRouteConfigOptions</code>路由表的启动配置</p>
<div><pre><code>shardingRuntimeContext<span>.</span><span>GetShardingRouteConfigOptions</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="idbcontextcreator"> IDbContextCreator</h3>
<p><code>IDbContextCreator</code>DbContext创建者如果是通过依赖注入使用的ShardingCore和DbContext那么不需要管,否则需要重写</p>
<div><pre><code>shardingRuntimeContext<span>.</span><span>GetDbContextCreator</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="ientitymetadatamanager"> IEntityMetadataManager</h3>
<p><code>IEntityMetadataManager管理对象数据，将对象数据分表和分库的对象进行存储管理， 可以区分对象是否分表是否分库，并且可以获取对应的对象类型元数据</code>EntityMetadata`,所有类型的对象都可以被获取只要是DbContext所依赖的</p>
<div><pre><code>shardingRuntimeContext<span>.</span><span>GetEntityMetadataManager</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="entitymetadata"> EntityMetadata</h3>
<p><code>EntityMetadata</code>对象类型元数据，是针对分表分库对象的数据解析后的存储，通过对象类型元数据可以获取到对象的类型和对应的<code>虚拟表名</code>(不带后缀的表名)，<code>表主键</code>，是否分表是否分库，包括分表he分库的对应字段属性信息</p>
<div><pre><code><span>IEntityMetadataManager</span> entityMetadataManager<span>=</span><span>..</span><span>..</span><span>.</span><span>;</span>
entityMetadataManager<span>.</span><span>TryGet</span><span>(</span>EntityType<span>)</span><span>;</span>
entityMetadataManager<span>.</span><span><span>TryGet</span><span><span>&lt;</span>TEntity<span>></span></span></span><span>(</span>TEntity<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br></div></div><h3 id="ivirtualdatasource"> IVirtualDataSource</h3>
<p><code>IVirtualDataSource</code>当前上下文的虚拟数据源,记录着除了默认数据源外的额外数据源链接信息</p>
<div><pre><code>shardingRuntimeContext<span>.</span><span>GetVirtualDataSource</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="idatasourceroutemanager"> IDataSourceRouteManager</h3>
<p><code>IDataSourceRouteManager</code>分库路由管理者,可以根据对象进行分库选择路由</p>
<div><pre><code>shardingRuntimeContext<span>.</span><span>GetDataSourceRouteManager</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="itableroutemanager"> ITableRouteManager</h3>
<p><code>ITableRouteManager</code>分表路由管理者,可以根据对象进行分表选择路由</p>
<div><pre><code>shardingRuntimeContext<span>.</span><span>GetTableRouteManager</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br></div></div><h3 id="datasourcename"> DataSourceName</h3>
<p>数据源名称，默认针对<code>ShardingCore</code>每个链接都对应其自己的数据源，都有属于自己的数据源名称和数据源的链接。无论是否分表数据源名称都会有，只不过因为仅分表状态下只链接单个数据库，所以数据源名称在整个框架下只有一个，所以如果您是分表那么数据源名称可以随便添加，因为默认的数据源名称有且只有一个。</p>
<div><pre><code><span>//配置</span>
<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span><span>"Data Source=localhost;Initial Catalog=ShardingCoreDBxx0;Integrated Security=True;"</span><span>)</span><span>;</span>
<span>.</span><span>AddExtraDataSource</span><span>(</span>sp <span>=></span>
<span>{</span>
    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
    <span>{</span>
        <span>{</span><span>"ds1"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBxx1;Integrated Security=True;"</span><span>}</span><span>,</span>
        <span>{</span><span>"ds2"</span><span>,</span> <span>"Data Source=localhost;Initial Catalog=ShardingCoreDBxx2;Integrated Security=True;"</span><span>}</span><span>,</span>
    <span>}</span><span>;</span>
<span>}</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>通过上面我们可以看到我们其实分了三个数据库分别是<code>ds0</code>,<code>ds1</code>,<code>ds2</code>,使用分表的时候需要注意，仅分表对象才会进入分表，其他所有没有分表路由的对象将全部走DefaultDataSourceName数据库。</p>
<h3 id="ishardingtablecreator"> IShardingTableCreator</h3>
<p>分表对象创建,可以创建对应的分表指定对应的表后缀即可</p>
<div><pre><code><span>//直接获取</span>
ShardingContainer<span>.</span><span><span>GetService</span><span><span>&lt;</span>IShardingTableCreator<span>&lt;</span>TShardingDbContext<span>></span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
<span>//通过非泛型方法获取</span>
<span>(</span>IShardingTableCreator<span>)</span>ShardingContainer<span>.</span><span>GetService</span><span>(</span><span>typeof</span><span>(</span><span>IShardingTableCreator<span>&lt;</span><span>></span></span><span>)</span><span>.</span><span>GetGenericType0</span><span>(</span>shardingDbContext<span>.</span><span>GetType</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></div></div><h2 id="分库概念"> 分库概念</h2>
<h3 id="idatasourceroutemanager-2"> IDataSourceRouteManager</h3>
<p><code>IDataSourceRouteManager</code>分库路由管理者,如果您的对象是一个分库对象，那么分库对象必须实现一个虚拟数据源路由<code>IVirtualDataSourceRoute</code>，
虚拟数据源路由的作用是用来对分库对象进行路由，告诉框架程序应该如何对分库对象进行路由去对应的数据源里面</p>
<div><pre><code><span>//首先获取IDataSourceRouteManager</span>
<span>IDataSourceRouteManager</span> dataSourceRouteManager<span>=</span><span>..</span><span>..</span><span>.</span><span>;</span>
<span>//获取路由</span>
dataSourceRouteManager<span>.</span><span>GetRoute</span><span>(</span>EntityType<span>)</span><span>;</span>

<span>//直接路由</span>
dataSourceRouteManager<span>.</span><span>RouteTo</span><span>(</span><span>..</span><span>..</span><span>.</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><h2 id="分表"> 分表</h2>
<ul>
<li>[Tail]
尾巴、后缀物理表的后缀</li>
<li>[TableSeparator]
尾巴前缀虚拟表和物理表的后缀中间的字符</li>
<li>[物理表]
顾名思义就是数据库对应的实际表信息,表名(TableName+ TableSeparator+ Tail)比如:SysUser_2021,这边<code>SysUser</code>就是原本未分表时候的映射到数据库的物理表名称，后续的下划线<code>_</code>表示<code>TableSeparator</code>,<code>2021</code>表示后缀<code>Tail</code></li>
</ul>
<p>框架内部所有的分表名称规则都是按照(TableName+ TableSeparator+ Tail)来创建的</p>
<h3 id="itableroutemanager-2"> ITableRouteManager</h3>
<p><code>ITableRouteManager</code>分表路由管理者，因为对象和数据库表之间的关系从原先的一对一变成了一对一分表路由所以我们一个对象会对应一个分表路由，分表路由里面有对应表的所有分表后缀</p>
<div><pre><code><span>//获取分表路由管理者</span>
<span>ITableRouteManager</span> tableRouteManager<span>=</span><span>..</span><span>..</span>
tableRouteManager<span>.</span><span>GetRoute</span><span>(</span>EntityType<span>)</span><span>;</span>

<span>//直接路由</span>
tableRouteManager<span>.</span><span>RouteTo</span><span>(</span><span>..</span><span>..</span><span>.</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h3 id="ivirtualtableroute"> IVirtualTableRoute</h3>
<p><code>IVirtualTableRoute</code>虚拟表路由，针对对象如果我们需要对其进行分表，那么我么你必须要重写分表的路由，分表路由会告诉程序我们的这个sql执行是该如何找寻对应的实际表，而不用用户手动去指定对应的表，每一个虚拟表都会拥有一个虚拟表路由</p>
<div><pre><code><span>//首先获取分表管理者</span>
<span>ITableRouteManager</span> tableRouteManager<span>=</span><span>..</span><span>.</span><span>;</span>
<span>//通过分表路由管理者获取分表路由</span>
tableRouteManager<span>.</span><span>GetRoute</span><span>(</span>EntityType<span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>常见的问题</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/question/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/question/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">常见的问题</source>
      <category>常见的问题</category>
      <pubDate>Wed, 03 Nov 2021 14:36:42 GMT</pubDate>
      <content:encoded><![CDATA[<h3 id="使用外键报错"> 使用外键报错</h3>
<p>这边建议您在使用外键的时候如果是主表也是分表的情况下最好的情况就是取消外键</p>
<p><a href="https://github.com/xuejmnet/sharding-core/blob/main/samples/Sample.Migrations/RemoveForeignKeyMigrationsModelDiffer.cs" target="_blank" rel="noopener noreferrer">移除外键的方法</a></p>
<h3 id="没有自动建表"> 没有自动建表</h3>
<p>为什么我继承了默认的按时间分表,并且对<code>AutoCreateTableByTime</code>返回了true，但是还是没有建表呢？</p>
<ul>
<li>首先确定是否是iis是否设置了休眠(默认就是休眠的20分钟)</li>
<li>然后查询数据库链接账号是否拥有权限建表</li>
<li>最后查询各个路由建表的时间节点对应的日志<a href="/sharding-core-doc/sharding-route/default-route/#abstractsimpleshardingweekkeydatetimevirtualtableroute">默认路由创建节点</a></li>
<li>如果没有可以选择开启DoLogError错误日志会输出详细错误</li>
</ul>
<h3 id="我不想在默认的时间点建表"> 我不想在默认的时间点建表</h3>
<ul>
<li>修改对应的cron表达式返回<code>GetCronExpressions()</code></li>
<li>并且重写<code>IncrementMinutes</code>值</li>
</ul>
<p>原理:会在对应的cron表达式时间节点后添加<code>IncrementMinutes</code>分钟时间,然后算出对应的<code>tail</code>如果不重写<code>IncrementMinutes</code>会导致时间节点还是当前时间导致没办法创建表</p>
]]></content:encoded>
    </item>
    <item>
      <title>注意事项</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/read-write/note/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/read-write/note/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">注意事项</source>
      <category>读写分离</category>
      <pubDate>Wed, 29 Dec 2021 02:58:20 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="读写分离需要注意的事项"> 读写分离需要注意的事项</h2>
<p>默认如果你的项目使用了读写分离,那么在efcore层面需要注意的问题有两点</p>
<h3 id="追踪"> 追踪</h3>
<p>是否需要追踪:这是一个很严肃的问题,使用读写分离并且开启读写分离的情况下查询都会走读库,并且读库的链接和写库的不一样那么自然而然的无法使用同一个dbconnection所以没有办法合理使用同一个dbcontext就没办法使用追踪
所以可以选择默认关闭使用读写分离,在需要时进行开启</p>
<div><pre><code>.AddReadWriteSeparation(sp =&gt;
                {
                    return new Dictionary&lt;string, IEnumerable&lt;string&gt;&gt;()
                    {
                        {
                            &quot;A&quot;, new HashSet&lt;string&gt;()
                            {
                                &quot;Data Source=localhost;Initial Catalog=ShardingCoreDBB;Integrated Security=True;&quot;
                            }
                        }
                    };
                },ReadStrategyEnum.Loop,defaultEnable: false, readConnStringGetStrategy:ReadConnStringGetStrategyEnum.LatestEveryTime)
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><p><code>defaultEnable</code>:表示默认创建的dbcontext是走的读库还是写库，如果你需要实现追踪那么可以先将这个值设置为false,然后再需要的时候通过如下代码来进行切换或者使用scope范围方式</p>
<div><pre><code>    <span>//切换到从数据库</span>
    _virtualDbContext<span>.</span><span>ReadWriteSeparationReadOnly</span><span>(</span><span>)</span><span>;</span>
    <span>//切换到主数据库</span>
    _virtualDbContext<span>.</span><span>ReadWriteSeparationWriteOnly</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>或者通过实现中间件middleware或者actionfilter来实现范围</p>
<div><pre><code>
            <span>using</span> <span>(</span>_shardingReadWriteManager<span>.</span><span><span>CreateScope</span><span><span>&lt;</span>ShardingDefaultDbContext<span>></span></span></span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span>//设置为走读写分离，100为默认的优先级如果你在配置的时候没有生效</span>
                _shardingReadWriteManager<span>.</span><span><span>GetCurrent</span><span><span>&lt;</span>ShardingDefaultDbContext<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>SetReadWriteSeparation</span><span>(</span><span>100</span><span>,</span> <span>true</span><span>)</span><span>;</span>
                    <span><span>var</span></span> areaB <span>=</span> <span>await</span> _virtualDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Area <span>==</span> <span>"B"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>读写分离</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/read-write/configure/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/read-write/configure/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">读写分离</source>
      <category>读写分离</category>
      <pubDate>Sun, 14 Nov 2021 15:10:44 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<p>简单介绍下目前<code>ShardingCore</code>框架支持一主多从的读写分离架构,具体的数据库实现可以通过百度等搜索引擎查询具体的配置,sqlserver主要通过发布订阅 always on mysql主要通过bin log订阅伪装slave节点等</p>
<p>假设目前我们又两个数据源A，B这两个数据源分别拥有A有A1，A2两个从库，B拥有B1一个从库，那么假设在这种情况下我们应该如何进行配置呢</p>
<h2 id="配置读写分离"> 配置读写分离</h2>
<div><pre><code><span>.</span><span>AddReadWriteSeparation</span><span>(</span>sp <span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> IEnumerable<span>&lt;</span><span>string</span><span>></span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span><span>"A"</span><span>,</span><span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span><span>{</span><span>"Data Source=localhost;Initial Catalog=ShardingCoreDBA1;Integrated Security=True;"</span><span>,</span><span>"Data Source=localhost;Initial Catalog=ShardingCoreDBA2;Integrated Security=True;"</span><span>}</span><span>}</span><span>,</span>
                        <span>{</span><span>"B"</span><span>,</span><span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span><span>{</span><span>"Data Source=localhost;Initial Catalog=ShardingCoreDBB1;Integrated Security=True;"</span><span>}</span><span>}</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>,</span>ReadStrategyEnum<span>.</span>Loop<span>,</span><span>defaultEnable</span><span>:</span><span>true</span><span>,</span><span>defaultPriority</span><span>:</span><span>10</span><span>,</span>ReadConnStringGetStrategyEnum<span>.</span>LatestFirstTime<span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>这样我们就配置好了针对A数据源从数据库A1，A2针对B数据源B1从库</p>
<h2 id="参数说明"> 参数说明</h2>
<h3 id="readstrategyenum"> ReadStrategyEnum</h3>
<h4 id="readstrategyenum-loop"> ReadStrategyEnum.Loop</h4>
<p>表示同一个数据源的从库链接读取策略为轮询一个接一个公平读取,（可以设置同一个链接多次就是所谓的权重）</p>
<h4 id="readstrategyenum-random"> ReadStrategyEnum.Random</h4>
<p>表示针对同一个数据源获取链接采用随机策略,（可以设置同一个链接多次就是所谓的权重）</p>
<h3 id="defaultenable"> defaultEnable</h3>
<p>表示是否默认读操作走读数据库true:表示默认读取查询操作走从库，false表示默认读取查询操作还是走主库</p>
<p>如果全局设置为true/false后想要修改当前dbcontext可以通过</p>
<div><pre><code>    <span>//切换到从数据库</span>
    _virtualDbContext<span>.</span><span>ReadWriteSeparationReadOnly</span><span>(</span><span>)</span><span>;</span>
    <span>//切换到主数据库</span>
    _virtualDbContext<span>.</span><span>ReadWriteSeparationWriteOnly</span><span>(</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>以上两个扩展将无法作用于写入操作，写入操作永远只会走主库而非从库</p>
<p>除了通过dbcontext上的属性也支持通过scope创建</p>
<div><pre><code>            <span>using</span> <span>(</span>_shardingReadWriteManager<span>.</span><span><span>CreateScope</span><span><span>&lt;</span>ShardingDefaultDbContext<span>></span></span></span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                _shardingReadWriteManager<span>.</span><span><span>GetCurrent</span><span><span>&lt;</span>ShardingDefaultDbContext<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>SetReadWriteSeparation</span><span>(</span><span>100</span><span>,</span> <span>true</span><span>)</span><span>;</span>
                <span>using</span> <span>(</span>_shardingRouteManager<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    _shardingRouteManager<span>.</span>Current<span>.</span><span><span>TryCreateOrAddMustDataSource</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>"A"</span><span>)</span><span>;</span>
                    <span><span>var</span></span> areaB <span>=</span> <span>await</span> _virtualDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Area <span>==</span> <span>"B"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
                    Assert<span>.</span><span>NotNull</span><span>(</span>areaB<span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><p>被<code>_shardingReadWriteManager.CreateScope</code>包括的内部查询将使用对应的读写分离优先级和是否启用来判断，通过依赖注入<code>ServiceProvider.GetSerivce&lt;IShardingReadWriteManager&gt;()</code>来获取</p>
<h3 id="defaultpriority"> defaultPriority</h3>
<p>表示默认的读写分离优先级，先判断优先级在判断高优先级是否启用来确定dbcontext是否启用读写分离</p>
<h3 id="readconnstringgetstrategyenum"> ReadConnStringGetStrategyEnum</h3>
<h4 id="readconnstringgetstrategyenum-latestfirsttime"> ReadConnStringGetStrategyEnum.LatestFirstTime</h4>
<p>表示针对同一个dbcontext只取一次从库链接，保证同一个dbcontext下的从库链接都是一样的，不会出现说查询主表数据存在但是第二次查询可能走的是其他从库导致明细表不存在等问题，所以建议大部分情况下使用LatestFirstTime</p>
<h4 id="readconnstringgetstrategyenum-latesteverytime"> ReadConnStringGetStrategyEnum.LatestEveryTime</h4>
<p>表示每一次查询都是获取一次从库，但是可能会出现比如page的两次操作count+list结果和实际获取的不一致等情况，大部分情况下不会出现问题只是有可能会出现这种情况</p>
]]></content:encoded>
    </item>
    <item>
      <title>删除</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-all/delete/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-all/delete/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">删除</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingAll" target="_blank" rel="noopener noreferrer">SqlServerShardingAll</a></p>
<h2 id="删除数据"> 删除数据</h2>
<p>增删改查除了查询稍微在分表+排序的情况下需要注意其实其他操作和efcore基本上一致</p>
<p>删除也是</p>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Delete</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"9"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            _myDbContext<span>.</span><span>Remove</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>控制台我们可以看到对应的执行sql</p>
<div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      DELETE FROM <span>[</span>SysUser_00<span>]</span>
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p0<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>项目主页</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">项目主页</source>
      <pubDate>Tue, 02 Nov 2021 08:39:31 GMT</pubDate>
      <content:encoded><![CDATA[<br/>
<p align="center">
<div>
<p><a href="https://www.nuget.org/packages/ShardingCore" target="_blank"><img src="https://img.shields.io/nuget/v/ShardingCore.svg?style=flat-square" alt="nuget"></a>
<a href="https://www.nuget.org/stats/packages/ShardingCore?groupby=Version" target="_blank"><img src="https://img.shields.io/nuget/dt/ShardingCore.svg?style=flat-square" alt="nuget"></a>
<a href="https://github.com/xuejmnet/sharding-core/blob/main/LICENSE" target="_blank"><img src="https://img.shields.io/badge/license-Apache 2-blue" alt="license"></a></p>
</div>
</p>
<h2 id="🔔交流qq群"> 🔔交流QQ群</h2>
<div>
<img src="/sharding-core-doc/join-qq-group.jpg" alt="群号: 771630778" style="width:200px;">
<h4 id="shardingcore官方qq群-771630778"> ShardingCore官方QQ群: 771630778</h4>
</div>
<br/>
<h2 id="许可证"> 许可证</h2>
<p><a href="https://github.com/xuejmnet/sharding-core/blob/main/LICENSE" target="_blank" rel="noopener noreferrer">Apache-2.0 License</a></p>
<h2 id="文档主题"> 文档主题</h2>
<p><a href="https://vuepress-theme-hope.github.io/" target="_blank" rel="noopener noreferrer">vuepress-theme-hope</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>初始化</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-all/init/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-all/init/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">初始化</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<div><p>分库分表介绍</p>
<ol>
<li><code>sharding-core</code>支持自定义分库,流式聚合,支持同表join,数据源并非分表的笛卡尔积而是交集,比如我分库的对象和不分库的对象join结果只会查询不分库对象对应的数据源</li>
<li>分库下的分布式事务(支持业务逻辑导致的事务出错可以回滚),网络情况下的事务出错直接忽略除非是第一个提交的事务,第二个数据源提交的事务开始就直接忽略异常。</li>
</ol>
</div>
<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingAll" target="_blank" rel="noopener noreferrer">SqlServerShardingAll</a></p>
<h2 id="分表使用"> 分表使用</h2>
<p>先拟定一个场景目前有用户表<code>SysUser</code>和订单表<code>Order</code>，用户我们按用户区域进行分库按用户Id取模分表,订单我们按用户区域分库按订单时间分表</p>
<p>首先创建一个空的aspnetcore web api。</p>
<h3 id="安装shardingcore"> 安装ShardingCore</h3>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># 请对应数据库版本</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="创建对象"> 创建对象</h3>
<div><pre><code>    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>SysUser</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><h3 id="创建dbcontext"> 创建DbContext</h3>
<p>这样我们就创建好了三张表，接下来我们创建我们的<code>DbContext</code>,因为需要分表所以我们需要实现<code>IShardingTableDbContext</code>接口</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>SysUser<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br></div></div><div><p>自定义标题</p>
<ol>
<li>构造函数必须是<code>DbContextOptions&lt;MyDbContext&gt;</code>或者<code>DbContextOptions</code></li>
<li><code>OnModelCreating</code>并不是说分表必须要这样，而是你原先efcore怎么使用就怎么使用，efcore配置对象有两种一种是<code>DbSet</code>+<code>Attribute</code>,另外一种是<code>OnModelCreating</code>+<code>ModelBuilder</code>,你可以选择你原先在用的任何一种</li>
<li><code>AbstractShardingDbContext</code>这个对象是可以不继承的，但是如果要使用分表分库你必须实现<code>IShardingTableDbContext</code>这个接口,因为这个接口实现起来都是一样的所以默认你只需要继承<code>AbstractShardingDbContext</code>就可以了</li>
<li><code>IShardingTableDbContext</code>这个接口在你需要支持分表的情况下需要加，如果您只是分库那么就不需要添加这个接口</li>
</ol>
</div>
<h3 id="创建虚拟路由"> 创建虚拟路由</h3>
<ol>
<li>订单表按用户区域分库,因为分库系统并没有给我提供默认的分库路由,所以需要我们自行实现,我们先假设我们的数据源为A,B,C三个数据源,
再按订单时间分表</li>
<li>用户按区域分库,在按用户Id取模</li>
</ol>
<div><pre><code>    <span>//订单分库路由</span>
    <span>public</span> <span>class</span> <span>OrderVirtualDataSourceRoute</span> <span>:</span> <span><span>AbstractShardingOperatorVirtualDataSourceRoute<span>&lt;</span>Order<span>,</span> <span>string</span><span>></span></span></span>
    <span>{</span>
        <span>private</span> <span>readonly</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> _dataSources <span>=</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
        <span>{</span>
            <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
        <span>}</span><span>;</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
        <span>}</span>
        <span>//我们设置区域就是数据库</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToDataSourceName</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> <span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllDataSourceNames</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> _dataSources<span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AddDataSourceName</span><span>(</span><span><span>string</span></span> dataSourceName<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>_dataSources<span>.</span><span>Any</span><span>(</span>o <span>=></span> o <span>==</span> dataSourceName<span>)</span><span>)</span>
                <span>return</span> <span>false</span><span>;</span>
            _dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>

            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToDataSourceName</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                    <span>{</span>
                        <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                    <span>}</span>
            <span>}</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataDataSourceBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>//订单分表路由</span>
    <span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>CreationTime<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>//用户区域分库</span>
    <span>public</span> <span>class</span> <span>SysUserVirtualDataSourceRoute</span> <span>:</span> <span><span>AbstractShardingOperatorVirtualDataSourceRoute<span>&lt;</span>SysUser<span>,</span> <span>string</span><span>></span></span></span>
    <span>{</span>
        <span>private</span> <span>readonly</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> _dataSources <span>=</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
        <span>{</span>
            <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
        <span>}</span><span>;</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
        <span>}</span>
        <span>//我们设置区域就是数据库</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToDataSourceName</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> <span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllDataSourceNames</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> _dataSources<span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AddDataSourceName</span><span>(</span><span><span>string</span></span> dataSourceName<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>_dataSources<span>.</span><span>Any</span><span>(</span>o <span>=></span> o <span>==</span> dataSourceName<span>)</span><span>)</span>
                <span>return</span> <span>false</span><span>;</span>
            _dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>

            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToDataSourceName</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataDataSourceBuilder<span>&lt;</span>SysUser<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>//用户Id取模</span>
    
    <span>public</span> <span>class</span> <span>SysUserVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>SysUser<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>SysUserVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
        <span>{</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>SysUser<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br></div></div><div><p>注意</p>
<p>因为分库提供默认路由所以需要用户自行实现<code>AbstractShardingOperatorVirtualDataSourceRoute</code>抽象,分表有默认抽象路由但是如果无法满足需求可以自定义实现<code>AbstractShardingOperatorVirtualTableRoute</code>抽象</p>
</div>
<h3 id="startup配置"> Startup配置</h3>
<p><code>ConfigureServices(IServiceCollection services)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            services<span>.</span><span>AddControllers</span><span>(</span><span>)</span><span>;</span>
            
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>AddEntityConfig</span><span>(</span>o <span>=></span>
                <span>{</span>
                    o<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    o<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                    o<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>OrderVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    o<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>SysUserVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    o<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    o<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>ConfigId <span>=</span> <span>"c1"</span><span>;</span>
                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>ReplaceTableEnsureManager</span><span>(</span>sp <span>=></span> <span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>MyDbContext<span>></span></span><span>(</span><span>)</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"A"</span><span>,</span>
                     <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceTableDBA;Integrated Security=True;"</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddExtraDataSource</span><span>(</span>sp <span>=></span>
                    <span>{</span>
                        <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"B"</span><span>,</span><span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceTableDBB;Integrated Security=True;"</span>
                        <span>}</span><span>,</span>
                        <span>{</span>
                            <span>"C"</span><span>,</span><span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceTableDBC;Integrated Security=True;"</span>
                        <span>}</span><span>,</span>
                    <span>}</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br></div></div><div><p>重要</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
</div>
<p>新建一个扩展方法用来初始化ShardingCore和初始化种子数据</p>
<div><pre><code>   
    <span>public</span> <span>static</span> <span>class</span> <span>StartupExtension</span>
    <span>{</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>UseShardingCore</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>InitSeed</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            <span>using</span> <span>(</span><span><span>var</span></span> serviceScope <span>=</span> app<span>.</span>ApplicationServices<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span><span>var</span></span> myDbContext <span>=</span> serviceScope<span>.</span>ServiceProvider<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>if</span> <span>(</span><span>!</span>myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Any</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    <span><span>string</span><span>[</span><span>]</span></span> areas <span>=</span> <span>new</span> <span><span>string</span><span>[</span><span>]</span></span> <span>{</span><span>"A"</span><span>,</span><span>"B"</span><span>,</span><span>"C"</span> <span>}</span><span>;</span>
                    <span>List<span>&lt;</span>SysUser<span>></span></span> users <span>=</span> <span>new</span> <span>List<span>&lt;</span>SysUser<span>></span></span><span>(</span><span>10</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>100</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>
                        <span><span>var</span></span> uer<span>=</span><span>new</span> <span>SysUser</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Name <span>=</span> <span><span>$"MyName</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                            Area <span>=</span> areas<span>[</span><span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>0</span><span>,</span><span>3</span><span>)</span><span>]</span>
                        <span>}</span><span>;</span>
                        users<span>.</span><span>Add</span><span>(</span>uer<span>)</span><span>;</span>
                    <span>}</span>
                    <span>List<span>&lt;</span>Order<span>></span></span> orders <span>=</span> <span>new</span> <span>List<span>&lt;</span>Order<span>></span></span><span>(</span><span>300</span><span>)</span><span>;</span>
                    <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>300</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>
                        <span><span>var</span></span> sysUser <span>=</span> users<span>[</span>i <span>%</span> <span>100</span><span>]</span><span>;</span>
                        <span><span>var</span></span> order <span>=</span> <span>new</span> <span>Order</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Payer <span>=</span> sysUser<span>.</span>Id<span>,</span>
                            Money <span>=</span> <span>100</span><span>+</span><span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>100</span><span>,</span><span>3000</span><span>)</span><span>,</span>
                            OrderStatus <span>=</span> <span>(</span>OrderStatusEnum<span>)</span><span>(</span>i <span>%</span> <span>4</span> <span>+</span> <span>1</span><span>)</span><span>,</span>
                            Area <span>=</span> sysUser<span>.</span>Area<span>,</span>
                            CreationTime <span>=</span> begin<span>.</span><span>AddDays</span><span>(</span>i<span>)</span>
                        <span>}</span><span>;</span>
                        orders<span>.</span><span>Add</span><span>(</span>order<span>)</span><span>;</span>
                    <span>}</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>users<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div><p><code>Configure(IApplicationBuilder app, IWebHostEnvironment env)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>//初始化ShardingCore</span>
            app<span>.</span><span>UseShardingCore</span><span>(</span><span>)</span><span>;</span>
            app<span>.</span><span>UseRouting</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseAuthorization</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseEndpoints</span><span>(</span>endpoints <span>=></span>
            <span>{</span>
                endpoints<span>.</span><span>MapControllers</span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            <span>//初始化种子数据</span>
            app<span>.</span><span>InitSeed</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h3 id="efcore日志-可选"> efcore日志(可选)</h3>
<p>这边为了方便我们观察efcore的执行sql语句我们这边建议对efcore添加日志
<code>Startup</code>添加静态数据</p>
<div><pre><code>        <span>public</span> <span>static</span> <span>readonly</span> <span>ILoggerFactory</span> efLogger <span>=</span> LoggerFactory<span>.</span><span>Create</span><span>(</span>builder <span>=></span>
        <span>{</span>
            builder<span>.</span><span>AddFilter</span><span>(</span><span>(</span>category<span>,</span> level<span>)</span> <span>=></span> category <span>==</span> DbLoggerCategory<span>.</span>Database<span>.</span>Command<span>.</span>Name <span>&amp;&amp;</span> level <span>==</span> LogLevel<span>.</span>Information<span>)</span><span>.</span><span>AddConsole</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>在所有<code>builder.UseSqlServer(conStr);</code></p>
<p>都改成<code>builder.UseSqlServer(conStr).UseLoggerFactory(efLogger);</code></p>
<p>启动后我们将可以看到数据库和表会被自动创建，并且会将种子数据进行插入到内部供我们可以查询测试</p>
<img src="/sharding-core-doc/sharding-data-source-table.png">]]></content:encoded>
    </item>
    <item>
      <title>修改</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-all/update/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-all/update/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">修改</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingAll" target="_blank" rel="noopener noreferrer">SqlServerShardingAll</a></p>
<h2 id="自动追踪修改"> 自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            <span><span>var</span></span> i<span>=</span><span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>13ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser_01<span>]</span> SET <span>[</span>Name<span>]</span> <span>=</span> @p0
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p1<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="非自动追踪修改"> 非自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update1</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>AsNoTracking</span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            _myDbContext<span>.</span><span>Update</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p2<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser_01<span>]</span> SET <span>[</span>Area<span>]</span> <span>=</span> @p0, <span>[</span>Name<span>]</span> <span>=</span> @p1
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p2<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><p>结论</p>
<p>追踪情况下sharding-core依然可以对结果进行修改，修改的字段是被修改过后的字段</p>
<p>非追踪情况下sharding-croe也支持查询修改，但是修改的字段是全字段</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>删除</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-data-source/delete/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-data-source/delete/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">删除</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingDataSource" target="_blank" rel="noopener noreferrer">SqlServerShardingDataSource</a></p>
<h2 id="删除数据"> 删除数据</h2>
<p>增删改查除了查询稍微在分表+排序的情况下需要注意其实其他操作和efcore基本上一致</p>
<p>删除也是</p>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Delete</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"9"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            _myDbContext<span>.</span><span>Remove</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>控制台我们可以看到对应的执行sql</p>
<div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      DELETE FROM <span>[</span>SysUser<span>]</span>
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p0<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-all/query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-all/query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">查询</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingAll" target="_blank" rel="noopener noreferrer">SqlServerShardingAll</a></p>
<h2 id="单对象简单查询"> 单对象简单查询</h2>
<p>对<code>SysUser</code>和<code>Order</code>进行查询</p>
<div><pre><code><span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Query</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span><span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> sysUserA1 <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span><span>"1"</span><span>&amp;&amp;</span>o<span>.</span>Area<span>==</span><span>"A"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>3</span><span>,</span><span>5</span><span>)</span><span>;</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span> dateTime<span>)</span><span>.</span><span>OrderBy</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> orderIdOne <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"3"</span><span>)</span><span>;</span>


            <span><span>var</span></span> sysUsers <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id<span>==</span><span>"6"</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>

            <span>return</span> <span>Ok</span><span>(</span><span>new</span> <span><span>object</span><span>[</span><span>]</span></span>
            <span>{</span>
                sysUser<span>,</span>
                order<span>,</span>
                orderIdOne<span>,</span>
                sysUsers
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"C"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"63"</span><span>,</span><span>"payer"</span><span>:</span><span>"63"</span><span>,</span><span>"money"</span><span>:</span><span>1292</span><span>,</span><span>"area"</span><span>:</span><span>"C"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-05T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"3"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>2975</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-01-04T03:03:03"</span><span>}</span><span>,</span><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"C"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>}</span><span>]</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>、
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>    
      <span>..</span><span>..</span><span>..</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br></div></div><p>因为查询脚本是在太多了部分没用到索引所以会全库+全表，这边就用第一个查询来进行分析,具体你可以通过demo例子进行处理,首先我们先确定下我们是按<code>Area</code>区域进行分库的，所以在没有这个字段的时候可以明确知道程序会查询3个数据库,会打开三个链接，虽然是三个链接但是每个链接因为分表关键字Id可以索引所以只会查询每个库的自身的表，</p>
<p>第二个查询结果可以很明显看到有了分库索引后只选择其中一个库而不是所有的库,并且因为加了分表索引，所以只会有一个表而不是所有的表</p>
<h2 id="join"> join</h2>
<h3 id="分库join分库"> 分库join分库</h3>
<ol>
<li>无索引</li>
</ol>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin</span><span>(</span><span>)</span>
        <span>{</span>
           <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
           <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>5</span><span>,</span> <span>9</span><span>)</span><span>;</span>
           <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span>
               <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span>begin<span>&amp;&amp;</span>o<span>.</span>CreationTime<span>&lt;=</span>end<span>)</span>
                   <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
               <span>select</span> <span>new</span>
               <span>{</span>
                   user<span>.</span>Id<span>,</span>
                   user<span>.</span>Name<span>,</span>
                   user<span>.</span>Area<span>,</span>
                   OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                   order<span>.</span>Payer<span>,</span>
                   order<span>.</span>CreationTime
               <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"C"</span><span>,</span><span>"orderId"</span><span>:</span><span>"101"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-12T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderId"</span><span>:</span><span>"106"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-17T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>17ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>24ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>21ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>22ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>16ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>17ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>17ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>61ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>110ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>64ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br><span>125</span><br><span>126</span><br><span>127</span><br><span>128</span><br><span>129</span><br><span>130</span><br><span>131</span><br><span>132</span><br><span>133</span><br><span>134</span><br><span>135</span><br><span>136</span><br><span>137</span><br><span>138</span><br><span>139</span><br><span>140</span><br><span>141</span><br><span>142</span><br><span>143</span><br><span>144</span><br><span>145</span><br><span>146</span><br><span>147</span><br><span>148</span><br><span>149</span><br><span>150</span><br><span>151</span><br><span>152</span><br><span>153</span><br><span>154</span><br><span>155</span><br><span>156</span><br><span>157</span><br><span>158</span><br><span>159</span><br><span>160</span><br><span>161</span><br><span>162</span><br><span>163</span><br><span>164</span><br><span>165</span><br><span>166</span><br><span>167</span><br><span>168</span><br><span>169</span><br><span>170</span><br><span>171</span><br><span>172</span><br><span>173</span><br><span>174</span><br><span>175</span><br><span>176</span><br><span>177</span><br><span>178</span><br><span>179</span><br><span>180</span><br></div></div><p>一共开了18个链接,无法索引数据库3个,月份3,4,5月3张表,userid 1或者 6两张表一共是3<em>3</em>2=18个链接,因为是并行的而且使用完成后马上释放所以性能还是很高的</p>
<ol start="2">
<li>有索引<code>Area</code>就是索引</li>
</ol>
<div><pre><code>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin2</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
            <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>4</span><span>,</span> <span>3</span><span>)</span><span>;</span>
            <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> <span>(</span>o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span><span>&amp;&amp;</span>o<span>.</span>Area<span>==</span><span>"A"</span><span>)</span>
                <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>CreationTime <span>>=</span> begin <span>&amp;&amp;</span> o<span>.</span>CreationTime <span>&lt;=</span> end<span>)</span>
                    <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
                <span>select</span> <span>new</span>
                <span>{</span>
                    user<span>.</span>Id<span>,</span>
                    user<span>.</span>Name<span>,</span>
                    user<span>.</span>Area<span>,</span>
                    OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                    order<span>.</span>Payer<span>,</span>
                    order<span>.</span>CreationTime
                <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderId"</span><span>:</span><span>"106"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-17T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>51ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>18ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>16ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>52ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>52ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br></div></div><p>因为附带了索引，所以本次查询只需要月份3张表+userid两张表+A区域的一个库所以是3<em>2</em>1=6个链接</p>
<div><p>注意</p>
<ol>
<li>如果本次查询涉及<code>跨表</code>或者<code>跨库</code>并且查询附带<code>order by</code>那么order by的字段必须包含在返回结果里面.(聚合函数除外：count,any,sum......)</li>
<li>应该尽可能避免分库join分库,如果实在需要join那么也应该尽可能指定某一张表或者分表的数目尽可能小。(因为分表后如果a1,a2 join b1,b2那么就会有2个结果相互组合,路由结果越多性能越低，会生成各自datasourcename的交集,并且对各自的库下的表join会生成笛卡尔积)</li>
</ol>
</div>
<h3 id="查询接口支持"> 查询接口支持</h3>
<table>
<thead>
<tr>
<th>方法</th>
<th>Method</th>
<th><a href="https://github.com/xuejmnet/sharding-core/blob/main/test/ShardingCore.Test50/ShardingTest.cs" target="_blank" rel="noopener noreferrer">Unit Test</a></th>
</tr>
</thead>
<tbody>
<tr>
<td>第一条</td>
<td>FindAsync</td>
<td>yes</td>
</tr>
<tr>
<td>获取集合</td>
<td>ToListAsync</td>
<td>yes</td>
</tr>
<tr>
<td>第一条</td>
<td>FirstOrDefaultAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最大</td>
<td>MaxAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最小</td>
<td>MinAsync</td>
<td>yes</td>
</tr>
<tr>
<td>是否存在</td>
<td>AnyAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>CountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>LongCountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>求和</td>
<td>SumAsync</td>
<td>yes</td>
</tr>
<tr>
<td>平均</td>
<td>AverageAsync</td>
<td>yes</td>
</tr>
<tr>
<td>包含</td>
<td>ContainsAsync</td>
<td>yes</td>
</tr>
<tr>
<td>分组</td>
<td>GroupByAsync</td>
<td>yes</td>
</tr>
</tbody>
</table>
<div><p>注意</p>
<p>并不是说因为你的字段值是ABC所以我们需要将数据源定义成A、B、C,这边是因为方便通用,一般原则上我们定义为ds0,ds1,ds2，至于<code>Area</code>如何转成<code>ds0</code>,<code>ds1</code>,<code>ds2</code>那么就需要你自己去实现，比如你有一个[A..Z]的数组，数组下标就是对应的<code>ds</code>后面数字那么你就可以自己实现路由，并且还可以支持大于小于等于</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>初始化</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-data-source/init/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-data-source/init/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">初始化</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<div><p>分库介绍</p>
<ol>
<li><code>sharding-core</code>支持自定义分库,流式聚合,支持同表join,数据源并非分表的笛卡尔积而是交集,比如我分库的对象和不分库的对象join结果只会查询不分库对象对应的数据源</li>
<li>分库下的分布式事务(支持业务逻辑导致的事务出错可以回滚),网络情况下的事务出错直接忽略除非是第一个提交的事务,第二个数据源提交的事务开始就直接忽略异常。</li>
</ol>
</div>
<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingDataSource" target="_blank" rel="noopener noreferrer">EFCoreShardingDataSource</a></p>
<h2 id="分表使用"> 分表使用</h2>
<p>先拟定一个场景目前有用户表<code>SysUser</code>和订单表<code>Order</code>，用户我们按用户区域进行分库，订单我们按用户区域分库</p>
<p>首先创建一个空的aspnetcore web api。</p>
<h3 id="安装shardingcore"> 安装ShardingCore</h3>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># 请对应数据库版本</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="创建对象"> 创建对象</h3>
<div><pre><code>    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>SysUser</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><h3 id="创建dbcontext"> 创建DbContext</h3>
<p>这样我们就创建好了三张表，接下来我们创建我们的<code>DbContext</code>,因为不需要分表所以我们并不需要继承<code>IShardingTableDbContext</code>接口</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>SysUser<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>

    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div><div><p>自定义标题</p>
<ol>
<li>构造函数必须是<code>DbContextOptions&lt;MyDbContext&gt;</code>或者<code>DbContextOptions</code></li>
<li><code>OnModelCreating</code>并不是说分表必须要这样，而是你原先efcore怎么使用就怎么使用，efcore配置对象有两种一种是<code>DbSet</code>+<code>Attribute</code>,另外一种是<code>OnModelCreating</code>+<code>ModelBuilder</code>,你可以选择你原先在用的任何一种</li>
<li><code>AbstractShardingDbContext</code>这个对象是可以不继承的，但是如果要使用分表分库你必须实现<code>IShardingTableDbContext</code>这个接口,因为这个接口实现起来都是一样的所以默认你只需要继承<code>AbstractShardingDbContext</code>就可以了</li>
</ol>
</div>
<h3 id="创建虚拟路由"> 创建虚拟路由</h3>
<ol>
<li>订单表按用户区域分库,因为分库系统并没有给我提供默认的分库路由,所以需要我们自行实现,我们先假设我们的数据源为A,B,C三个数据源</li>
</ol>
<div><pre><code>
    
    <span>public</span> <span>class</span> <span>OrderVirtualDataSourceRoute</span><span>:</span><span><span>AbstractShardingOperatorVirtualDataSourceRoute<span>&lt;</span>Order<span>,</span><span>string</span><span>></span></span></span>
    <span>{</span>
        <span>private</span> <span>readonly</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> _dataSources<span>=</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
        <span>{</span>
            <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
        <span>}</span><span>;</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
        <span>}</span>
        <span>//我们设置区域就是数据库</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToDataSourceName</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> <span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllDataSourceNames</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> _dataSources<span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AddDataSourceName</span><span>(</span><span><span>string</span></span> dataSourceName<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>_dataSources<span>.</span><span>Any</span><span>(</span>o <span>=></span> o <span>==</span> dataSourceName<span>)</span><span>)</span>
                <span>return</span> <span>false</span><span>;</span>
             _dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
             <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>

            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToDataSourceName</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataDataSourceBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>SysUserVirtualDataSourceRoute</span> <span>:</span> <span><span>AbstractShardingOperatorVirtualDataSourceRoute<span>&lt;</span>SysUser<span>,</span> <span>string</span><span>></span></span></span>
    <span>{</span>
        <span>private</span> <span>readonly</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> _dataSources <span>=</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
        <span>{</span>
            <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
        <span>}</span><span>;</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>?.</span><span>ToString</span><span>(</span><span>)</span> <span>??</span> <span>string</span><span>.</span>Empty<span>;</span>
        <span>}</span>
        <span>//我们设置区域就是数据库</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToDataSourceName</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> <span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllDataSourceNames</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> _dataSources<span>;</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AddDataSourceName</span><span>(</span><span><span>string</span></span> dataSourceName<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>_dataSources<span>.</span><span>Any</span><span>(</span>o <span>=></span> o <span>==</span> dataSourceName<span>)</span><span>)</span>
                <span>return</span> <span>false</span><span>;</span>
            _dataSources<span>.</span><span>Add</span><span>(</span>dataSourceName<span>)</span><span>;</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>

            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToDataSourceName</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataDataSourceBuilder<span>&lt;</span>SysUser<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br></div></div><div><p>注意</p>
<p>因为分库提供默认路由所以需要用户自行实现<code>AbstractShardingOperatorVirtualDataSourceRoute</code>抽象</p>
</div>
<h3 id="startup配置"> Startup配置</h3>
<p><code>ConfigureServices(IServiceCollection services)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            services<span>.</span><span>AddControllers</span><span>(</span><span>)</span><span>;</span>
            
                services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span>
                <span>.</span><span>AddEntityConfig</span><span>(</span>o <span>=></span>
                <span>{</span>
                    o<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                    o<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                    o<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>OrderVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                    o<span>.</span><span><span>AddShardingDataSourceRoute</span><span><span>&lt;</span>SysUserVirtualDataSourceRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>}</span><span>)</span>
                <span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
                <span>{</span>
                    op<span>.</span>ConfigId <span>=</span> <span>"c1"</span><span>;</span>
                    op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                    <span>{</span>
                        builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                    op<span>.</span><span>ReplaceTableEnsureManager</span><span>(</span>sp <span>=></span> <span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>MyDbContext<span>></span></span><span>(</span><span>)</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"A"</span><span>,</span>
                    <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBA;Integrated Security=True;"</span><span>)</span><span>;</span>
                    op<span>.</span><span>AddExtraDataSource</span><span>(</span>sp <span>=></span>
                    <span>{</span>
                        <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> <span>string</span><span>></span></span><span>(</span><span>)</span>
                        <span>{</span>
                            <span>{</span>
                                <span>"B"</span><span>,</span>
                                <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBB;Integrated Security=True;"</span>
                            <span>}</span><span>,</span>
                            <span>{</span>
                                <span>"C"</span><span>,</span>
                                <span>"Data Source=localhost;Initial Catalog=EFCoreShardingDataSourceDBC;Integrated Security=True;"</span>
                            <span>}</span><span>,</span>
                        <span>}</span><span>;</span>
                    <span>}</span><span>)</span><span>;</span>
                <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br></div></div><div><p>重要</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
</div>
<p>新建一个扩展方法用来初始化ShardingCore和初始化种子数据</p>
<div><pre><code>   
    <span>public</span> <span>static</span> <span>class</span> <span>StartupExtension</span>
    <span>{</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>UseShardingCore</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>InitSeed</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            <span>using</span> <span>(</span><span><span>var</span></span> serviceScope <span>=</span> app<span>.</span>ApplicationServices<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span><span>var</span></span> myDbContext <span>=</span> serviceScope<span>.</span>ServiceProvider<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>if</span> <span>(</span><span>!</span>myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Any</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    <span><span>string</span><span>[</span><span>]</span></span> areas <span>=</span> <span>new</span> <span><span>string</span><span>[</span><span>]</span></span> <span>{</span><span>"A"</span><span>,</span><span>"B"</span><span>,</span><span>"C"</span> <span>}</span><span>;</span>
                    <span>List<span>&lt;</span>SysUser<span>></span></span> users <span>=</span> <span>new</span> <span>List<span>&lt;</span>SysUser<span>></span></span><span>(</span><span>10</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>10</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>
                        <span><span>var</span></span> uer<span>=</span><span>new</span> <span>SysUser</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Name <span>=</span> <span><span>$"MyName</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                            Area <span>=</span> areas<span>[</span>i <span>%</span> <span>3</span><span>]</span>
                        <span>}</span><span>;</span>
                        users<span>.</span><span>Add</span><span>(</span>uer<span>)</span><span>;</span>
                    <span>}</span>
                    <span>List<span>&lt;</span>Order<span>></span></span> orders <span>=</span> <span>new</span> <span>List<span>&lt;</span>Order<span>></span></span><span>(</span><span>300</span><span>)</span><span>;</span>
                    <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>300</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>

                        <span><span>var</span></span> order <span>=</span> <span>new</span> <span>Order</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Payer <span>=</span> <span><span>$"</span><span><span>{</span><span>i <span>%</span> <span>10</span></span><span>}</span></span><span>"</span></span><span>,</span>
                            Money <span>=</span> <span>100</span><span>+</span><span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>100</span><span>,</span><span>3000</span><span>)</span><span>,</span>
                            OrderStatus <span>=</span> <span>(</span>OrderStatusEnum<span>)</span><span>(</span>i <span>%</span> <span>4</span> <span>+</span> <span>1</span><span>)</span><span>,</span>
                            Area <span>=</span> areas<span>[</span>i <span>%</span> <span>3</span><span>]</span><span>,</span>
                            CreationTime <span>=</span> begin<span>.</span><span>AddDays</span><span>(</span>i<span>)</span>
                        <span>}</span><span>;</span>
                        orders<span>.</span><span>Add</span><span>(</span>order<span>)</span><span>;</span>
                    <span>}</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>users<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br></div></div><p><code>Configure(IApplicationBuilder app, IWebHostEnvironment env)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>//初始化ShardingCore</span>
            app<span>.</span><span>UseShardingCore</span><span>(</span><span>)</span><span>;</span>
            app<span>.</span><span>UseRouting</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseAuthorization</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseEndpoints</span><span>(</span>endpoints <span>=></span>
            <span>{</span>
                endpoints<span>.</span><span>MapControllers</span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            <span>//初始化种子数据</span>
            app<span>.</span><span>InitSeed</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h3 id="efcore日志-可选"> efcore日志(可选)</h3>
<p>这边为了方便我们观察efcore的执行sql语句我们这边建议对efcore添加日志
<code>Startup</code>添加静态数据</p>
<div><pre><code>        <span>public</span> <span>static</span> <span>readonly</span> <span>ILoggerFactory</span> efLogger <span>=</span> LoggerFactory<span>.</span><span>Create</span><span>(</span>builder <span>=></span>
        <span>{</span>
            builder<span>.</span><span>AddFilter</span><span>(</span><span>(</span>category<span>,</span> level<span>)</span> <span>=></span> category <span>==</span> DbLoggerCategory<span>.</span>Database<span>.</span>Command<span>.</span>Name <span>&amp;&amp;</span> level <span>==</span> LogLevel<span>.</span>Information<span>)</span><span>.</span><span>AddConsole</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>在所有<code>builder.UseSqlServer(conStr);</code></p>
<p>都改成<code>builder.UseSqlServer(conStr).UseLoggerFactory(efLogger);</code></p>
<p>启动后我们将可以看到数据库和表会被自动创建，并且会将种子数据进行插入到内部供我们可以查询测试</p>
<img src="/sharding-core-doc/sharding-data-source.png">]]></content:encoded>
    </item>
    <item>
      <title>查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-data-source/query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-data-source/query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">查询</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分库的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingDataSource" target="_blank" rel="noopener noreferrer">EFCoreShardingDataSource</a></p>
<h2 id="单对象简单查询"> 单对象简单查询</h2>
<p>对<code>SysUser</code>和<code>Order</code>进行查询</p>
<div><pre><code><span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Query</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span><span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>3</span><span>,</span><span>5</span><span>)</span><span>;</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span> dateTime<span>)</span><span>.</span><span>OrderBy</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> orderIdOne <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"3"</span><span>)</span><span>;</span>


            <span><span>var</span></span> sysUsers <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id<span>==</span><span>"6"</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>

            <span>return</span> <span>Ok</span><span>(</span><span>new</span> <span><span>object</span><span>[</span><span>]</span></span>
            <span>{</span>
                sysUser<span>,</span>
                order<span>,</span>
                orderIdOne<span>,</span>
                sysUsers
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"63"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>1271</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-05T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"3"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>2484</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-01-04T03:03:03"</span><span>}</span><span>,</span><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>}</span><span>]</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>8ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>3ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br></div></div><h2 id="join"> join</h2>
<h3 id="分库join分库"> 分库join分库</h3>
<ol>
<li>无索引</li>
</ol>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin</span><span>(</span><span>)</span>
        <span>{</span>
           <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
           <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>4</span><span>,</span> <span>3</span><span>)</span><span>;</span>
           <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span>
               <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span>begin<span>&amp;&amp;</span>o<span>.</span>CreationTime<span>&lt;=</span>end<span>)</span>
                   <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
               <span>select</span> <span>new</span>
               <span>{</span>
                   user<span>.</span>Id<span>,</span>
                   user<span>.</span>Name<span>,</span>
                   user<span>.</span>Area<span>,</span>
                   OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                   order<span>.</span>Payer<span>,</span>
                   order<span>.</span>CreationTime
               <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"61"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-03T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"71"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-13T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"81"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-23T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"91"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-02T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"66"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-08T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"76"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-18T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"86"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-28T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>3ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>3ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br></div></div><ol start="2">
<li>有索引<code>Area</code>就是索引</li>
</ol>
<div><pre><code>
        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin2</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
            <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>4</span><span>,</span> <span>3</span><span>)</span><span>;</span>
            <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> <span>(</span>o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span><span>&amp;&amp;</span>o<span>.</span>Area<span>==</span><span>"A"</span><span>)</span>
                <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>CreationTime <span>>=</span> begin <span>&amp;&amp;</span> o<span>.</span>CreationTime <span>&lt;=</span> end<span>)</span>
                    <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
                <span>select</span> <span>new</span>
                <span>{</span>
                    user<span>.</span>Id<span>,</span>
                    user<span>.</span>Name<span>,</span>
                    user<span>.</span>Area<span>,</span>
                    OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                    order<span>.</span>Payer<span>,</span>
                    order<span>.</span>CreationTime
                <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderId"</span><span>:</span><span>"66"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-08T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>17ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span> AND <span>(</span><span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span> <span>=</span> <span>'A'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></div></div><div><p>注意</p>
<ol>
<li>如果本次查询涉及<code>跨表</code>或者<code>跨库</code>并且查询附带<code>order by</code>那么order by的字段必须包含在返回结果里面.(聚合函数除外：count,any,sum......)</li>
<li>应该尽可能避免分库join分库,如果实在需要join那么也应该尽可能指定某一张表或者分表的数目尽可能小。(因为分表后如果a1,a2 join b1,b2那么就会有2个结果相互组合,路由结果越多性能越低，会生成各自datasourcename的交集(并不是和分表一样的笛卡尔积))</li>
</ol>
</div>
<h3 id="查询接口支持"> 查询接口支持</h3>
<table>
<thead>
<tr>
<th>方法</th>
<th>Method</th>
<th><a href="https://github.com/xuejmnet/sharding-core/blob/main/test/ShardingCore.Test50/ShardingTest.cs" target="_blank" rel="noopener noreferrer">Unit Test</a></th>
</tr>
</thead>
<tbody>
<tr>
<td>第一条</td>
<td>FindAsync</td>
<td>yes</td>
</tr>
<tr>
<td>获取集合</td>
<td>ToListAsync</td>
<td>yes</td>
</tr>
<tr>
<td>第一条</td>
<td>FirstOrDefaultAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最大</td>
<td>MaxAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最小</td>
<td>MinAsync</td>
<td>yes</td>
</tr>
<tr>
<td>是否存在</td>
<td>AnyAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>CountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>LongCountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>求和</td>
<td>SumAsync</td>
<td>yes</td>
</tr>
<tr>
<td>平均</td>
<td>AverageAsync</td>
<td>yes</td>
</tr>
<tr>
<td>包含</td>
<td>ContainsAsync</td>
<td>yes</td>
</tr>
<tr>
<td>分组</td>
<td>GroupByAsync</td>
<td>yes</td>
</tr>
</tbody>
</table>
<div><p>注意</p>
<p>并不是说因为你的字段值是ABC所以我们需要将数据源定义成A、B、C,这边是因为方便通用,一般原则上我们定义为ds0,ds1,ds2，至于<code>Area</code>如何转成<code>ds0</code>,<code>ds1</code>,<code>ds2</code>那么就需要你自己去实现，比如你有一个[A..Z]的数组，数组下标就是对应的<code>ds</code>后面数字那么你就可以自己实现路由，并且还可以支持大于小于等于</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>修改</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-data-source/update/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-data-source/update/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">修改</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingDataSource" target="_blank" rel="noopener noreferrer">SqlServerShardingDataSource</a></p>
<h2 id="自动追踪修改"> 自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            <span><span>var</span></span> i<span>=</span><span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>13ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser<span>]</span> SET <span>[</span>Name<span>]</span> <span>=</span> @p0
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p1<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="非自动追踪修改"> 非自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update1</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>AsNoTracking</span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            _myDbContext<span>.</span><span>Update</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p2<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser<span>]</span> SET <span>[</span>Area<span>]</span> <span>=</span> @p0, <span>[</span>Name<span>]</span> <span>=</span> @p1
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p2<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><p>结论</p>
<p>追踪情况下sharding-core依然可以对结果进行修改，修改的字段是被修改过后的字段</p>
<p>非追踪情况下sharding-croe也支持查询修改，但是修改的字段是全字段</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>手动路由</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-route/manual-route/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-route/manual-route/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">手动路由</source>
      <category>路由</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="背景"> 背景</h2>
<p>分表字段不一定在where条件里，但是需要进行自定表的查询,典型场景： 租户,很多时候租户Id分表,会存在于请求头或者请求体中,来确保后续的所有查询都需要走对应的分表，再比如多语言,可能我们会对语言进行分表,但是只会在请求时指定语言而不会将语言加入查询条件,甚至语言这个字段都不存在数据库中。</p>
<h2 id="如何实现"> 如何实现</h2>
<ol>
<li>对应后缀表启用<code>提示路由</code></li>
</ol>
<div><pre><code>
    <span>public</span> <span>class</span> <span>SysUserModVirtualTableRoute</span> <span>:</span> <span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>SysUserMod<span>></span></span></span>
    <span>{</span>
        <span>/// &lt;summary></span>
        <span>/// 开启提示路由</span>
        <span>/// &lt;/summary></span>
        <span>protected</span> <span>override</span> <span><span>bool</span></span> EnableHintRoute <span>=></span> <span>true</span><span>;</span>
        <span>/// &lt;summary></span>
        <span>/// 开启断言路由 如果不需要断言那么可以选择不开启提示路由[EnableHintRoute]必须开启</span>
        <span>/// &lt;/summary></span>
        <span>protected</span> <span>override</span> <span><span>bool</span></span> EnableAssertRoute <span>=></span> <span>true</span><span>;</span>

        <span>public</span> <span>SysUserModVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
        <span>{</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><ol>
<li>依赖注入<code>IShardingRouteManager</code>，并且开启<code>CreateScope</code>,<code>TryCreateOrAddMustTail&lt;SysUserMod&gt;(&quot;00&quot;,&quot;01&quot;)</code></li>
</ol>
<div><pre><code>
        <span>private</span> <span>readonly</span> <span>DefaultShardingDbContext</span> _defaultTableDbContext<span>;</span>
        <span>private</span> <span>readonly</span> <span>IShardingRouteManager</span> _shardingRouteManager<span>;</span>

        <span>public</span> <span>ValuesController</span><span>(</span><span>DefaultShardingDbContext</span> defaultTableDbContext<span>,</span> <span>IShardingRouteManager</span> shardingRouteManager<span>)</span>
        <span>{</span>
            _defaultTableDbContext <span>=</span> defaultTableDbContext<span>;</span>
            _shardingRouteManager <span>=</span> shardingRouteManager<span>;</span>
        <span>}</span>


            <span>using</span> <span>(</span>_shardingRouteManager<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                _shardingRouteManager<span>.</span>Current<span>.</span><span><span>TryCreateOrAddMustTail</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>"00"</span><span>,</span><span>"01"</span><span>)</span><span>;</span>
                <span>//_shardingRouteManager.Current.TryCreateOrAddHintTail&lt;SysUserMod>("00", "01");</span>
                <span>//_shardingRouteManager.Current.TryCreateOrAddAssertTail&lt;SysUserMod>();</span>

                <span><span>var</span></span> mod00s <span>=</span> <span>await</span> _defaultTableDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Skip</span><span>(</span><span>10</span><span>)</span><span>.</span><span>Take</span><span>(</span><span>11</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>所有在<code>CreateScope</code>内部的<code>SysUserMod</code>的查询都将只会走指定的表也就是[&quot;00&quot;,&quot;01&quot;],可以针对<code>Middleware</code>,<code>ActionFilter</code>处进行使用来达到租户的模式</p>
<h2 id="路由过滤器"> 路由过滤器</h2>
<p>假设我们对单次查询返回的路由不满意需要配置,比如如果单次查询大于10个结果那么我们只需要返回前5个,这个操作该如何实现呢，</p>
<ol>
<li>路由后置过滤器，通过路由的重写</li>
</ol>
<div><pre><code>
        <span>protected</span> <span>override</span> <span>List<span>&lt;</span>IPhysicTable<span>></span></span> <span>AfterPhysicTableFilter</span><span>(</span><span>List<span>&lt;</span>IPhysicTable<span>></span></span> allPhysicTables<span>,</span> <span>List<span>&lt;</span>IPhysicTable<span>></span></span> filterPhysicTables<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>filterPhysicTables<span>.</span>Count <span>>=</span> <span>10</span><span>)</span>
            <span>{</span>
                <span>//throw new Exception ....</span>
                <span>return</span> filterPhysicTables<span>.</span><span>Take</span><span>(</span><span>5</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>

            <span>return</span> filterPhysicTables<span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>通过这个后置过滤我们可以轻轻松松的完成对查询的控制,但是这个是全局的等于说写了那么所有的该对象的路由都要进行这种操作,所以下面就有了第二种方式<code>断言路由</code>
2. 断言路由,所谓的断言路由其实就是提示路由下的一种所以如果我们需要使用断言路由就要进行对<code>提示路由</code>的开启</p>
<div><pre><code>
        <span>/// &lt;summary></span>
        <span>/// 开启提示路由</span>
        <span>/// &lt;/summary></span>
        <span>protected</span> <span>override</span> <span><span>bool</span></span> EnableHintRoute <span>=></span> <span>true</span><span>;</span>
        <span>/// &lt;summary></span>
        <span>/// 开启断言路由 如果不需要断言那么可以选择不开启提示路由[EnableHintRoute]必须开启</span>
        <span>/// &lt;/summary></span>
        <span>protected</span> <span>override</span> <span><span>bool</span></span> EnableAssertRoute <span>=></span> <span>true</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br></div></div><p>如何使用断言路由，首先我们需要创建一个对应的路由断言</p>
<div><pre><code>
        <span>public</span> <span>class</span> <span>TestRouteAssert</span><span>:</span><span><span>ITableRouteAssert<span>&lt;</span>SysUserMod<span>></span></span></span>
        <span>{</span>
            <span>public</span> <span><span>void</span></span> <span>Assert</span><span>(</span><span>List<span>&lt;</span>IPhysicTable<span>></span></span> allPhysicTables<span>,</span> <span>List<span>&lt;</span>IPhysicTable<span>></span></span> resultPhysicTables<span>)</span>
            <span>{</span>

                <span>if</span> <span>(</span>resultPhysicTables<span>.</span>Count <span>>=</span> <span>10</span><span>)</span>
                <span>{</span>
                    <span>//throw new Exception ....</span>
                    resultPhysicTables<span>=</span>resultPhysicTables<span>.</span><span>Take</span><span>(</span><span>5</span><span>)</span><span>.</span><span>ToList</span><span>(</span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br></div></div><div><pre><code>
            <span>using</span> <span>(</span>_shardingRouteManager<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                _shardingRouteManager<span>.</span>Current<span>.</span><span><span>TryCreateOrAddAssertTail</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>new</span> <span>TestRouteAssert</span><span>(</span><span>)</span><span>)</span><span>;</span>

                <span><span>var</span></span> mod00s <span>=</span> <span>await</span> _defaultTableDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUserMod<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Skip</span><span>(</span><span>10</span><span>)</span><span>.</span><span>Take</span><span>(</span><span>11</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>这样我们就做到了和全局路由过滤器一样的效果但是是可以自定义的。</p>
<h2 id="musttail"> MustTail</h2>
<p>强制路由,使用强制路由<code>_shardingRouteManager.Current.TryCreateOrAddMustTail&lt;SysUserMod&gt;(&quot;00&quot;,&quot;01&quot;);</code>将无视断言路由和路由过滤器。</p>
<h2 id="hinttail"> HintTail</h2>
<p>提示路由,使用方式和强制路由一样<code>_shardingRouteManager.Current.TryCreateOrAddHintTail&lt;SysUserMod&gt;(&quot;00&quot;, &quot;01&quot;);</code>区别就是强制走提示路由后还需要在进行断言路由的判断</p>
<h2 id="asserttail"> AssertTail</h2>
<p>断言路由用来进行断言判断和筛选查询过滤结果</p>
<div><p>路由的顺序</p>
<ol>
<li>开启提示路由?开启判断有强制直接走强制，没强制就判断是否有提示有提示就走提示，走完提示在判断是否开启断言，开启了就再走断言，如果都没有就走普通</li>
<li>开启了提示路由和断言路由，并且没有强制路由和提示路由，仅仅只有断言路由那么就是先走自动过滤筛选表，然后走全局过滤，最后走断言路由</li>
</ol>
</div>
<p><strong>注意具体的流程可以参考源码<a href="https://github.com/xuejmnet/sharding-core/blob/main/src/ShardingCore/Core/VirtualRoutes/TableRoutes/Abstractions/AbstractShardingFilterVirtualTableRoute.cs" target="_blank" rel="noopener noreferrer">AbstractShardingFilterVirtualTableRoute</a> 或者<a href="https://github.com/xuejmnet/sharding-core/blob/main/src/ShardingCore/Core/VirtualRoutes/DataSourceRoutes/Abstractions/AbstractShardingFilterVirtualDataSourceRoute.cs" target="_blank" rel="noopener noreferrer">AbstractShardingFilterVirtualDataSourceRoute</a></strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>自定义路由</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-route/customer-route/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-route/customer-route/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">自定义路由</source>
      <category>路由</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="条件在右"> 条件在右</h2>
<p>首先我们需要明确一个点就是where后面的条件影响了你对整体路由的一个判断<code>column</code>为分表字段，<code>value</code>为条件</p>
<ol>
<li>
<p><code>column = value</code>，通过计算value可以清楚的知道我们应该查询哪张表</p>
</li>
<li>
<p><code>column &gt; value</code>,在按时间分表的情况通过比较表后缀可以得知表达式<code>&gt;</code>能够过滤的表</p>
</li>
<li>
<p><code>value &lt; column</code>,看着和2一样但是解析的时候确是天差地别,因为我们无法通过<code>&gt;</code>来判断,必须通过<code>&lt;</code>来判断</p>
</li>
<li>
<p><code>value.contains(column)</code>,需要解析成 <code>value[0] = column or value[1] = column or value[2] = column ......</code></p>
</li>
</ol>
<p>框架为了方便用户编写路由已经针对上述所有的情况进行了优化，所有的<code>column</code> 和 <code>value</code>的比较都会将<code>column</code>置于左边，将<code>value</code>置于右边，我们叫做<code>condition on right</code>，并且将所有的<code>contains</code>转换成<code>=</code>，用户可以专心编写路由</p>
<h2 id="abstractshardingoperatorvirtualtableroute"> AbstractShardingOperatorVirtualTableRoute</h2>
<p>所有分表的路由的基类,继承这个基类可以很轻松的实现自定义路由</p>
<h2 id="abstractshardingoperatorvirtualdatasourceroute"> AbstractShardingOperatorVirtualDataSourceRoute</h2>
<p>所有分库的路由的基类,继承这个基类可以很轻松的实现自定义路由</p>
<h2 id="一致性哈希路由"> 一致性哈希路由</h2>
<p>一致性哈希路由的简单实现版本又叫做大数取模分段，在取模的基础上实现了添加单张表后可以将数据迁移做到最小化。
就是在原先的哈希取模的上面进行再次分段来保证不会再增加一个基数的情况下需要大范围的迁移数据，直接上代码</p>
<div><pre><code>            <span><span>var</span></span> stringHashCode <span>=</span> ShardingCoreHelper<span>.</span><span>GetStringHashCode</span><span>(</span><span>"123"</span><span>)</span><span>;</span>
            <span><span>var</span></span> hashCode <span>=</span> stringHashCode <span>%</span> <span>10000</span><span>;</span>
            <span>if</span> <span>(</span>hashCode <span>>=</span> <span>0</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>3000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"A"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>3001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>6000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"B"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>6001</span> <span>&amp;&amp;</span> hashCode <span>&lt;</span> <span>10000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"C"</span><span>;</span>
            <span>}</span>
            <span>else</span>
                <span>throw</span> <span>new</span> <span>InvalidOperationException</span><span>(</span><span><span>$"cant calc hash route hash code:[</span><span><span>{</span><span>stringHashCode</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><p>这应该是一个最最最简单的是个人都能看得懂的路由了，将hashcode进行取模10000，得到0-9999，将其分成[0-3000],[3001-6000],[6001-9999]三段的概率大概是3、3、4相对很平均，那么还是遇到了上面我们所说的一个问题，如果我们现在需要加一个基数呢，首先修改路由</p>
<div><pre><code>            <span><span>var</span></span> stringHashCode <span>=</span> ShardingCoreHelper<span>.</span><span>GetStringHashCode</span><span>(</span><span>"123"</span><span>)</span><span>;</span>
            <span><span>var</span></span> hashCode <span>=</span> stringHashCode <span>%</span> <span>10000</span><span>;</span>
            <span>if</span> <span>(</span>hashCode <span>>=</span> <span>0</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>3000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"A"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>3001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>6000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"B"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>6001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>8000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"D"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>8001</span> <span>&amp;&amp;</span> hashCode <span>&lt;</span> <span>10000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"C"</span><span>;</span>
            <span>}</span>
            <span>else</span>
                <span>throw</span> <span>new</span> <span>InvalidOperationException</span><span>(</span><span><span>$"cant calc hash route hash code:[</span><span><span>{</span><span>stringHashCode</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><p>我们这边增加了一个基数针对[6001-9999]分段进行了数据切分，并且将[8001-9999]区间内的表后缀没变，实际上我们仅仅只需要修改五分之一的数据那么就可以完美的做到数据迁移，并且均匀分布数据,后续如果需要再次增加一台只需要针对'A'或者'B'进行2分那么就可以逐步增加基数来缓解压力，且数据迁移的数量随着基数的增加响应的需要迁移的数据百分比逐步的减少，最坏的情况是增加一倍的基数需要迁移50%的数据，相比较之前的最好情况迁移50%的数据来说十分划算，而且路由规则简单易写是个人就能写出来。</p>
<h2 id="编写一致性哈希路由"> 编写一致性哈希路由</h2>
<p>那么我们如何在sharding-core里面编写这个路由规则呢</p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>OrderHashRangeVirtualTableRoute</span><span>:</span><span><span>AbstractShardingOperatorVirtualTableRoute<span>&lt;</span>Order<span>,</span><span>string</span><span>></span></span></span>
    <span>{</span>
        <span>//如何将sharding key的value转换成对应的值</span>
        <span>protected</span> <span>override</span> <span><span>string</span></span> <span>ConvertToShardingKey</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span>return</span> shardingKey<span>.</span><span>ToString</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>

        <span>//如何将sharding key的value转换成对应的表后缀</span>
        <span>public</span> <span>override</span> <span><span>string</span></span> <span>ShardingKeyToTail</span><span>(</span><span><span>object</span></span> shardingKey<span>)</span>
        <span>{</span>
            <span><span>var</span></span> stringHashCode <span>=</span> ShardingCoreHelper<span>.</span><span>GetStringHashCode</span><span>(</span><span>ConvertToShardingKey</span><span>(</span>shardingKey<span>)</span><span>)</span><span>;</span>
            <span><span>var</span></span> hashCode <span>=</span> stringHashCode <span>%</span> <span>10000</span><span>;</span>
            <span>if</span> <span>(</span>hashCode <span>>=</span> <span>0</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>3000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"A"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>3001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>6000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"B"</span><span>;</span>
            <span>}</span>
            <span>else</span> <span>if</span> <span>(</span>hashCode <span>>=</span> <span>6001</span> <span>&amp;&amp;</span> hashCode <span>&lt;=</span> <span>10000</span><span>)</span>
            <span>{</span>
                <span>return</span> <span>"C"</span><span>;</span>
            <span>}</span>
            <span>else</span>
                <span>throw</span> <span>new</span> <span>InvalidOperationException</span><span>(</span><span><span>$"cant calc hash route hash code:[</span><span><span>{</span><span>stringHashCode</span><span>}</span></span><span>]"</span></span><span>)</span><span>;</span>
        <span>}</span>

        <span>//返回目前已经有的所有Order表后缀</span>
        <span>public</span> <span>override</span> <span>List<span>&lt;</span><span>string</span><span>></span></span> <span>GetAllTails</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
            <span>{</span>
                <span>"A"</span><span>,</span> <span>"B"</span><span>,</span> <span>"C"</span>
            <span>}</span><span>;</span>
        <span>}</span>

        <span>//如何过滤后缀(已经实现了condition on right)用户无需关心条件位置和如何解析条件逻辑判断，也不需要用户考虑and 还是or</span>
        <span>protected</span> <span>override</span> <span>Expression<span>&lt;</span>Func<span>&lt;</span><span>string</span><span>,</span> <span>bool</span><span>></span><span>></span></span> <span>GetRouteToFilter</span><span>(</span><span><span>string</span></span> shardingKey<span>,</span> <span>ShardingOperatorEnum</span> shardingOperator<span>)</span>
        <span>{</span>
            <span>//因为hash路由仅支持等于所以仅仅只需要写等于的情况</span>
            <span><span>var</span></span> t <span>=</span> <span>ShardingKeyToTail</span><span>(</span>shardingKey<span>)</span><span>;</span>
            <span>switch</span> <span>(</span>shardingOperator<span>)</span>
            <span>{</span>
                <span>case</span> ShardingOperatorEnum<span>.</span>Equal<span>:</span> <span>return</span> tail <span>=></span> tail <span>==</span> t<span>;</span>
                <span>default</span><span>:</span>
                <span>{</span>
                    <span>return</span> tail <span>=></span> <span>true</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br></div></div><p><strong>具体的原理如果不清楚可以参考博客<a href="https://www.cnblogs.com/xuejiaming/p/15383899.html" target="_blank" rel="noopener noreferrer">如何自定义路由</a></strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>删除</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-table/delete/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-table/delete/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">删除</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingTable" target="_blank" rel="noopener noreferrer">EFCoreShardingTable</a></p>
<h2 id="删除数据"> 删除数据</h2>
<p>增删改查除了查询稍微在分表+排序的情况下需要注意其实其他操作和efcore基本上一致</p>
<p>删除也是</p>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Delete</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"9"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            _myDbContext<span>.</span><span>Remove</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><p>控制台我们可以看到对应的执行sql</p>
<div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      DELETE FROM <span>[</span>SysUser<span>]</span>
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p0<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div>]]></content:encoded>
    </item>
    <item>
      <title>初始化</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-table/init/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-table/init/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">初始化</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="介绍"> 介绍</h2>
<div><p>分表介绍</p>
<ol>
<li><code>sharding-core</code>支持自定义分表,流式聚合,多表join</li>
<li>虽然框架已经将分表封装的用户毫无感知了,但是也是需要使用者有部分分表的概念的了解</li>
<li>我们把表A分成A1,A2,A3这三张表,如果你在数据库里还是看到了表A那么就说明程序是不正确的,表A在分表后其实不应该存在了(大部分情况下)</li>
<li><code>IShardingTableDbContext</code>这个接口在你需要支持分表的情况下需要加，如果您只是分库那么就不需要添加这个接口</li>
</ol>
</div>
<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingTable" target="_blank" rel="noopener noreferrer">EFCoreShardingTable</a></p>
<h2 id="分表使用"> 分表使用</h2>
<p>先拟定一个场景目前有用户表<code>SysUser</code>和订单表<code>Order</code>,再添加一个<code>Setting</code>配置表，用户我们按用户id进行取模分表，订单我们按时间月进行分表,配置表我们部分表
首先创建一个空的aspnetcore web api。</p>
<h3 id="安装shardingcore"> 安装ShardingCore</h3>
<div><pre><code><span># 请对应安装您需要的版本</span>
PM<span>></span> Install-Package ShardingCore
<span># 请对应数据库版本</span>
PM<span>></span> Install-Package Microsoft.EntityFrameworkCore.SqlServer
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><h3 id="创建对象"> 创建对象</h3>
<div><pre><code>    <span>public</span> <span>enum</span> <span>OrderStatusEnum</span>
    <span>{</span>
        NoPay<span>=</span><span>1</span><span>,</span>
        Paying<span>=</span><span>2</span><span>,</span>
        Payed<span>=</span><span>3</span><span>,</span>
        PayFail<span>=</span><span>4</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>Order</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Payer <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>long</span></span> Money <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>OrderStatusEnum</span> OrderStatus <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span>DateTime</span> CreationTime <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>SysUser</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Id <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> SettingCode <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Area <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
    <span>public</span> <span>class</span> <span>Setting</span>
    <span>{</span>
        <span>public</span> <span><span>string</span></span> Code <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
        <span>public</span> <span><span>string</span></span> Name <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br></div></div><h3 id="创建dbcontext"> 创建DbContext</h3>
<p>这样我们就创建好了三张表，接下来我们创建我们的<code>DbContext</code></p>
<div><pre><code>
    <span>public</span> <span>class</span> <span>MyDbContext</span><span>:</span><span><span>AbstractShardingDbContext</span><span>,</span><span>IShardingTableDbContext</span></span>
    <span>{</span>
        <span>public</span> <span>MyDbContext</span><span>(</span><span>DbContextOptions<span>&lt;</span>MyDbContext<span>></span></span> options<span>)</span> <span>:</span> <span>base</span><span>(</span>options<span>)</span>
        <span>{</span>
        <span>}</span>

        <span>protected</span> <span>override</span> <span><span>void</span></span> <span>OnModelCreating</span><span>(</span><span>ModelBuilder</span> modelBuilder<span>)</span>
        <span>{</span>
            <span>base</span><span>.</span><span>OnModelCreating</span><span>(</span>modelBuilder<span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Payer<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>OrderStatus<span>)</span><span>.</span><span><span>HasConversion</span><span><span>&lt;</span><span>int</span><span>></span></span></span><span>(</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Order<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Area<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>SettingCode<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>SysUser<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            modelBuilder<span>.</span><span><span>Entity</span><span><span>&lt;</span>Setting<span>></span></span></span><span>(</span>entity <span>=></span>
            <span>{</span>
                entity<span>.</span><span>HasKey</span><span>(</span>o <span>=></span> o<span>.</span>Code<span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o <span>=></span> o<span>.</span>Code<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>Property</span><span>(</span>o<span>=></span>o<span>.</span>Name<span>)</span><span>.</span><span>IsRequired</span><span>(</span><span>)</span><span>.</span><span>IsUnicode</span><span>(</span><span>false</span><span>)</span><span>.</span><span>HasMaxLength</span><span>(</span><span>50</span><span>)</span><span>;</span>
                entity<span>.</span><span>ToTable</span><span>(</span><span>nameof</span><span>(</span>Setting<span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>

        <span>public</span> <span>IRouteTail</span> RouteTail <span>{</span> <span>get</span><span>;</span> <span>set</span><span>;</span> <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br></div></div><div><p>自定义标题</p>
<ol>
<li>构造函数必须是<code>DbContextOptions&lt;MyDbContext&gt;</code>或者<code>DbContextOptions</code></li>
<li><code>OnModelCreating</code>并不是说分表必须要这样，而是你原先efcore怎么使用就怎么使用，efcore配置对象有两种一种是<code>DbSet</code>+<code>Attribute</code>,另外一种是<code>OnModelCreating</code>+<code>ModelBuilder</code>,你可以选择你原先在用的任何一种</li>
<li><code>AbstractShardingDbContext</code>这个对象是可以不继承的，但是如果要使用分表分库你必须实现<code>IShardingTableDbContext</code>这个接口,因为这个接口实现起来都是一样的所以默认你只需要继承<code>AbstractShardingDbContext</code>就可以了</li>
<li><code>IShardingTableDbContext</code>这个接口在你需要支持分表的情况下需要加，如果您只是分库那么就不需要添加这个接口</li>
</ol>
</div>
<h3 id="创建虚拟路由"> 创建虚拟路由</h3>
<ol>
<li>订单表按月分表,这边我们把订单从2021年1月份开始到现在具体</li>
</ol>
<div><pre><code>
    <span>//创建时间按月分表</span>
    <span>public</span> <span>class</span> <span>OrderVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute<span>&lt;</span>Order<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//注意一定要配置或者采用接口+标签也是可以的</span>
        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>Order<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>CreationTime<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
    <span>//用户Id取模3分表</span>
    <span>public</span> <span>class</span> <span>SysUserVirtualTableRoute</span><span>:</span><span><span>AbstractSimpleShardingModKeyStringVirtualTableRoute<span>&lt;</span>SysUser<span>></span></span></span>
    <span>{</span>
        <span>public</span> <span>SysUserVirtualTableRoute</span><span>(</span><span>)</span> <span>:</span> <span>base</span><span>(</span><span>2</span><span>,</span> <span>3</span><span>)</span>
        <span>{</span>
        <span>}</span>

        <span>public</span> <span>override</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>EntityMetadataTableBuilder<span>&lt;</span>SysUser<span>></span></span> builder<span>)</span>
        <span>{</span>
            builder<span>.</span><span>ShardingProperty</span><span>(</span>o <span>=></span> o<span>.</span>Id<span>)</span><span>;</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></div></div><h3 id="startup配置"> Startup配置</h3>
<p><code>ConfigureServices(IServiceCollection services)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>ConfigureServices</span><span>(</span><span>IServiceCollection</span> services<span>)</span>
        <span>{</span>

            services<span>.</span><span>AddControllers</span><span>(</span><span>)</span><span>;</span>
            <span>//添加一下代码</span>
            services<span>.</span><span><span>AddShardingDbContext</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>AddEntityConfig</span><span>(</span>op <span>=></span>
            <span>{</span>
                <span>//如果您使用code-first建议选择false</span>
                op<span>.</span>CreateShardingTableOnStart <span>=</span> <span>true</span><span>;</span>
                <span>//如果您使用code-first建议修改为fsle</span>
                op<span>.</span>EnsureCreatedWithOutShardingTable <span>=</span> <span>true</span><span>;</span>
                <span>//当无法获取路由时会返回默认值而不是报错</span>
                op<span>.</span>ThrowIfQueryRouteNotMatch <span>=</span> <span>false</span><span>;</span>
                op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>SysUserVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>OrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                op<span>.</span><span><span>AddShardingTableRoute</span><span><span>&lt;</span>MultiShardingOrderVirtualTableRoute<span>></span></span></span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>AddConfig</span><span>(</span>op <span>=></span>
            <span>{</span>
                op<span>.</span>ConfigId <span>=</span> <span>"a"</span><span>;</span>
                op<span>.</span><span>UseShardingQuery</span><span>(</span><span>(</span>conStr<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>conStr<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>;</span>
                op<span>.</span><span>UseShardingTransaction</span><span>(</span><span>(</span>connection<span>,</span> builder<span>)</span> <span>=></span>
                <span>{</span>
                    builder<span>.</span><span>UseSqlServer</span><span>(</span>connection<span>)</span><span>.</span><span>UseLoggerFactory</span><span>(</span>efLogger<span>)</span><span>;</span>
                <span>}</span><span>)</span><span>;</span>
                op<span>.</span><span>AddDefaultDataSource</span><span>(</span><span>"ds0"</span><span>,</span>
                    <span>"Data Source=localhost;Initial Catalog=EFCoreShardingTableDB;Integrated Security=True;"</span><span>)</span><span>;</span>
                op<span>.</span><span>AddReadWriteSeparation</span><span>(</span>sp <span>=></span>
                <span>{</span>
                    <span>return</span> <span>new</span> <span>Dictionary<span>&lt;</span><span>string</span><span>,</span> IEnumerable<span>&lt;</span><span>string</span><span>></span><span>></span></span><span>(</span><span>)</span>
                    <span>{</span>
                        <span>{</span>
                            <span>"ds0"</span><span>,</span> <span>new</span> <span>List<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span>
                            <span>{</span>
                                <span>"Data Source=localhost;Initial Catalog=EFCoreShardingTableDB;Integrated Security=True;"</span>
                            <span>}</span>
                        <span>}</span>
                    <span>}</span><span>;</span>
                <span>}</span><span>,</span> ReadStrategyEnum<span>.</span>Loop<span>,</span> <span>defaultEnable</span><span>:</span> <span>true</span><span>)</span><span>;</span>
                op<span>.</span><span>ReplaceTableEnsureManager</span><span>(</span>sp<span>=></span><span>new</span> <span>SqlServerTableEnsureManager<span>&lt;</span>MyDbContext<span>></span></span><span>(</span><span>)</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>.</span><span>EnsureConfig</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br></div></div><div><p>重要</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
<p>!!!<code>MyDbContext</code>请勿注册成单例、<code>ServiceLifetime.Singleton</code>!!!</p>
</div>
<p>新建一个扩展方法用来初始化ShardingCore和初始化种子数据</p>
<div><pre><code>    <span>public</span> <span>static</span> <span>class</span> <span>StartupExtension</span>
    <span>{</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>UseShardingCore</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            app<span>.</span>ApplicationServices<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>IShardingBootstrapper<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Start</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
        <span>public</span> <span>static</span> <span><span>void</span></span> <span>InitSeed</span><span>(</span><span>this</span> <span>IApplicationBuilder</span> app<span>)</span>
        <span>{</span>
            <span>using</span> <span>(</span><span><span>var</span></span> serviceScope <span>=</span> app<span>.</span>ApplicationServices<span>.</span><span>CreateScope</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                <span><span>var</span></span> myDbContext <span>=</span> serviceScope<span>.</span>ServiceProvider<span>.</span><span><span>GetRequiredService</span><span><span>&lt;</span>MyDbContext<span>></span></span></span><span>(</span><span>)</span><span>;</span>
                <span>if</span> <span>(</span><span>!</span>myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Setting<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Any</span><span>(</span><span>)</span><span>)</span>
                <span>{</span>
                    <span>List<span>&lt;</span>Setting<span>></span></span> settings <span>=</span> <span>new</span> <span>List<span>&lt;</span>Setting<span>></span></span><span>(</span><span>3</span><span>)</span><span>;</span>
                    settings<span>.</span><span>Add</span><span>(</span><span>new</span> <span>Setting</span><span>(</span><span>)</span>
                    <span>{</span>
                        Code <span>=</span> <span>"Admin"</span><span>,</span>
                        Name <span>=</span> <span>"AdminName"</span>
                    <span>}</span><span>)</span><span>;</span>
                    settings<span>.</span><span>Add</span><span>(</span><span>new</span> <span>Setting</span><span>(</span><span>)</span>
                    <span>{</span>
                        Code <span>=</span> <span>"User"</span><span>,</span>
                        Name <span>=</span> <span>"UserName"</span>
                    <span>}</span><span>)</span><span>;</span>
                    settings<span>.</span><span>Add</span><span>(</span><span>new</span> <span>Setting</span><span>(</span><span>)</span>
                    <span>{</span>
                        Code <span>=</span> <span>"SuperAdmin"</span><span>,</span>
                        Name <span>=</span> <span>"SuperAdminName"</span>
                    <span>}</span><span>)</span><span>;</span>

                    <span>List<span>&lt;</span>SysUser<span>></span></span> users <span>=</span> <span>new</span> <span>List<span>&lt;</span>SysUser<span>></span></span><span>(</span><span>10</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>10</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>
                        <span><span>var</span></span> uer<span>=</span><span>new</span> <span>SysUser</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Name <span>=</span> <span><span>$"MyName</span><span><span>{</span><span>i</span><span>}</span></span><span>"</span></span><span>,</span>
                            SettingCode <span>=</span> settings<span>[</span>i <span>%</span> <span>3</span><span>]</span><span>.</span>Code
                        <span>}</span><span>;</span>
                        users<span>.</span><span>Add</span><span>(</span>uer<span>)</span><span>;</span>
                    <span>}</span>
                    <span>List<span>&lt;</span>Order<span>></span></span> orders <span>=</span> <span>new</span> <span>List<span>&lt;</span>Order<span>></span></span><span>(</span><span>300</span><span>)</span><span>;</span>
                    <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>,</span> <span>3</span><span>)</span><span>;</span>
                    <span>for</span> <span>(</span><span><span>int</span></span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>300</span><span>;</span> i<span>++</span><span>)</span>
                    <span>{</span>

                        <span><span>var</span></span> order <span>=</span> <span>new</span> <span>Order</span><span>(</span><span>)</span>
                        <span>{</span>
                            Id <span>=</span> i<span>.</span><span>ToString</span><span>(</span><span>)</span><span>,</span>
                            Payer <span>=</span> <span><span>$"</span><span><span>{</span><span>i <span>%</span> <span>10</span></span><span>}</span></span><span>"</span></span><span>,</span>
                            Money <span>=</span> <span>100</span><span>+</span><span>new</span> <span>Random</span><span>(</span><span>)</span><span>.</span><span>Next</span><span>(</span><span>100</span><span>,</span><span>3000</span><span>)</span><span>,</span>
                            OrderStatus <span>=</span> <span>(</span>OrderStatusEnum<span>)</span><span>(</span>i <span>%</span> <span>4</span> <span>+</span> <span>1</span><span>)</span><span>,</span>
                            CreationTime <span>=</span> begin<span>.</span><span>AddDays</span><span>(</span>i<span>)</span>
                        <span>}</span><span>;</span>
                        orders<span>.</span><span>Add</span><span>(</span>order<span>)</span><span>;</span>
                    <span>}</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>settings<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>users<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>AddRange</span><span>(</span>orders<span>)</span><span>;</span>
                    myDbContext<span>.</span><span>SaveChanges</span><span>(</span><span>)</span><span>;</span>
                <span>}</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br></div></div><p><code>Configure(IApplicationBuilder app, IWebHostEnvironment env)</code>配置</p>
<div><pre><code>        <span>public</span> <span><span>void</span></span> <span>Configure</span><span>(</span><span>IApplicationBuilder</span> app<span>,</span> <span>IWebHostEnvironment</span> env<span>)</span>
        <span>{</span>
            <span>if</span> <span>(</span>env<span>.</span><span>IsDevelopment</span><span>(</span><span>)</span><span>)</span>
            <span>{</span>
                app<span>.</span><span>UseDeveloperExceptionPage</span><span>(</span><span>)</span><span>;</span>
            <span>}</span>
            <span>//初始化ShardingCore</span>
            app<span>.</span><span>UseShardingCore</span><span>(</span><span>)</span><span>;</span>
            app<span>.</span><span>UseRouting</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseAuthorization</span><span>(</span><span>)</span><span>;</span>

            app<span>.</span><span>UseEndpoints</span><span>(</span>endpoints <span>=></span>
            <span>{</span>
                endpoints<span>.</span><span>MapControllers</span><span>(</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
            <span>//初始化种子数据</span>
            app<span>.</span><span>InitSeed</span><span>(</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><h3 id="efcore日志-可选"> efcore日志(可选)</h3>
<p>这边为了方便我们观察efcore的执行sql语句我们这边建议对efcore添加日志</p>
<p><code>Startup</code>添加静态数据</p>
<div><pre><code>        <span>public</span> <span>static</span> <span>readonly</span> <span>ILoggerFactory</span> efLogger <span>=</span> LoggerFactory<span>.</span><span>Create</span><span>(</span>builder <span>=></span>
        <span>{</span>
            builder<span>.</span><span>AddFilter</span><span>(</span><span>(</span>category<span>,</span> level<span>)</span> <span>=></span> category <span>==</span> DbLoggerCategory<span>.</span>Database<span>.</span>Command<span>.</span>Name <span>&amp;&amp;</span> level <span>==</span> LogLevel<span>.</span>Information<span>)</span><span>.</span><span>AddConsole</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br></div></div><p>在所有<code>builder.UseSqlServer(conStr);</code></p>
<p>都改成<code>builder.UseSqlServer(conStr).UseLoggerFactory(efLogger);</code></p>
<p>启动后我们将可以看到数据库和表会被自动创建，并且会将种子数据进行插入到内部供我们可以查询测试</p>
<img src="/sharding-core-doc/sharding-table.png">
]]></content:encoded>
    </item>
    <item>
      <title>查询</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-table/query/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-table/query/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">查询</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingTable" target="_blank" rel="noopener noreferrer">EFCoreShardingTable</a></p>
<h2 id="单对象简单查询"> 单对象简单查询</h2>
<p>对<code>SysUser</code>和<code>Order</code>进行查询</p>
<div><pre><code><span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Query</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span><span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>Id<span>==</span><span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> dateTime <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span><span>3</span><span>,</span><span>5</span><span>)</span><span>;</span>
            <span><span>var</span></span> order <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span> dateTime<span>)</span><span>.</span><span>OrderBy</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            <span><span>var</span></span> orderIdOne <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"3"</span><span>)</span><span>;</span>


            <span><span>var</span></span> sysUsers <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id<span>==</span><span>"6"</span><span>)</span><span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>;</span>

            <span>return</span> <span>Ok</span><span>(</span><span>new</span> <span><span>object</span><span>[</span><span>]</span></span>
            <span>{</span>
                sysUser<span>,</span>
                order<span>,</span>
                orderIdOne<span>,</span>
                sysUsers
            <span>}</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"63"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>2407</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-05T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"3"</span><span>,</span><span>"payer"</span><span>:</span><span>"3"</span><span>,</span><span>"money"</span><span>:</span><span>974</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"orderStatus"</span><span>:</span><span>4</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-01-04T03:03:03"</span><span>}</span><span>,</span><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>}</span><span>]</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'1'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>6ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202111<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>25ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>21ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>13ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202106<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>9ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202107<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>11ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202109<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>23ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202108<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>5ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>47ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__dateTime_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202110<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__dateTime_0
      ORDER BY <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202110<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202109<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202105<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202108<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202107<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202111<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202102<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202101<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202106<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT TOP<span>(</span><span>1</span><span>)</span> <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Money<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>OrderStatus<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
      FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
      WHERE <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>'3'</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>1ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br><span>97</span><br><span>98</span><br><span>99</span><br><span>100</span><br><span>101</span><br><span>102</span><br><span>103</span><br><span>104</span><br><span>105</span><br><span>106</span><br><span>107</span><br><span>108</span><br><span>109</span><br><span>110</span><br><span>111</span><br><span>112</span><br><span>113</span><br><span>114</span><br><span>115</span><br><span>116</span><br><span>117</span><br><span>118</span><br><span>119</span><br><span>120</span><br><span>121</span><br><span>122</span><br><span>123</span><br><span>124</span><br></div></div><h2 id="join"> join</h2>
<h3 id="分表join不分表"> 分表join不分表</h3>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin1</span><span>(</span><span>)</span>
        <span>{</span>
           <span><span>var</span></span> sql<span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span>
                <span>join</span> setting <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Setting<span>></span></span></span><span>(</span><span>)</span>
                    <span>on</span> user<span>.</span>SettingCode equals setting<span>.</span>Code
                <span>select</span> <span>new</span>
                <span>{</span>
                    user<span>.</span>Id<span>,</span>
                    user<span>.</span>Name<span>,</span>
                    user<span>.</span>Area<span>,</span>
                    user<span>.</span>SettingCode<span>,</span>
                    SettingName<span>=</span>setting<span>.</span>Name<span>,</span>
                <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>
              <span>await</span> sql<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"settingName"</span><span>:</span><span>"UserName"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"settingName"</span><span>:</span><span>"AdminName"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>s0<span>]</span>.<span>[</span>Name<span>]</span> AS <span>[</span>SettingName<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>[</span>Setting<span>]</span> AS <span>[</span>s0<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span> <span>=</span> <span>[</span>s0<span>]</span>.<span>[</span>Code<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>2ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>s0<span>]</span>.<span>[</span>Name<span>]</span> AS <span>[</span>SettingName<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>[</span>Setting<span>]</span> AS <span>[</span>s0<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span> <span>=</span> <span>[</span>s0<span>]</span>.<span>[</span>Code<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br></div></div><h3 id="分表join分表"> 分表join分表</h3>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>QueryJoin2</span><span>(</span><span>)</span>
        <span>{</span>
           <span><span>var</span></span> begin <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>3</span><span>,</span> <span>2</span><span>)</span><span>;</span>
           <span><span>var</span></span> end <span>=</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>4</span><span>,</span> <span>3</span><span>)</span><span>;</span>
           <span><span>var</span></span> sql1 <span>=</span> <span>from</span> user <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span> <span>||</span> o<span>.</span>Id <span>==</span> <span>"6"</span><span>)</span>
               <span>join</span> order <span>in</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>Order<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o<span>=></span>o<span>.</span>CreationTime<span>>=</span>begin<span>&amp;&amp;</span>o<span>.</span>CreationTime<span>&lt;=</span>end<span>)</span>
                   <span>on</span> user<span>.</span>Id equals order<span>.</span>Payer
               <span>select</span> <span>new</span>
               <span>{</span>
                   user<span>.</span>Id<span>,</span>
                   user<span>.</span>Name<span>,</span>
                   user<span>.</span>Area<span>,</span>
                   user<span>.</span>SettingCode<span>,</span>
                   OrderId <span>=</span> order<span>.</span>Id<span>,</span>
                   order<span>.</span>Payer<span>,</span>
                   order<span>.</span>CreationTime
               <span>}</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span><span>await</span> sql1<span>.</span><span>ToListAsync</span><span>(</span><span>)</span><span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br></div></div><p>结果</p>
<div><pre><code><span>[</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"61"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-03T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"71"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-13T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"81"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-23T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"1"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName1"</span><span>,</span><span>"area"</span><span>:</span><span>"B"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"User"</span><span>,</span><span>"orderId"</span><span>:</span><span>"91"</span><span>,</span><span>"payer"</span><span>:</span><span>"1"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-04-02T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"66"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-08T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"76"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-18T03:03:03"</span><span>}</span><span>,</span><span>{</span><span>"id"</span><span>:</span><span>"6"</span><span>,</span><span>"name"</span><span>:</span><span>"MyName6"</span><span>,</span><span>"area"</span><span>:</span><span>"A"</span><span>,</span><span>"settingCode"</span><span>:</span><span>"Admin"</span><span>,</span><span>"orderId"</span><span>:</span><span>"86"</span><span>,</span><span>"payer"</span><span>:</span><span>"6"</span><span>,</span><span>"creationTime"</span><span>:</span><span>"2021-03-28T03:03:03"</span><span>}</span><span>]</span>
</code></pre>
<div><span>1</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>21ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>54ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_00<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202104<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>20ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@__begin_0<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span>, @__end_1<span>=</span><span>'?'</span> <span>(</span>DbType <span>=</span> DateTime2<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SELECT <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Name<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>Area<span>]</span>, <span>[</span>s<span>]</span>.<span>[</span>SettingCode<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Id<span>]</span> AS <span>[</span>OrderId<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>, <span>[</span>t<span>]</span>.<span>[</span>CreationTime<span>]</span>
      FROM <span>[</span>SysUser_01<span>]</span> AS <span>[</span>s<span>]</span>
      INNER JOIN <span>(</span>
          SELECT <span>[</span>o<span>]</span>.<span>[</span>Id<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span>, <span>[</span>o<span>]</span>.<span>[</span>Payer<span>]</span>
          FROM <span>[</span>Order_202103<span>]</span> AS <span>[</span>o<span>]</span>
          WHERE <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>>=</span> @__begin_0<span>)</span> AND <span>(</span><span>[</span>o<span>]</span>.<span>[</span>CreationTime<span>]</span> <span>&lt;=</span> @__end_1<span>)</span>
      <span>)</span> AS <span>[</span>t<span>]</span> ON <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> <span>=</span> <span>[</span>t<span>]</span>.<span>[</span>Payer<span>]</span>
      WHERE <span>[</span>s<span>]</span>.<span>[</span>Id<span>]</span> IN <span>(</span><span>'1'</span>, <span>'6'</span><span>)</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br></div></div><div><p>注意</p>
<ol>
<li>如果本次查询涉及<code>跨表</code>或者<code>跨库</code>并且查询附带<code>order by</code>那么order by的字段必须包含在返回结果里面.(聚合函数除外：count,any,sum......)</li>
<li>应该尽可能避免分表join分表,如果实在需要join那么也应该尽可能指定某一张表或者分表的数目尽可能小。(因为分表后如果a1,a2 join b1,b2那么就会有4个结果相互组合,路由结果越多性能越低，会生成笛卡尔积)</li>
</ol>
</div>
<h3 id="查询接口支持"> 查询接口支持</h3>
<table>
<thead>
<tr>
<th>方法</th>
<th>Method</th>
<th><a href="https://github.com/xuejmnet/sharding-core/blob/main/test/ShardingCore.Test50/ShardingTest.cs" target="_blank" rel="noopener noreferrer">Unit Test</a></th>
</tr>
</thead>
<tbody>
<tr>
<td>第一条</td>
<td>FindAsync</td>
<td>yes</td>
</tr>
<tr>
<td>获取集合</td>
<td>ToListAsync</td>
<td>yes</td>
</tr>
<tr>
<td>第一条</td>
<td>FirstOrDefaultAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最大</td>
<td>MaxAsync</td>
<td>yes</td>
</tr>
<tr>
<td>最小</td>
<td>MinAsync</td>
<td>yes</td>
</tr>
<tr>
<td>是否存在</td>
<td>AnyAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>CountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>数目</td>
<td>LongCountAsync</td>
<td>yes</td>
</tr>
<tr>
<td>求和</td>
<td>SumAsync</td>
<td>yes</td>
</tr>
<tr>
<td>平均</td>
<td>AverageAsync</td>
<td>yes</td>
</tr>
<tr>
<td>包含</td>
<td>ContainsAsync</td>
<td>yes</td>
</tr>
<tr>
<td>分组</td>
<td>GroupByAsync</td>
<td>yes</td>
</tr>
</tbody>
</table>
]]></content:encoded>
    </item>
    <item>
      <title>修改</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-table/update/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-table/update/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">修改</source>
      <category>使用指南</category>
      <pubDate>Thu, 04 Nov 2021 15:30:56 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="demo"> Demo</h2>
<p>本次分表的demo源码：<a href="https://github.com/xuejmnet/sharding-core/tree/main/samples/Sample.SqlServerShardingTable" target="_blank" rel="noopener noreferrer">EFCoreShardingTable</a></p>
<h2 id="自动追踪修改"> 自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            <span><span>var</span></span> i<span>=</span><span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>13ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser_01<span>]</span> SET <span>[</span>Name<span>]</span> <span>=</span> @p0
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p1<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><h2 id="非自动追踪修改"> 非自动追踪修改</h2>
<div><pre><code>        <span>public</span> <span>async</span> <span>Task<span>&lt;</span>IActionResult<span>></span></span> <span>Update1</span><span>(</span><span>)</span>
        <span>{</span>
            <span><span>var</span></span> sysUser <span>=</span> <span>await</span> _myDbContext<span>.</span><span><span>Set</span><span><span>&lt;</span>SysUser<span>></span></span></span><span>(</span><span>)</span><span>.</span><span>AsNoTracking</span><span>(</span><span>)</span><span>.</span><span>Where</span><span>(</span>o <span>=></span> o<span>.</span>Id <span>==</span> <span>"1"</span><span>)</span><span>.</span><span>FirstOrDefaultAsync</span><span>(</span><span>)</span><span>;</span>
            sysUser<span>.</span>Name <span>=</span> <span>"new name"</span><span>;</span>
            _myDbContext<span>.</span><span>Update</span><span>(</span>sysUser<span>)</span><span>;</span>
            <span><span>var</span></span> i <span>=</span> <span>await</span> _myDbContext<span>.</span><span>SaveChangesAsync</span><span>(</span><span>)</span><span>;</span>
            <span>return</span> <span>Ok</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><div><pre><code>info: Microsoft.EntityFrameworkCore.Database.Command<span>[</span><span>20101</span><span>]</span>
      Executed DbCommand <span>(</span>12ms<span>)</span> <span>[</span>Parameters<span>=</span><span>[</span>@p3<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p0<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p1<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span>, @p2<span>=</span><span>'?'</span> <span>(</span>Size <span>=</span> <span>50</span><span>)</span> <span>(</span>DbType <span>=</span> AnsiString<span>)</span><span>]</span>, <span>CommandType</span><span>=</span><span>'Text'</span>, <span>CommandTimeout</span><span>=</span><span>'30'</span><span>]</span>
      SET NOCOUNT ON<span>;</span>
      UPDATE <span>[</span>SysUser_01<span>]</span> SET <span>[</span>Area<span>]</span> <span>=</span> @p0, <span>[</span>Name<span>]</span> <span>=</span> @p1, <span>[</span>SettingCode<span>]</span> <span>=</span> @p2
      WHERE <span>[</span>Id<span>]</span> <span>=</span> @p3<span>;</span>
      SELECT @@ROWCOUNT<span>;</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br></div></div><div><p>结论</p>
<p>追踪情况下sharding-core依然可以对结果进行修改，修改的字段是被修改过后的字段</p>
<p>非追踪情况下sharding-croe也支持查询修改，但是修改的字段是全字段</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>默认路由</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-route/default-route/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/sharding-route/default-route/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">默认路由</source>
      <category>路由</category>
      <pubDate>Wed, 03 Nov 2021 00:53:03 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>注意</p>
<p>!!!默认xxxKeyLong的路由代表分片时间是毫秒的意思,需要自行判断你生成的long和<code>ShardingCoreHelper.ConvertDateTimeToLong(DateTime.Now)</code>是否一样!!!
!!!默认xxxKeyLong的路由代表分片时间是毫秒的意思,需要自行判断你生成的long和<code>ShardingCoreHelper.ConvertDateTimeToLong(DateTime.Now)</code>是否一样!!!
!!!默认xxxKeyLong的路由代表分片时间是毫秒的意思,需要自行判断你生成的long和<code>ShardingCoreHelper.ConvertDateTimeToLong(DateTime.Now)</code>是否一样!!!</p>
</div>
<h2 id="默认路由"> 默认路由</h2>
<p>分库提供了默认的路由分表则需要自己去实现,具体实现可以参考分库</p>
<table>
<thead>
<tr>
<th>抽象abstract</th>
<th>路由规则</th>
<th>tail</th>
<th>索引</th>
</tr>
</thead>
<tbody>
<tr>
<td>AbstractSimpleShardingModKeyIntVirtualTableRoute</td>
<td>取模</td>
<td>0,1,2...</td>
<td><code>=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingModKeyStringVirtualTableRoute</td>
<td>取模</td>
<td>0,1,2...</td>
<td><code>=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute</td>
<td>按时间</td>
<td>yyyyMMdd</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingDayKeyLongVirtualTableRoute</td>
<td>按时间戳</td>
<td>yyyyMMdd</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingWeekKeyDateTimeVirtualTableRoute</td>
<td>按时间</td>
<td>yyyyMMdd_dd</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingWeekKeyLongVirtualTableRoute</td>
<td>按时间戳</td>
<td>yyyyMMdd_dd</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute</td>
<td>按时间</td>
<td>yyyyMM</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingMonthKeyLongVirtualTableRoute</td>
<td>按时间戳</td>
<td>yyyyMM</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingYearKeyDateTimeVirtualTableRoute</td>
<td>按时间</td>
<td>yyyy</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
<tr>
<td>AbstractSimpleShardingYearKeyLongVirtualTableRoute</td>
<td>按时间戳</td>
<td>yyyy</td>
<td><code>&gt;,&gt;=,&lt;,&lt;=,=,contains</code></td>
</tr>
</tbody>
</table>
<p>注:<code>contains</code>表示为<code>o=&gt;ids.contains(o.shardingkey)</code>
注:使用默认的按时间分表的路由规则会让你重写一个GetBeginTime的方法这个方法必须使用静态值如:new DateTime(2021,1,1)不可以用动态值比如DateTime.Now因为每次重新启动都会调用该方法动态情况下会导致每次都不一致</p>
<h2 id="索引"> 索引</h2>
<p>所谓的索引就是支持的表达式比如支持分表字段等于某个值，那么框架就会针对这个值进行解析出对应的数据库分表应该是哪个,并且支持组合<code>and</code>、<code>or</code>。
默认提供的分表路由里面已经实现了所谓的路由，如果你的查询是包含对应的路由那么框架可以大大减小数据库链接的开启。有助于程序的高性能。</p>
<p>假设我们是按id取模，那么如果你有指定的id对应值进行查询，我们就可以直接进行对分表/分库下进行数据源和表的定位，保证查询的高效。</p>
<h3 id="abstractsimpleshardingmodkeyintvirtualtableroute"> AbstractSimpleShardingModKeyIntVirtualTableRoute</h3>
<p>该路由为简单的取模hash路由,分表字段是<code>int</code>类型,接受3个参数，第一个参数表示后缀的位数,第二位表示取模的基数，第三位是取模后缀不足的左补字符.</p>
<p>AbstractSimpleShardingModKeyIntVirtualTableRoute(3,6,'0')那么就是<code>000</code>、<code>001</code>、<code>002</code>、<code>003</code>、<code>004</code>、<code>005</code></p>
<h3 id="abstractsimpleshardingmodkeystringvirtualtableroute"> AbstractSimpleShardingModKeyStringVirtualTableRoute</h3>
<p>该路由为简单的取模hash路由,分表字段是<code>string</code>类型,接受3个参数，第一个参数表示后缀的位数,第二位表示取模的基数，第三位是取模后缀不足的左补字符.</p>
<p>AbstractSimpleShardingModKeyStringVirtualTableRoute(3,6,'0')那么就是<code>000</code>、<code>001</code>、<code>002</code>、<code>003</code>、<code>004</code>、<code>005</code></p>
<h3 id="abstractsimpleshardingdaykeydatetimevirtualtableroute"> AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute</h3>
<p>该路由为简单的按天分表路由,支持分表字段是<code>DateTime</code>,分表后的后缀为<code>yyyyMMdd</code>.</p>
<h3 id="abstractsimpleshardingdaykeylongvirtualtableroute"> AbstractSimpleShardingDayKeyLongVirtualTableRoute</h3>
<p>该路由为简单的按天分表路由,支持分表字段是<code>long</code>,分表后的后缀为<code>yyyyMMdd</code>.</p>
<div><pre><code>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//注意必须返回固定时间,不然每次启动时间都会变动</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//启动自动建表</span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>注意按天分表的路由自动建表的执行顺序为:</p>
<ol>
<li>每天的23:59:00分,&quot;0 59 23 * * ?&quot;</li>
<li>每天的00:00:00分,&quot;0 0 0 * * ?&quot;</li>
<li>每天的00:01:00分,&quot;0 1 0 * * ?&quot;</li>
</ol>
<p>分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨<code>IncrementMinutes</code>分钟来创建对应的表tail</p>
<h3 id="abstractsimpleshardingweekkeydatetimevirtualtableroute"> AbstractSimpleShardingWeekKeyDateTimeVirtualTableRoute</h3>
<p>该路由为简单的按周分表路由,支持分表字段是<code>DateTime</code>,分表后的后缀为<code>yyyyMMdd_dd</code>.</p>
<h3 id="abstractsimpleshardingweekkeylongvirtualtableroute"> AbstractSimpleShardingWeekKeyLongVirtualTableRoute</h3>
<p>该路由为简单的按周分表路由,支持分表字段是<code>long</code>,分表后的后缀为<code>yyyyMMdd_dd</code>.</p>
<div><pre><code>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//注意必须返回固定时间,不然每次启动时间都会变动</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//启动自动建表</span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>注意按周分表的路由自动建表的执行顺序为:</p>
<ol>
<li>每次周末的23:59:00分,&quot;0 59 23 ? * 1&quot;</li>
<li>每次周一的00:00:00分,&quot;0 0 0 ? * 2&quot;</li>
<li>每次周一的00:01:00分,&quot;0 1 0 ? * 2&quot;</li>
</ol>
<p>分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨<code>IncrementMinutes</code>分钟来创建对应的表tail</p>
<h3 id="abstractsimpleshardingmonthkeydatetimevirtualtableroute"> AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute</h3>
<p>该路由为简单的按月分表路由,支持分表字段是<code>DateTime</code>,分表后的后缀为<code>yyyyMM</code>.</p>
<h3 id="abstractsimpleshardingmonthkeylongvirtualtableroute"> AbstractSimpleShardingMonthKeyLongVirtualTableRoute</h3>
<p>该路由为简单的按月分表路由,支持分表字段是<code>long</code>,分表后的后缀为<code>yyyyMM</code>.</p>
<div><pre><code>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//注意必须返回固定时间,不然每次启动时间都会变动</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//启动自动建表</span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>注意按月分表的路由自动建表的执行顺序为:</p>
<ol>
<li>每月的28、29、30、31日的23:59:00分,&quot;0 59 23 28,29,30,31 * ?&quot;</li>
<li>每月的1日的00:00:00分,&quot;0 0 0 1 * ?&quot;</li>
<li>每月的1日的00:01:00分,&quot;0 1 0 1 * ?&quot;</li>
</ol>
<p>分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨<code>IncrementMinutes</code>分钟来创建对应的表tail</p>
<h3 id="abstractsimpleshardingyearkeydatetimevirtualtableroute"> AbstractSimpleShardingYearKeyDateTimeVirtualTableRoute</h3>
<p>该路由为简单的按年分表路由,支持分表字段是<code>DateTime</code>,分表后的后缀为<code>yyyy</code>.</p>
<h3 id="abstractsimpleshardingyearkeylongvirtualtableroute"> AbstractSimpleShardingYearKeyLongVirtualTableRoute</h3>
<p>该路由为简单的按年分表路由,支持分表字段是<code>long</code>,分表后的后缀为<code>yyyy</code>.</p>
<div><pre><code>
        <span>public</span> <span>override</span> <span>DateTime</span> <span>GetBeginTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>//注意必须返回固定时间,不然每次启动时间都会变动</span>
            <span>return</span> <span>new</span> <span>DateTime</span><span>(</span><span>2021</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span><span>;</span>
        <span>}</span>
        <span>//启动自动建表</span>
        <span>public</span> <span>override</span> <span><span>bool</span></span> <span>AutoCreateTableByTime</span><span>(</span><span>)</span>
        <span>{</span>
            <span>return</span> <span>true</span><span>;</span>
        <span>}</span>
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>注意按年分表的路由自动建表的执行顺序为:</p>
<ol>
<li>每年的31日的23:59:00分,&quot;0 59 23 31 12 ?&quot;</li>
<li>每年的1日的00:00:00分,&quot;0 0 0 1 1 ?&quot;</li>
<li>每年的1日的00:01:00分,&quot;0 1 0 1 1 ?&quot;</li>
</ol>
<p>分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨<code>IncrementMinutes</code>分钟来创建对应的表tail</p>
<p><strong>注意：所有的定时任务都可以设置为false,并且可以使用自身的定时任务来实现动态的创建表和添加表后缀</strong></p>
<h2 id="时间分表的定时信息"> 时间分表的定时信息</h2>
<p>为了保证可以让程序卡点发布还能正确创建对应的表信息和知道现有的表,所以存在三个节点进行创建表。
但是可能会出现重复创建表的信息，也会出现表没创建的其他原因导致程序执行失败，所以这边对其进行了日志的过滤用户可以再使用默认的时间分表的情况下选择重写<code>ShowErrorLog</code>属性来输出任务执行时候的建表异常信息。</p>
<div><p>注意</p>
<p>！！！重写<code>GetCronExpressions()</code>方法后,请一定要重写<code>IncrementMinutes</code>值！！！</p>
<p>！！！重写<code>GetCronExpressions()</code>方法后,请一定要重写<code>IncrementMinutes</code>值！！！</p>
<p>！！！重写<code>GetCronExpressions()</code>方法后,请一定要重写<code>IncrementMinutes</code>值！！！</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>单元测试覆盖率</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/unit-test-coverage/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/unit-test-coverage/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">单元测试覆盖率</source>
      <category>单元测试覆盖率</category>
      <pubDate>Tue, 30 Nov 2021 01:40:55 GMT</pubDate>
      <content:encoded><![CDATA[<img src="/sharding-core-doc/unit-test-coverage.png">]]></content:encoded>
    </item>
    <item>
      <title>多租户</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/tenant/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/tenant/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">多租户</source>
      <category>多租户</category>
      <pubDate>Tue, 11 Jan 2022 00:08:16 GMT</pubDate>
      <content:encoded><![CDATA[<h2 id="背景"> 背景</h2>
<p>因为之前有小伙伴在使用<code>ShardingCore</code>的时候问过我是否可以利用ShardingCore的分库功能实现多租户呢，我的回答是可以的，但是需要针对分库对象进行路由的编写，相当于我一个项目需要实现多租户所有的表都需要实现分库才可以，那么这个在实际应用中将是不切实际的，所以虽然分库可以用来进行多租户但是一般没人会真的这样操作，那么就没有办法在ShardingCore使用合理的多租户外加分表分库了吗，针对这个问题<code>ShardingCore</code>在新的版本x.4.x.x+中进行了实现,<a href="https://www.cnblogs.com/xuejiaming/p/15782298.html" target="_blank" rel="noopener noreferrer">博客</a></p>
<h2 id="功能"> 功能</h2>
<p><code>ShardingCore</code>x.4.x.x+版本中具体实现了哪些功能呢</p>
<ul>
<li>多配置支持,可以针对每个租户或者这个配置进行单独的分表分库读写分离的链接配置</li>
<li>多数据库配置，支持多配置下每个配置都可以拥有自己的数据库来进行分表分库读写分离</li>
<li>动态多配置，支持动态添加多配置(目前不支持动态删减多配置,后续会支持如果有需要)</li>
</ul>
<h2 id="场景"> 场景</h2>
<p>假设我们有这么一个多租户系统，这个系统在我们创建好账号后会分配给我们一个单独的数据库和对应的表信息,之后用户可以利用这个租户配置信息进行操作处理</p>
<h2 id="首先我们创建一个aspnetcore的项目"> 首先我们创建一个AspNetCore的项目</h2>
<p><img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220109204747170-1484976526.png" alt="" />
这边才用的.Net6版本的webapi</p>
<h2 id="添加依赖"> 添加依赖</h2>
<p><img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220110135052157-537177258.png" alt="" /></p>
<p>这边我们添加了三个包,分别是<code>ShardingCore</code>,<code>Microsoft.EntityFrameworkCore.SqlServer</code>,<code>Pomelo.EntityFrameworkCore.MySql</code>,其中<code>ShardingCore</code>用的是预览版的如果不勾选那么将无法显示出来,为什么我们需要添加额外的两个数据库驱动呢,原因是因为我们需要在不同的租户下实现不同的数据库的配置,比如租户A和我们签订的协议里面有说明系统使用开源数据库,或者希望使用Linux平台那么可以针对租户A进行配置<code>MySql</code>或者<code>PgSql</code>,租户B是资深软粉说需要使用<code>MSSQL</code>那么就可以针对其配置<code>MSSQL</code>.一般情况下我们可能不会出现多数据库的情况但是为了照顾到特殊情况我们这边也针对这种情况进行了支持。</p>
<h2 id="公共用户存储"> 公共用户存储</h2>
<p>首先在我还没有创建租户的时候是不存在数据库的所以我的数据自然而然不会存在当前租户下,这边我们采用的是存储到其他数据库中,假设我们使用一个公共的数据库作为用户系统.</p>
<h3 id="创建用户系统"> 创建用户系统</h3>
<p>创建系统用户和创建系统用户在数据库内的映射关系</p>
<div><pre><code>    public class SysUser
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public string Password { get; set; }
        public DateTime CreationTime { get; set; }
        public bool IsDeleted { get; set; }
    }
    public class SysUserMap:IEntityTypeConfiguration&lt;SysUser&gt;
    {
        public void Configure(EntityTypeBuilder&lt;SysUser&gt; builder)
        {
            builder.HasKey(o =&gt; o.Id);
            builder.Property(o =&gt; o.Id).IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.Property(o =&gt; o.Name).IsRequired().HasMaxLength(50);
            builder.Property(o =&gt; o.Password).IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.HasQueryFilter(o =&gt; o.IsDeleted == false);
            builder.ToTable(nameof(SysUser));
        }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br></div></div><p>创建这个数据库该有的配置信息表，便于后期启动后重建</p>
<div><pre><code>    public class SysUserTenantConfig
    {
        public string Id { get; set; }
        public string UserId { get; set; }
        /// &lt;summary&gt;
        /// 添加ShardingCore配置的Json包
        /// &lt;/summary&gt;
        public string ConfigJson { get; set; }
        public DateTime CreationTime { get; set; }
        public bool IsDeleted { get; set; }
    }
    public class SysUserTenantConfigMap:IEntityTypeConfiguration&lt;SysUserTenantConfig&gt;
    {
        public void Configure(EntityTypeBuilder&lt;SysUserTenantConfig&gt; builder)
        {
            builder.HasKey(o =&gt; o.Id);
            builder.Property(o =&gt; o.Id).IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.Property(o =&gt; o.UserId).IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.Property(o =&gt; o.ConfigJson).IsRequired().HasMaxLength(2000);
            builder.HasQueryFilter(o =&gt; o.IsDeleted == false);
            builder.ToTable(nameof(SysUserTenantConfig));
        }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></div></div><p>创建对应的系统用户存储DbContext</p>
<div><pre><code>
    public class IdentityDbContext:DbContext
    {
        public IdentityDbContext(DbContextOptions&lt;IdentityDbContext&gt; options):base(options)
        {
            
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);
            modelBuilder.ApplyConfiguration(new SysUserMap());
            modelBuilder.ApplyConfiguration(new SysUserTenantConfigMap());
        }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br></div></div><h3 id="创建一个租户的dbcontext"> 创建一个租户的DbContext</h3>
<div><pre><code>    public class TenantDbContext:AbstractShardingDbContext,IShardingTableDbContext
    {
        public TenantDbContext(DbContextOptions&lt;TenantDbContext&gt; options) : base(options)
        {
        }

        public IRouteTail RouteTail { get; set; }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>目前我们先定义好后续进行编写内部的租户代码</p>
<h3 id="创建动态租户参数"> 创建动态租户参数</h3>
<p>动态租户分片配置信息在<code>ShardingCore</code>只需要实现<code>IVirtualDataSourceConfigurationParams&lt;TShardingDbContext&gt;</code>接口,但是这个接口有很多参数需要填写,所以这边框架针对这个接口进行了默认参数的抽象类<code>AbstractVirtualDataSourceConfigurationParams&lt;TShardingDbContext&gt;</code>。
这边我们针对配置参数进行配置采用新建一个配置json的对象</p>
<div><pre><code>    public class ShardingTenantOptions
    {
        public  string ConfigId { get; set;}
        public  int Priority { get; set;}
        public  string DefaultDataSourceName { get; set;}
        public  string DefaultConnectionString { get; set;}
        public DbTypeEnum DbType { get; set; }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br></div></div><p>参数里面配置了当前数据库,这边比较简单我们就暂时使用单表分库的模式来实现,目前暂时不对每个租户分库进行演示。之后并且编写<code>SqlServer</code>和<code>MySql</code>的配置支持</p>
<div><pre><code>
    public class SqlShardingConfiguration : AbstractVirtualDataSourceConfigurationParams&lt;TenantDbContext&gt;
    {
        private static readonly ILoggerFactory efLogger = LoggerFactory.Create(builder =&gt;
        {
            builder.AddFilter((category, level) =&gt; category == DbLoggerCategory.Database.Command.Name &amp;&amp; level == LogLevel.Information).AddConsole();
        });
        public override string ConfigId { get; }
        public override int Priority { get; }
        public override string DefaultDataSourceName { get; }
        public override string DefaultConnectionString { get; }
        public override ITableEnsureManager TableEnsureManager { get; }

        private readonly DbTypeEnum _dbType;
        public SqlShardingConfiguration(ShardingTenantOptions options)
        {
            ConfigId = options.ConfigId;
            Priority = options.Priority;
            DefaultDataSourceName = options.DefaultDataSourceName;
            DefaultConnectionString = options.DefaultConnectionString;
            _dbType = options.DbType;
            //用来快速判断是否存在数据库中的表
            if (_dbType == DbTypeEnum.MSSQL)
            {
                TableEnsureManager = new SqlServerTableEnsureManager&lt;TenantDbContext&gt;();
            }
            else if (_dbType == DbTypeEnum.MYSQL)
            {
                TableEnsureManager = new MySqlTableEnsureManager&lt;TenantDbContext&gt;();
            }
            else
            {
                throw new NotImplementedException();
            }
        }
        public override DbContextOptionsBuilder UseDbContextOptionsBuilder(string connectionString,
            DbContextOptionsBuilder dbContextOptionsBuilder)
        {
            switch (_dbType)
            {
                case DbTypeEnum.MSSQL:
                    {
                        dbContextOptionsBuilder.UseSqlServer(connectionString).UseLoggerFactory(efLogger);
                    }
                    break;
                case DbTypeEnum.MYSQL:
                    {
                        dbContextOptionsBuilder.UseMySql(connectionString, new MySqlServerVersion(new Version())).UseLoggerFactory(efLogger);
                    }
                    break;
                default: throw new NotImplementedException();
            }
            return dbContextOptionsBuilder;
        }

        public override DbContextOptionsBuilder UseDbContextOptionsBuilder(DbConnection dbConnection,
            DbContextOptionsBuilder dbContextOptionsBuilder)
        {
            switch (_dbType)
            {
                case DbTypeEnum.MSSQL:
                {
                    dbContextOptionsBuilder.UseSqlServer(dbConnection).UseLoggerFactory(efLogger);
                    }
                    break;
                case DbTypeEnum.MYSQL:
                {
                    dbContextOptionsBuilder.UseMySql(dbConnection, new MySqlServerVersion(new Version())).UseLoggerFactory(efLogger);
                    }
                    break;
                default: throw new NotImplementedException();
            }
            return dbContextOptionsBuilder;
        }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br></div></div><h3 id="编写用户注册接口"> 编写用户注册接口</h3>
<div><pre><code>
    [Route(&quot;api/[controller]/[action]&quot;)]
    [ApiController]
    [AllowAnonymous]
    public class PassportController:ControllerBase
    {
        private readonly IdentityDbContext _identityDbContext;

        public PassportController(IdentityDbContext identityDbContext)
        {
            _identityDbContext = identityDbContext;
        }
        [HttpPost]
        public async Task&lt;IActionResult&gt; Register(RegisterRequest request)
        {
            if (await _identityDbContext.Set&lt;SysUser&gt;().AnyAsync(o =&gt; o.Name == request.Name))
                return BadRequest(&quot;user not exists&quot;);
            var sysUser = new SysUser()
            {
                Id = Guid.NewGuid().ToString(&quot;n&quot;),
                Name = request.Name,
                Password = request.Password,
                CreationTime=DateTime.Now
            };
            var shardingTenantOptions = new ShardingTenantOptions()
            {
                ConfigId = sysUser.Id,
                Priority = new Random().Next(1,10),
                DbType = request.DbType,
                DefaultDataSourceName = &quot;ds0&quot;,
                DefaultConnectionString = GetDefaultString(request.DbType,sysUser.Id)
            };
            var sysUserTenantConfig = new SysUserTenantConfig()
            {
                Id = Guid.NewGuid().ToString(&quot;n&quot;),
                UserId = sysUser.Id,
                CreationTime = DateTime.Now,
                ConfigJson = JsonConvert.SerializeObject(shardingTenantOptions)
            };
            await _identityDbContext.AddAsync(sysUser);
            await _identityDbContext.AddAsync(sysUserTenantConfig);
            await _identityDbContext.SaveChangesAsync();
            //注册完成后进行配置生成
            DynamicShardingHelper.DynamicAppendVirtualDataSourceConfig(new SqlShardingConfiguration(shardingTenantOptions));
            return Ok();
        }
        [HttpPost]
        public async Task&lt;IActionResult&gt; Login(LoginRequest request)
        {
            var sysUser = await _identityDbContext.Set&lt;SysUser&gt;().FirstOrDefaultAsync(o=&gt;o.Name==request.Name&amp;&amp;o.Password==request.Password);
            if (sysUser == null)
                return BadRequest(&quot;name or password error&quot;);

            //秘钥，就是标头，这里用Hmacsha256算法，需要256bit的密钥
            var securityKey = new SigningCredentials(new SymmetricSecurityKey(Encoding.ASCII.GetBytes(&quot;123123!@#!@#123123&quot;)), SecurityAlgorithms.HmacSha256);
            //Claim，JwtRegisteredClaimNames中预定义了好多种默认的参数名，也可以像下面的Guid一样自己定义键名.
            //ClaimTypes也预定义了好多类型如role、email、name。Role用于赋予权限，不同的角色可以访问不同的接口
            //相当于有效载荷
            var claims = new Claim[] {
                new Claim(JwtRegisteredClaimNames.Iss,&quot;https://localhost:5000&quot;),
                new Claim(JwtRegisteredClaimNames.Aud,&quot;api&quot;),
                new Claim(&quot;id&quot;,Guid.NewGuid().ToString(&quot;n&quot;)),
                new Claim(&quot;uid&quot;,sysUser.Id),
            };
            SecurityToken securityToken = new JwtSecurityToken(
                signingCredentials: securityKey,
                expires: DateTime.Now.AddHours(2),//过期时间
                claims: claims
            );
            var token = new JwtSecurityTokenHandler().WriteToken(securityToken);
            return Ok(token);
        }

        private string GetDefaultString(DbTypeEnum dbType, string userId)
        {
            switch (dbType)
            {
                case DbTypeEnum.MSSQL: return $&quot;Data Source=localhost;Initial Catalog=DB{userId};Integrated Security=True;&quot;;
                case DbTypeEnum.MYSQL: return $&quot;server=127.0.0.1;port=3306;database=DB{userId};userid=root;password=L6yBtV6qNENrwBy7;&quot;;
                default: throw new NotImplementedException();
            }
        }
    }
    
    public class RegisterRequest
    {
        public string Name { get; set; }
        public string Password { get; set; }
        public DbTypeEnum DbType { get; set; }
    }

    public class LoginRequest
    {
        public string Name { get; set; }
        public string Password { get; set; }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br><span>74</span><br><span>75</span><br><span>76</span><br><span>77</span><br><span>78</span><br><span>79</span><br><span>80</span><br><span>81</span><br><span>82</span><br><span>83</span><br><span>84</span><br><span>85</span><br><span>86</span><br><span>87</span><br><span>88</span><br><span>89</span><br><span>90</span><br><span>91</span><br><span>92</span><br><span>93</span><br><span>94</span><br><span>95</span><br><span>96</span><br></div></div><p>简单来说明一下,这边我们采用的是用户的id作为租户id,将租户id作为数据库配置,来支持多配置模式。到此为止我们的用户系统就已经完成了是不是十分的简单仅仅几段代码,用户这边注册完成后将会创建对应的数据库和对应的表,如果你是分表的那么将会自动创建对应的数据库表等信息。</p>
<h2 id="租户系统"> 租户系统</h2>
<p>租户系统我们做一个订单的简单演示,使用订单id取模,取模取5来进行分表操作</p>
<h3 id="新增租户系统的订单信息"> 新增租户系统的订单信息</h3>
<div><pre><code>    public class Order
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public DateTime CreationTime { get; set; }
        public bool IsDeleted { get; set; }
    }
    public class OrderMap:IEntityTypeConfiguration&lt;Order&gt;
    {
        public void Configure(EntityTypeBuilder&lt;Order&gt; builder)
        {
            builder.HasKey(o =&gt; o.Id);
            builder.Property(o =&gt; o.Id).IsRequired().IsUnicode(false).HasMaxLength(50);
            builder.Property(o =&gt; o.Name).IsRequired().HasMaxLength(100);
            builder.HasQueryFilter(o =&gt; o.IsDeleted == false);
            builder.ToTable(nameof(Order));
        }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br></div></div><h3 id="新增订单路由"> 新增订单路由</h3>
<div><pre><code>public class OrderVirtualTableRoute:AbstractSimpleShardingModKeyStringVirtualTableRoute&lt;Order&gt;
{
      public OrderVirtualTableRoute() : base(2, 5)
      {
      }

      public override void Configure(EntityMetadataTableBuilder&lt;Order&gt; builder)
      {
          builder.ShardingProperty(o =&gt; o.Id);
      }
}
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br></div></div><p>简单的字符串取模</p>
<h3 id="添加租户中间件"> 添加租户中间件</h3>
<p>添加租户中间件,在系统中如果使用多配置那么就必须要指定本次创建的dbcontext使用的是哪个配置</p>
<div><pre><code>
    public class TenantSelectMiddleware
    {
        private readonly RequestDelegate _next;
        private readonly IVirtualDataSourceManager&lt;TenantDbContext&gt; _virtualDataSourceManager;

        public TenantSelectMiddleware(RequestDelegate next, IVirtualDataSourceManager&lt;TenantDbContext&gt; virtualDataSourceManager)
        {
            _next = next;
            _virtualDataSourceManager = virtualDataSourceManager;
        }

        public async Task Invoke(HttpContext context)
        {

            if (context.Request.Path.ToString().StartsWith(&quot;/api/tenant&quot;, StringComparison.CurrentCultureIgnoreCase))
            {
                if (!context.User.Identity.IsAuthenticated)
                {
                    await DoUnAuthorized(context, &quot;not found tenant id&quot;);
                    return;
                }

                var tenantId = context.User.Claims.FirstOrDefault((o) =&gt; o.Type == &quot;uid&quot;)?.Value;
                if (string.IsNullOrWhiteSpace(tenantId))
                {
                    await DoUnAuthorized(context, &quot;not found tenant id&quot;);
                    return;
                }

                using (_virtualDataSourceManager.CreateScope(tenantId))
                {
                    await _next(context);
                }
            }
            else
            {
                await _next(context);
            }
        }

        private async Task DoUnAuthorized(HttpContext context, string msg)
        {
            context.Response.StatusCode = 403;
            await context.Response.WriteAsync(msg);
        }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br></div></div><p>该中间件拦截<code>/api/tenant</code>路径下的所有请求并且针对这些请求添加对应的租户信息</p>
<h3 id="配置租户扩展初始化数据"> 配置租户扩展初始化数据</h3>
<div><pre><code>
    public static class TenantExtension
    {
        public static void InitTenant(this IServiceProvider serviceProvider)
        {
            using (var scope = serviceProvider.CreateScope())
            {
                var identityDbContext = scope.ServiceProvider.GetRequiredService&lt;IdentityDbContext&gt;();
                identityDbContext.Database.EnsureCreated();
                var sysUserTenantConfigs = identityDbContext.Set&lt;SysUserTenantConfig&gt;().ToList();
                if (sysUserTenantConfigs.Any())
                {
                    foreach (var sysUserTenantConfig in sysUserTenantConfigs)
                    {
                        var shardingTenantOptions = JsonConvert.DeserializeObject&lt;ShardingTenantOptions&gt;(sysUserTenantConfig.ConfigJson);
                        DynamicShardingHelper.DynamicAppendVirtualDataSourceConfig(
                            new SqlShardingConfiguration(shardingTenantOptions));
                    }
                }
            }
        }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br></div></div><p>这边因为我们针对租户信息进行了初始化而不是硬编码,所以需要一个在启动的时候对租户信息进行动态添加</p>
<h3 id="配置多租户"> 配置多租户</h3>
<p>启动配置<code>Startup</code></p>
<div><pre><code>
var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

builder.Services.AddControllers();
builder.Services.AddAuthentication();
#region 用户系统配置

builder.Services.AddDbContext&lt;IdentityDbContext&gt;(o =&gt;
    o.UseSqlServer(&quot;Data Source=localhost;Initial Catalog=IdDb;Integrated Security=True;&quot;));
//生成密钥
var keyByteArray = Encoding.ASCII.GetBytes(&quot;123123!@#!@#123123&quot;);
var signingKey = new SymmetricSecurityKey(keyByteArray);
//认证参数
builder.Services.AddAuthentication(&quot;Bearer&quot;)
    .AddJwtBearer(o =&gt;
    {
        o.TokenValidationParameters = new TokenValidationParameters
        {
            ValidateIssuerSigningKey = true,
            IssuerSigningKey = signingKey,
            ValidateIssuer = true,
            ValidIssuer = &quot;https://localhost:5000&quot;,
            ValidateAudience = true,
            ValidAudience = &quot;api&quot;,
            ValidateLifetime = true,
            ClockSkew = TimeSpan.Zero,
            RequireExpirationTime = true,
        };
    });
#endregion
#region 配置ShardingCore
builder.Services.AddShardingDbContext&lt;TenantDbContext&gt;()
    .AddEntityConfig(op =&gt;
    {
        op.CreateShardingTableOnStart = true;
        op.EnsureCreatedWithOutShardingTable = true;
        op.AddShardingTableRoute&lt;OrderVirtualTableRoute&gt;();
    })
    .AddConfig(op =&gt;
    {
        //默认配置一个
        op.ConfigId = $&quot;test_{Guid.NewGuid():n}&quot;;
        op.Priority = 99999;
        op.AddDefaultDataSource(&quot;ds0&quot;, &quot;Data Source=localhost;Initial Catalog=TestTenantDb;Integrated Security=True;&quot;);
        op.UseShardingQuery((conStr, b) =&gt;
        {
            b.UseSqlServer(conStr);
        });
        op.UseShardingTransaction((conn, b) =&gt;
        {
            b.UseSqlServer(conn);
        });
    }).EnsureMultiConfig(ShardingConfigurationStrategyEnum.ThrowIfNull);

#endregion

var app = builder.Build();

// Configure the HTTP request pipeline.
app.Services.GetRequiredService&lt;IShardingBootstrapper&gt;().Start();
//初始化启动配置租户信息
app.Services.InitTenant();
app.UseAuthorization();
app.UseAuthorization();
//在认证后启用租户选择中间件
app.UseMiddleware&lt;TenantSelectMiddleware&gt;();

app.MapControllers();

app.Run();

</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br><span>39</span><br><span>40</span><br><span>41</span><br><span>42</span><br><span>43</span><br><span>44</span><br><span>45</span><br><span>46</span><br><span>47</span><br><span>48</span><br><span>49</span><br><span>50</span><br><span>51</span><br><span>52</span><br><span>53</span><br><span>54</span><br><span>55</span><br><span>56</span><br><span>57</span><br><span>58</span><br><span>59</span><br><span>60</span><br><span>61</span><br><span>62</span><br><span>63</span><br><span>64</span><br><span>65</span><br><span>66</span><br><span>67</span><br><span>68</span><br><span>69</span><br><span>70</span><br><span>71</span><br><span>72</span><br><span>73</span><br></div></div><h3 id="编写租户操作"> 编写租户操作</h3>
<div><pre><code>
    [Route(&quot;api/tenant/[controller]/[action]&quot;)]
    [ApiController]
    [Authorize(AuthenticationSchemes = &quot;Bearer&quot;)]
    public class TenantController : ControllerBase
    {
        private readonly TenantDbContext _tenantDbContext;

        public TenantController(TenantDbContext tenantDbContext)
        {
            _tenantDbContext = tenantDbContext;
        }
        public async Task&lt;IActionResult&gt; AddOrder()
        {
            var order = new Order()
            {
                Id = Guid.NewGuid().ToString(&quot;n&quot;),
                CreationTime = DateTime.Now,
                Name = new Random().Next(1,100)+&quot;_name&quot;
            };
            await _tenantDbContext.AddAsync(order);
            await _tenantDbContext.SaveChangesAsync();
            return Ok(order.Id);
        }
        public async Task&lt;IActionResult&gt; UpdateOrder([FromQuery]string id)
        {
            var order =await _tenantDbContext.Set&lt;Order&gt;().FirstOrDefaultAsync(o=&gt;o.Id==id);
            if (order == null) return BadRequest();
            order.Name = new Random().Next(1, 100) + &quot;_name&quot;;
            await _tenantDbContext.SaveChangesAsync();
            return Ok(order.Id);
        }
        public async Task&lt;IActionResult&gt; GetOrders()
        {
            var orders =await _tenantDbContext.Set&lt;Order&gt;().ToListAsync();
            return Ok(orders);
        }
    }
</code></pre>
<div><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br><span>27</span><br><span>28</span><br><span>29</span><br><span>30</span><br><span>31</span><br><span>32</span><br><span>33</span><br><span>34</span><br><span>35</span><br><span>36</span><br><span>37</span><br><span>38</span><br></div></div><h2 id="启动项目"> 启动项目</h2>
<p>这边我们基本上已经配置好我们所需要的之后我们就可以直接启动项目了
<img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220110213028837-1684806586.png" alt="" /></p>
<p>这边我们通过接口注册了一个TenantA的用户并且选择了使用MSSQL,这边成就帮我们自动生成好了对应的数据库表结构
接下来我么再注册一个TenantB用户选择MySql
<img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220110213234665-1363047961.png" alt="" /></p>
<p>通过截图我们可以看到<code>ShardingCore</code>也是为我们创建好了对应的数据库和对应的表信息</p>
<h2 id="登录租户"> 登录租户</h2>
<p>首先我们登录</p>
<p>TenantA用户token</p>
<div><pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiYXBpIiwiaWQiOiJkNGMwZjZiNzI5MzE0M2VlYWM0Yjg3NzUwYzE4MWUzOSIsInVpZCI6ImMxMWRkZjFmNTY0MjQwZjc5YTQzNTEzZGMwNmVjZGMxIiwiZXhwIjoxNjQxODI4ODQ0fQ.zJefwnmcIEZm-kizlN7DhwTRgGxiCg52Esa8QmHiEKY
</code></pre>
<div><span>1</span><br></div></div><p>TenantB用户token</p>
<div><pre><code>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJodHRwczovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoiYXBpIiwiaWQiOiIwNzY4NzUwMmVjYzY0NTMyOGFkNTcwZDRkYjMwNDI3MSIsInVpZCI6ImVkODg4YTc3MzAwYTQ4NjZhYmUyNWY2MTE1NmEwZTQzIiwiZXhwIjoxNjQxODI4ODgxfQ.cL0d010jdXLXNGT8M0wsRMqn3VeIxFnV0keM0H3SPzo
</code></pre>
<div><span>1</span><br></div></div><p>接下来我们分别对两个租户进行交叉处理</p>
<h3 id="addorder"> AddOrder</h3>
<p>租户A插入一个订单,订单Id：<code>aef6905f512a4f72baac5f149ef32d21</code>
<img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220110214024317-2049319166.png" alt="" /></p>
<p>TenantB用户也插入一个订单,订单id:<code>450f5dd0e82442eca33dfcf3d57fafa3</code>
<img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220110214159011-2067776275.png" alt="" />
两个用户处理
<img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220110214520461-1662296101.png" alt="" /></p>
<p>通过日志打印明显能够感觉出来两者是区分了不同的数据库</p>
<h3 id="updateorder"> UpdateOrder</h3>
<p><img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220110214426755-139567743.png" alt="" /></p>
<h3 id="getorders"> GetOrders</h3>
<p><img src="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220110214805352-462848018.png" alt="" /></p>
<h2 id="总结"> 总结</h2>
<p>通过上述功能的演示相信很多小伙伴应该已经知道他具体的运作流程了,通过配置多个租户信息,在<code>ShardingCore</code>上实现多配置,动态配置,来保证在多租户模式下的分表分库读写分离依然可以使用,并且拥有跟好的适泛性。
如果你需要开发一个大型程序,领导上来就是分库分表,那么在以前大概率是会花费非常多的精力在处理分片这件事情上,而最终项目是否可以做完并且使用还是一个巨大的问题,但是现在不一样了,毕竟<code>ShardingCore</code>之前并没有一款非常好用的分片组件在.net上,并且拥有非常完美的orm作为支持，基本上重来没有一个框架说多租户模式是可以选择数据库的,之前市面上所有的多租户你只能选择一种数据库,目前.Net在开源的状态下我相信会有越来越好的组件框架诞生,毕竟这么好的语言如果配上丰富的生态那将是所有.Neter的福音。</p>
]]></content:encoded>
      <enclosure url="https://img2020.cnblogs.com/blog/1346660/202201/1346660-20220109204747170-1484976526.png" type="image/png"/>
    </item>
    <item>
      <title>Slide page</title>
      <link>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/slides/</link>
      <guid>https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/slides/</guid>
      <source url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/rss.xml">Slide page</source>
      <pubDate>Tue, 02 Nov 2021 08:39:31 GMT</pubDate>
      <content:encoded><![CDATA[
<i>Not supported content</i>]]></content:encoded>
      <enclosure url="https://vuepress-theme-hope-demo.mrhope.site/sharding-core-doc/logo.svg" type="image/svg+xml"/>
    </item>
  </channel>
</rss>