(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{572:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"默认路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认路由"}},[t._v("#")]),t._v(" 默认路由")]),t._v(" "),s("p",[t._v("分库提供了默认的路由分表则需要自己去实现,具体实现可以参考分库")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("抽象abstract")]),t._v(" "),s("th",[t._v("路由规则")]),t._v(" "),s("th",[t._v("tail")]),t._v(" "),s("th",[t._v("索引")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("AbstractSimpleShardingModKeyIntVirtualTableRoute")]),t._v(" "),s("td",[t._v("取模")]),t._v(" "),s("td",[t._v("0,1,2...")]),t._v(" "),s("td",[s("code",[t._v("=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingModKeyStringVirtualTableRoute")]),t._v(" "),s("td",[t._v("取模")]),t._v(" "),s("td",[t._v("0,1,2...")]),t._v(" "),s("td",[s("code",[t._v("=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间")]),t._v(" "),s("td",[t._v("yyyyMMdd")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingDayKeyLongVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间戳")]),t._v(" "),s("td",[t._v("yyyyMMdd")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingWeekKeyDateTimeVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间")]),t._v(" "),s("td",[t._v("yyyyMMdd_dd")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingWeekKeyLongVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间戳")]),t._v(" "),s("td",[t._v("yyyyMMdd_dd")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间")]),t._v(" "),s("td",[t._v("yyyyMM")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingMonthKeyLongVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间戳")]),t._v(" "),s("td",[t._v("yyyyMM")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingYearKeyDateTimeVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间")]),t._v(" "),s("td",[t._v("yyyy")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingYearKeyLongVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间戳")]),t._v(" "),s("td",[t._v("yyyy")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])])])]),t._v(" "),s("p",[t._v("注:"),s("code",[t._v("contains")]),t._v("表示为"),s("code",[t._v("o=>ids.contains(o.shardingkey)")]),t._v("\n注:使用默认的按时间分表的路由规则会让你重写一个GetBeginTime的方法这个方法必须使用静态值如:new DateTime(2021,1,1)不可以用动态值比如DateTime.Now因为每次重新启动都会调用该方法动态情况下会导致每次都不一致")]),t._v(" "),s("h2",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("p",[t._v("所谓的索引就是支持的表达式比如支持分表字段等于某个值，那么框架就会针对这个值进行解析出对应的数据库分表应该是哪个,并且支持组合"),s("code",[t._v("and")]),t._v("、"),s("code",[t._v("or")]),t._v("。\n默认提供的分表路由里面已经实现了所谓的路由，如果你的查询是包含对应的路由那么框架可以大大减小数据库链接的开启。有助于程序的高性能。")]),t._v(" "),s("p",[t._v("假设我们是按id取模，那么如果你有指定的id对应值进行查询，我们就可以直接进行对分表/分库下进行数据源和表的定位，保证查询的高效。")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingmodkeyintvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingmodkeyintvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingModKeyIntVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的取模hash路由,分表字段是"),s("code",[t._v("int")]),t._v("类型,接受3个参数，第一个参数表示后缀的位数,第二位表示取模的基数，第三位是取模后缀不足的左补字符.")]),t._v(" "),s("p",[t._v("AbstractSimpleShardingModKeyStringVirtualTableRoute(3,6,'0')那么就是"),s("code",[t._v("000")]),t._v("、"),s("code",[t._v("001")]),t._v("、"),s("code",[t._v("002")]),t._v("、"),s("code",[t._v("003")]),t._v("、"),s("code",[t._v("004")]),t._v("、"),s("code",[t._v("005")])]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingmodkeystringvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingmodkeystringvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingModKeyStringVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的取模hash路由,分表字段是"),s("code",[t._v("string")]),t._v("类型,接受3个参数，第一个参数表示后缀的位数,第二位表示取模的基数，第三位是取模后缀不足的左补字符.")]),t._v(" "),s("p",[t._v("AbstractSimpleShardingModKeyStringVirtualTableRoute(3,6,'0')那么就是"),s("code",[t._v("000")]),t._v("、"),s("code",[t._v("001")]),t._v("、"),s("code",[t._v("002")]),t._v("、"),s("code",[t._v("003")]),t._v("、"),s("code",[t._v("004")]),t._v("、"),s("code",[t._v("005")])]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingdaykeydatetimevirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingdaykeydatetimevirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按天分表路由,支持分表字段是"),s("code",[t._v("DateTime")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMMdd")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingdaykeylongvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingdaykeylongvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingDayKeyLongVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按天分表路由,支持分表字段是"),s("code",[t._v("long")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMMdd")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBeginTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意必须返回固定时间,不然每次启动时间都会变动")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动自动建表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AutoCreateTableByTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意按天分表的路由自动建表的执行顺序为:")]),t._v(" "),s("ol",[s("li",[t._v('每天的23:59:00分,"0 59 23 * * ?"')]),t._v(" "),s("li",[t._v('每天的00:00:00分,"0 0 0 * * ?"')]),t._v(" "),s("li",[t._v('每天的00:01:00分,"0 1 0 * * ?"')])]),t._v(" "),s("p",[t._v("分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨"),s("code",[t._v("IncrementMinutes")]),t._v("分钟来创建对应的表tail")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingweekkeydatetimevirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingweekkeydatetimevirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingWeekKeyDateTimeVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按周分表路由,支持分表字段是"),s("code",[t._v("DateTime")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMMdd_dd")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingweekkeylongvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingweekkeylongvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingWeekKeyLongVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按周分表路由,支持分表字段是"),s("code",[t._v("long")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMMdd_dd")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBeginTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意必须返回固定时间,不然每次启动时间都会变动")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动自动建表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AutoCreateTableByTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意按周分表的路由自动建表的执行顺序为:")]),t._v(" "),s("ol",[s("li",[t._v('每次周末的23:59:00分,"0 59 23 ? * 1"')]),t._v(" "),s("li",[t._v('每次周一的00:00:00分,"0 0 0 ? * 2"')]),t._v(" "),s("li",[t._v('每次周一的00:01:00分,"0 1 0 ? * 2"')])]),t._v(" "),s("p",[t._v("分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨"),s("code",[t._v("IncrementMinutes")]),t._v("分钟来创建对应的表tail")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingmonthkeydatetimevirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingmonthkeydatetimevirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按月分表路由,支持分表字段是"),s("code",[t._v("DateTime")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMM")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingmonthkeylongvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingmonthkeylongvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingMonthKeyLongVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按月分表路由,支持分表字段是"),s("code",[t._v("long")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMM")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBeginTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意必须返回固定时间,不然每次启动时间都会变动")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动自动建表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AutoCreateTableByTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意按月分表的路由自动建表的执行顺序为:")]),t._v(" "),s("ol",[s("li",[t._v('每月的28、29、30、31日的23:59:00分,"0 59 23 28,29,30,31 * ?"')]),t._v(" "),s("li",[t._v('每月的1日的00:00:00分,"0 0 0 1 * ?"')]),t._v(" "),s("li",[t._v('每月的1日的00:01:00分,"0 1 0 1 * ?"')])]),t._v(" "),s("p",[t._v("分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨"),s("code",[t._v("IncrementMinutes")]),t._v("分钟来创建对应的表tail")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingyearkeydatetimevirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingyearkeydatetimevirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingYearKeyDateTimeVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按年分表路由,支持分表字段是"),s("code",[t._v("DateTime")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyy")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingyearkeylongvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingyearkeylongvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingYearKeyLongVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按年分表路由,支持分表字段是"),s("code",[t._v("long")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyy")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBeginTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意必须返回固定时间,不然每次启动时间都会变动")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动自动建表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AutoCreateTableByTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意按年分表的路由自动建表的执行顺序为:")]),t._v(" "),s("ol",[s("li",[t._v('每年的31日的23:59:00分,"0 59 23 31 12 ?"')]),t._v(" "),s("li",[t._v('每年的1日的00:00:00分,"0 0 0 1 1 ?"')]),t._v(" "),s("li",[t._v('每年的1日的00:01:00分,"0 1 0 1 1 ?"')])]),t._v(" "),s("p",[t._v("分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨"),s("code",[t._v("IncrementMinutes")]),t._v("分钟来创建对应的表tail")]),t._v(" "),s("p",[s("strong",[t._v("注意：所有的定时任务都可以设置为false,并且可以使用自身的定时任务来实现动态的创建表和添加表后缀")])]),t._v(" "),s("h2",{attrs:{id:"时间分表的定时信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间分表的定时信息"}},[t._v("#")]),t._v(" 时间分表的定时信息")]),t._v(" "),s("p",[t._v("为了保证可以让程序卡点发布还能正确创建对应的表信息和知道现有的表,所以存在三个节点进行创建表。\n但是可能会出现重复创建表的信息，也会出现表没创建的其他原因导致程序执行失败，所以这边对其进行了日志的过滤用户可以再使用默认的时间分表的情况下选择重写"),s("code",[t._v("ShowErrorLog")]),t._v("属性来输出任务执行时候的建表异常信息。")])])}),[],!1,null,null,null);a.default=n.exports},631:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("!!!默认xxxKeyLong的路由代表分片时间是毫秒的意思,需要自行判断你生成的long和"),s("code",[t._v("ShardingCoreHelper.ConvertDateTimeToLong(DateTime.Now)")]),t._v("是否一样!!!\n!!!默认xxxKeyLong的路由代表分片时间是毫秒的意思,需要自行判断你生成的long和"),s("code",[t._v("ShardingCoreHelper.ConvertDateTimeToLong(DateTime.Now)")]),t._v("是否一样!!!\n!!!默认xxxKeyLong的路由代表分片时间是毫秒的意思,需要自行判断你生成的long和"),s("code",[t._v("ShardingCoreHelper.ConvertDateTimeToLong(DateTime.Now)")]),t._v("是否一样!!!")])]),t._v(" "),s("h2",{attrs:{id:"默认路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认路由"}},[t._v("#")]),t._v(" 默认路由")]),t._v(" "),s("p",[t._v("分库提供了默认的路由分表则需要自己去实现,具体实现可以参考分库")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("抽象abstract")]),t._v(" "),s("th",[t._v("路由规则")]),t._v(" "),s("th",[t._v("tail")]),t._v(" "),s("th",[t._v("索引")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("AbstractSimpleShardingModKeyIntVirtualTableRoute")]),t._v(" "),s("td",[t._v("取模")]),t._v(" "),s("td",[t._v("0,1,2...")]),t._v(" "),s("td",[s("code",[t._v("=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingModKeyStringVirtualTableRoute")]),t._v(" "),s("td",[t._v("取模")]),t._v(" "),s("td",[t._v("0,1,2...")]),t._v(" "),s("td",[s("code",[t._v("=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间")]),t._v(" "),s("td",[t._v("yyyyMMdd")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingDayKeyLongVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间戳")]),t._v(" "),s("td",[t._v("yyyyMMdd")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingWeekKeyDateTimeVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间")]),t._v(" "),s("td",[t._v("yyyyMMdd_dd")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingWeekKeyLongVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间戳")]),t._v(" "),s("td",[t._v("yyyyMMdd_dd")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间")]),t._v(" "),s("td",[t._v("yyyyMM")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingMonthKeyLongVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间戳")]),t._v(" "),s("td",[t._v("yyyyMM")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingYearKeyDateTimeVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间")]),t._v(" "),s("td",[t._v("yyyy")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])]),t._v(" "),s("tr",[s("td",[t._v("AbstractSimpleShardingYearKeyLongVirtualTableRoute")]),t._v(" "),s("td",[t._v("按时间戳")]),t._v(" "),s("td",[t._v("yyyy")]),t._v(" "),s("td",[s("code",[t._v(">,>=,<,<=,=,contains")])])])])]),t._v(" "),s("p",[t._v("注:"),s("code",[t._v("contains")]),t._v("表示为"),s("code",[t._v("o=>ids.contains(o.shardingkey)")]),t._v("\n注:使用默认的按时间分表的路由规则会让你重写一个GetBeginTime的方法这个方法必须使用静态值如:new DateTime(2021,1,1)不可以用动态值比如DateTime.Now因为每次重新启动都会调用该方法动态情况下会导致每次都不一致")]),t._v(" "),s("h2",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[t._v("#")]),t._v(" 索引")]),t._v(" "),s("p",[t._v("所谓的索引就是支持的表达式比如支持分表字段等于某个值，那么框架就会针对这个值进行解析出对应的数据库分表应该是哪个,并且支持组合"),s("code",[t._v("and")]),t._v("、"),s("code",[t._v("or")]),t._v("。\n默认提供的分表路由里面已经实现了所谓的路由，如果你的查询是包含对应的路由那么框架可以大大减小数据库链接的开启。有助于程序的高性能。")]),t._v(" "),s("p",[t._v("假设我们是按id取模，那么如果你有指定的id对应值进行查询，我们就可以直接进行对分表/分库下进行数据源和表的定位，保证查询的高效。")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingmodkeyintvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingmodkeyintvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingModKeyIntVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的取模hash路由,分表字段是"),s("code",[t._v("int")]),t._v("类型,接受3个参数，第一个参数表示后缀的位数,第二位表示取模的基数，第三位是取模后缀不足的左补字符.")]),t._v(" "),s("p",[t._v("AbstractSimpleShardingModKeyIntVirtualTableRoute(3,6,'0')那么就是"),s("code",[t._v("000")]),t._v("、"),s("code",[t._v("001")]),t._v("、"),s("code",[t._v("002")]),t._v("、"),s("code",[t._v("003")]),t._v("、"),s("code",[t._v("004")]),t._v("、"),s("code",[t._v("005")])]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingmodkeystringvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingmodkeystringvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingModKeyStringVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的取模hash路由,分表字段是"),s("code",[t._v("string")]),t._v("类型,接受3个参数，第一个参数表示后缀的位数,第二位表示取模的基数，第三位是取模后缀不足的左补字符.")]),t._v(" "),s("p",[t._v("AbstractSimpleShardingModKeyStringVirtualTableRoute(3,6,'0')那么就是"),s("code",[t._v("000")]),t._v("、"),s("code",[t._v("001")]),t._v("、"),s("code",[t._v("002")]),t._v("、"),s("code",[t._v("003")]),t._v("、"),s("code",[t._v("004")]),t._v("、"),s("code",[t._v("005")])]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingdaykeydatetimevirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingdaykeydatetimevirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingDayKeyDateTimeVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按天分表路由,支持分表字段是"),s("code",[t._v("DateTime")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMMdd")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingdaykeylongvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingdaykeylongvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingDayKeyLongVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按天分表路由,支持分表字段是"),s("code",[t._v("long")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMMdd")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBeginTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意必须返回固定时间,不然每次启动时间都会变动")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动自动建表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AutoCreateTableByTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意按天分表的路由自动建表的执行顺序为:")]),t._v(" "),s("ol",[s("li",[t._v('每天的23:59:00分,"0 59 23 * * ?"')]),t._v(" "),s("li",[t._v('每天的00:00:00分,"0 0 0 * * ?"')]),t._v(" "),s("li",[t._v('每天的00:01:00分,"0 1 0 * * ?"')])]),t._v(" "),s("p",[t._v("分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨"),s("code",[t._v("IncrementMinutes")]),t._v("分钟来创建对应的表tail")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingweekkeydatetimevirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingweekkeydatetimevirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingWeekKeyDateTimeVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按周分表路由,支持分表字段是"),s("code",[t._v("DateTime")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMMdd_dd")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingweekkeylongvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingweekkeylongvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingWeekKeyLongVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按周分表路由,支持分表字段是"),s("code",[t._v("long")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMMdd_dd")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBeginTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意必须返回固定时间,不然每次启动时间都会变动")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动自动建表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AutoCreateTableByTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意按周分表的路由自动建表的执行顺序为:")]),t._v(" "),s("ol",[s("li",[t._v('每次周末的23:59:00分,"0 59 23 ? * 1"')]),t._v(" "),s("li",[t._v('每次周一的00:00:00分,"0 0 0 ? * 2"')]),t._v(" "),s("li",[t._v('每次周一的00:01:00分,"0 1 0 ? * 2"')])]),t._v(" "),s("p",[t._v("分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨"),s("code",[t._v("IncrementMinutes")]),t._v("分钟来创建对应的表tail")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingmonthkeydatetimevirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingmonthkeydatetimevirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingMonthKeyDateTimeVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按月分表路由,支持分表字段是"),s("code",[t._v("DateTime")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMM")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingmonthkeylongvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingmonthkeylongvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingMonthKeyLongVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按月分表路由,支持分表字段是"),s("code",[t._v("long")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyyMM")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBeginTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意必须返回固定时间,不然每次启动时间都会变动")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动自动建表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AutoCreateTableByTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意按月分表的路由自动建表的执行顺序为:")]),t._v(" "),s("ol",[s("li",[t._v('每月的28、29、30、31日的23:59:00分,"0 59 23 28,29,30,31 * ?"')]),t._v(" "),s("li",[t._v('每月的1日的00:00:00分,"0 0 0 1 * ?"')]),t._v(" "),s("li",[t._v('每月的1日的00:01:00分,"0 1 0 1 * ?"')])]),t._v(" "),s("p",[t._v("分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨"),s("code",[t._v("IncrementMinutes")]),t._v("分钟来创建对应的表tail")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingyearkeydatetimevirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingyearkeydatetimevirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingYearKeyDateTimeVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按年分表路由,支持分表字段是"),s("code",[t._v("DateTime")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyy")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"abstractsimpleshardingyearkeylongvirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstractsimpleshardingyearkeylongvirtualtableroute"}},[t._v("#")]),t._v(" AbstractSimpleShardingYearKeyLongVirtualTableRoute")]),t._v(" "),s("p",[t._v("该路由为简单的按年分表路由,支持分表字段是"),s("code",[t._v("long")]),t._v(",分表后的后缀为"),s("code",[t._v("yyyy")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[t._v("DateTime")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetBeginTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意必须返回固定时间,不然每次启动时间都会变动")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("DateTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//启动自动建表")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token return-type class-name"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AutoCreateTableByTime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[t._v("注意按年分表的路由自动建表的执行顺序为:")]),t._v(" "),s("ol",[s("li",[t._v('每年的31日的23:59:00分,"0 59 23 31 12 ?"')]),t._v(" "),s("li",[t._v('每年的1日的00:00:00分,"0 0 0 1 1 ?"')]),t._v(" "),s("li",[t._v('每年的1日的00:01:00分,"0 1 0 1 1 ?"')])]),t._v(" "),s("p",[t._v("分别会在这三个时间节点进行表的创建和数据表的动态添加,通过时间往后拨"),s("code",[t._v("IncrementMinutes")]),t._v("分钟来创建对应的表tail")]),t._v(" "),s("p",[s("strong",[t._v("注意：所有的定时任务都可以设置为false,并且可以使用自身的定时任务来实现动态的创建表和添加表后缀")])]),t._v(" "),s("h2",{attrs:{id:"时间分表的定时信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时间分表的定时信息"}},[t._v("#")]),t._v(" 时间分表的定时信息")]),t._v(" "),s("p",[t._v("为了保证可以让程序卡点发布还能正确创建对应的表信息和知道现有的表,所以存在三个节点进行创建表。\n但是可能会出现重复创建表的信息，也会出现表没创建的其他原因导致程序执行失败，所以这边对其进行了日志的过滤用户可以再使用默认的时间分表的情况下选择重写"),s("code",[t._v("ShowErrorLog")]),t._v("属性来输出任务执行时候的建表异常信息。")]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("！！！重写"),s("code",[t._v("GetCronExpressions()")]),t._v("方法后,请一定要重写"),s("code",[t._v("IncrementMinutes")]),t._v("值！！！")]),t._v(" "),s("p",[t._v("！！！重写"),s("code",[t._v("GetCronExpressions()")]),t._v("方法后,请一定要重写"),s("code",[t._v("IncrementMinutes")]),t._v("值！！！")]),t._v(" "),s("p",[t._v("！！！重写"),s("code",[t._v("GetCronExpressions()")]),t._v("方法后,请一定要重写"),s("code",[t._v("IncrementMinutes")]),t._v("值！！！")])])])}),[],!1,null,null,null);a.default=n.exports}}]);